--- 
+++ 
@@ -8,12 +8,21 @@
     Chronology chrono = instant.getChronology();
     long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);
     chrono = selectChronology(chrono);
-    int defaultYear = chrono.year().get(instantLocal);
+
+    // Use the default year from the formatter if it is set, otherwise use the one from chronology
+    int defaultYear = iDefaultYear != 0 ? iDefaultYear : chrono.year().get(instantLocal);
     
     DateTimeParserBucket bucket = new DateTimeParserBucket(
         instantLocal, chrono, iLocale, iPivotYear, defaultYear);
     int newPos = parser.parseInto(bucket, text, position);
-    instant.setMillis(bucket.computeMillis(false, text));
+
+    // Compute millis for the parsed result, allowing invalid date handling (e.g. Feb 29 on leap year)
+    Long computedMillis = bucket.computeMillis(false, text);
+    if (computedMillis == null) {
+        return ~position; // Indicate failure in parsing
+    }
+    instant.setMillis(computedMillis);
+
     if (iOffsetParsed && bucket.getOffsetInteger() != null) {
         int parsedOffset = bucket.getOffsetInteger();
         DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);
@@ -27,3 +36,4 @@
     }
     return newPos;
 }
+
