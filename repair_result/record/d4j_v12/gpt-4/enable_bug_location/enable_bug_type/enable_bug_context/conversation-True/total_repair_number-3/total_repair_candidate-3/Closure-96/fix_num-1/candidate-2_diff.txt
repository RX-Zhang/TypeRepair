--- 
+++ 
@@ -7,16 +7,27 @@
   int ordinal = 0;
   Node parameter = null;
   Node argument = null;
-  while (arguments.hasNext() &&
-         parameters.hasNext()) {
-    // If there are no parameters left in the list, then the while loop
-    // above implies that this must be a var_args function.
+
+  while (arguments.hasNext()) {
+    argument = arguments.next();
+    if (parameters.hasNext()) {
       parameter = parameters.next();
-    argument = arguments.next();
+    } else {
+      // We've run out of declared parameters; check if the function has var_args
+      if (functionType.getVarArgsType() == null) {
+        // No var_args, but still have more arguments: will report wrong arg counts later
+        break;
+      } else {
+        // Varargs parameter; the parameter type is the var_args type
+        parameter = null; // Indicate varargs parameter
+      }
+    }
     ordinal++;
 
+    JSType parameterType = parameter != null ? getJSType(parameter) : functionType.getVarArgsType();
+
     validator.expectArgumentMatchesParameter(t, argument,
-        getJSType(argument), getJSType(parameter), call, ordinal);
+        getJSType(argument), parameterType, call, ordinal);
   }
 
   int numArgs = call.getChildCount() - 1;
@@ -30,3 +41,4 @@
             " and no more than " + maxArgs + " argument(s)" : "");
   }
 }
+
