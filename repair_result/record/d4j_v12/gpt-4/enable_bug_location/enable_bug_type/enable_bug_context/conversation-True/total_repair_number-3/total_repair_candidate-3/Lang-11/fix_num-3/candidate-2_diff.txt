--- 
+++ 
@@ -17,51 +17,53 @@
                 end = Integer.MAX_VALUE;
             } else {
                 end = 'z' + 1;
-                start = ' ';                
+                start = ' ';
             }
         }
     }
 
+    if (end <= start) {
+        throw new IllegalArgumentException("Parameter end (" + end + ") must be greater than start (" + start + ")");
+    }
+
     char[] buffer = new char[count];
     int gap = end - start;
+    int index = 0;
 
-    while (count-- != 0) {
+    while (index < count) {
         char ch;
         if (chars == null) {
             ch = (char) (random.nextInt(gap) + start);
         } else {
-            ch = chars[random.nextInt(gap) + start];
+            ch = chars[random.nextInt(gap)];
         }
         if (letters && Character.isLetter(ch)
                 || numbers && Character.isDigit(ch)
                 || !letters && !numbers) {
-            if(ch >= 56320 && ch <= 57343) {
-                if(count == 0) {
-                    count++;
+            if (ch >= 56320 && ch <= 57343) {
+                if (index == count - 1) {
+                    continue;
                 } else {
                     // low surrogate, insert high surrogate after putting it in
-                    buffer[count] = ch;
-                    count--;
-                    buffer[count] = (char) (55296 + random.nextInt(128));
+                    buffer[index++] = ch;
+                    buffer[index++] = (char) (55296 + random.nextInt(128));
                 }
-            } else if(ch >= 55296 && ch <= 56191) {
-                if(count == 0) {
-                    count++;
+            } else if (ch >= 55296 && ch <= 56191) {
+                if (index == count - 1) {
+                    continue;
                 } else {
                     // high surrogate, insert low surrogate before putting it in
-                    buffer[count] = (char) (56320 + random.nextInt(128));
-                    count--;
-                    buffer[count] = ch;
+                    buffer[index++] = (char) (56320 + random.nextInt(128));
+                    buffer[index++] = ch;
                 }
-            } else if(ch >= 56192 && ch <= 56319) {
-                // private high surrogate, no effing clue, so skip it
-                count++;
+            } else if (ch >= 56192 && ch <= 56319) {
+                // private high surrogate, skip it
+                continue;
             } else {
-                buffer[count] = ch;
+                buffer[index++] = ch;
             }
-        } else {
-            count++;
         }
     }
     return new String(buffer);
 }
+
