--- 
+++ 
@@ -6,13 +6,22 @@
     }
     if (!isPositive(expected) || !isNonNegative(observed)) {
         throw new IllegalArgumentException(
-            "observed counts must be non-negative and expected counts must be postive");
+            "observed counts must be non-negative and expected counts must be positive");
     }
     double sumSq = 0.0d;
     double dev = 0.0d;
     for (int i = 0; i < observed.length; i++) {
-            dev = ((double) observed[i] - expected[i]);
-            sumSq += dev * dev / expected[i];
+        if (expected[i] <= 0) {
+            throw new IllegalArgumentException(
+                "expected counts must be positive");
+        }
+        if (observed[i] < 0) {
+            throw new IllegalArgumentException(
+                "observed counts must be non-negative");
+        }
+        dev = ((double) observed[i] - expected[i]);
+        sumSq += dev * dev / expected[i];
     }
     return sumSq;
 }
+
