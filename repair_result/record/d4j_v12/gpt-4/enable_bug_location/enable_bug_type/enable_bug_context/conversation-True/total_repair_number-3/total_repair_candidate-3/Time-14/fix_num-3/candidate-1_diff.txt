--- 
+++ 
@@ -4,15 +4,29 @@
     if (valueToAdd == 0) {
         return values;
     }
-        // month is largest field and being added to, such as month-day
+    // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-        return iChronology.get(partial, instant);
+        int[] newValues = iChronology.get(partial, instant);
+
+        // Handle end of month leap day adjustments
+        int newMonth = newValues[fieldIndex];
+        int newDay = newValues[fieldIndex + 1 < newValues.length ? fieldIndex + 1 : fieldIndex];
+        int maxDay = iChronology.getDaysInYearMonth(iChronology.getYear(instant), newMonth);
+        if (newDay > maxDay) {
+            newDay = maxDay;
+            // Recalculate instant with corrected day
+            instant = iChronology.getYearMonthDayMillis(iChronology.getYear(instant), newMonth, newDay) + iChronology.getMillisOfDay(instant);
+            newValues = iChronology.get(partial, instant);
+        }
+
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
+
