--- 
+++ 
@@ -3,8 +3,7 @@
   // I've been unable to think of any cases where this indicates a bug,
   // and apparently some people like keeping these semicolons around,
   // so we'll allow it.
-  if (n.isEmpty() ||
-      n.isComma()) {
+  if (n.isEmpty() || n.isComma()) {
     return;
   }
 
@@ -40,26 +39,28 @@
       }
     }
   } else if (parent.getType() != Token.EXPR_RESULT && parent.getType() != Token.BLOCK) {
-    if (! (parent.getType() == Token.FOR && parent.getChildCount() == 4 && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
+    if (!(parent.getType() == Token.FOR 
+          && parent.getChildCount() == 4 
+          && (n == parent.getFirstChild() || n == parent.getFirstChild().getNext().getNext()))) {
       return;
     }
   }
-  if (
-      (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-    String msg = "This code lacks side-effects. Is there a bug?";
-    if (n.isString()) {
-      msg = "Is there a missing '+' on the previous line?";
-    } else if (isSimpleOp) {
-      msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
-          "' operator is not being used.";
-    }
+  if (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler())) {
+    // If we are protecting side-effect free code, save the node for replacement.
+    if (protectSideEffectFreeCode) {
+      problemNodes.add(n);
+    } else {
+      String msg = "This code lacks side-effects. Is there a bug?";
+      if (n.isString()) {
+        msg = "Is there a missing '+' on the previous line?";
+      } else if (isSimpleOp) {
+        msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
+            "' operator is not being used.";
+      }
 
-    t.getCompiler().report(
-        t.makeError(n, level, USELESS_CODE_ERROR, msg));
-    // TODO(johnlenz): determine if it is necessary to
-    // try to protect side-effect free statements as well.
-    if (!NodeUtil.isStatement(n)) {
-      problemNodes.add(n);
+      t.getCompiler().report(
+          t.makeError(n, level, USELESS_CODE_ERROR, msg));
     }
   }
 }
+
