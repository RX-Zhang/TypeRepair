--- 
+++ 
@@ -5,19 +5,32 @@
         int start = index + 2;
         boolean isHex = false;
 
+        if (start >= seqEnd) {
+            // No more characters after &#, so nothing to translate
+            return 0;
+        }
+
         char firstChar = input.charAt(start);
         if(firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
 
-            // Check there's more than just an x after the &#
+            if (start >= seqEnd) {
+                // No digits after &#x or &#X
+                return 0;
+            }
         }
 
         int end = start;
         // Note that this supports character codes without a ; on the end
-        while(input.charAt(end) != ';') 
-        {
+        while(end < seqEnd && input.charAt(end) != ';') {
             end++;
+        }
+
+        // If reached end without finding a ';', don't throw exception, treat as unfinished entity
+        if(end == seqEnd) {
+            // The entity is unfinished, return 0 to indicate no translation done
+            return 0;
         }
 
         int entityValue;
@@ -28,7 +41,7 @@
                 entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
             }
         } catch(NumberFormatException nfe) {
-        System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
+            System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
             return 0;
         }
 
@@ -40,8 +53,8 @@
             out.write(entityValue);
         }
 
-
         return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
     return 0;
 }
+
