--- 
+++ 
@@ -1,23 +1,24 @@
 public Complex reciprocal() {
-    if (isNaN) {
+    if (isNaN()) {
         return NaN;
     }
 
     if (real == 0.0 && imaginary == 0.0) {
-        return NaN;
+        return INF;
     }
 
-    if (isInfinite) {
+    if (isInfinite()) {
         return ZERO;
     }
 
     if (FastMath.abs(real) < FastMath.abs(imaginary)) {
         double q = real / imaginary;
-        double scale = 1. / (real * q + imaginary);
+        double scale = 1.0 / (real * q + imaginary);
         return createComplex(scale * q, -scale);
     } else {
         double q = imaginary / real;
-        double scale = 1. / (imaginary * q + real);
+        double scale = 1.0 / (imaginary * q + real);
         return createComplex(scale, -scale * q);
     }
 }
+
