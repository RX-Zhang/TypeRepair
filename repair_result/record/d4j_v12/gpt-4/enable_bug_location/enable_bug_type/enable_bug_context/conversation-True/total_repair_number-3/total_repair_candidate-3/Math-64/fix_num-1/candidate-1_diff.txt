--- 
+++ 
@@ -53,7 +53,7 @@
                 if (dk == 0) {
                     dk = 1.0;
                 }
-                double xk = dk * point[k];
+                double xk = point[k] / dk;
                 xNorm  += xk * xk;
                 diag[k] = dk;
             }
@@ -111,7 +111,7 @@
                 int pj = permutation[j];
                 lmDir[pj] = -lmDir[pj];
                 point[pj] = oldX[pj] + lmDir[pj];
-                double s = diag[pj] * lmDir[pj];
+                double s = lmDir[pj] / diag[j];
                 lmNorm  += s * s;
             }
             lmNorm = Math.sqrt(lmNorm);
@@ -158,11 +158,11 @@
             if (ratio <= 0.25) {
                 double tmp =
                     (actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5;
-                    if ((0.1 * cost >= previousCost) || (tmp < 0.1)) {
-                        tmp = 0.1;
-                    }
-                    delta = tmp * Math.min(delta, 10.0 * lmNorm);
-                    lmPar /= tmp;
+                if ((0.1 * cost >= previousCost) || (tmp < 0.1)) {
+                    tmp = 0.1;
+                }
+                delta = tmp * Math.min(delta, 10.0 * lmNorm);
+                lmPar /= tmp;
             } else if ((lmPar == 0) || (ratio >= 0.75)) {
                 delta = 2 * lmNorm;
                 lmPar *= 0.5;
@@ -193,7 +193,7 @@
                 oldRes    = tmpVec;
             }
             if (checker==null) {
-            	if (((Math.abs(actRed) <= costRelativeTolerance) &&
+                if (((Math.abs(actRed) <= costRelativeTolerance) &&
                     (preRed <= costRelativeTolerance) &&
                     (ratio <= 2.0)) ||
                    (delta <= parRelativeTolerance * xNorm)) {
@@ -222,3 +222,4 @@
     }
 
 }
+
