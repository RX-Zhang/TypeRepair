--- 
+++ 
@@ -7,13 +7,28 @@
   int ordinal = 0;
   Node parameter = null;
   Node argument = null;
-  while (arguments.hasNext() &&
-         parameters.hasNext()) {
-    // If there are no parameters left in the list, then the while loop
-    // above implies that this must be a var_args function.
-      parameter = parameters.next();
+
+  // Iterate over all arguments, not limited by number of parameters,
+  // to properly handle var_args and extra arguments.
+  while (arguments.hasNext()) {
     argument = arguments.next();
     ordinal++;
+
+    if (parameters.hasNext()) {
+      parameter = parameters.next();
+    } else {
+      // If no parameters left, treat as var_args parameter
+      if (!functionType.isVariadic()) {
+        // Not variadic, so we break out to check argument count later
+        break;
+      }
+      // Use the last parameter as the var_args parameter type
+      // (var_args is represented by last parameter repeated)
+      if (parameter == null) {
+        // Defensive: no parameters at all, so no var_args either
+        break;
+      }
+    }
 
     validator.expectArgumentMatchesParameter(t, argument,
         getJSType(argument), getJSType(parameter), call, ordinal);
@@ -30,3 +45,4 @@
             " and no more than " + maxArgs + " argument(s)" : "");
   }
 }
+
