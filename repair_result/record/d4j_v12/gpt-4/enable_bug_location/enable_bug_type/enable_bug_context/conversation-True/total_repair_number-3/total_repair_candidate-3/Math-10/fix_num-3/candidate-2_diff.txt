--- 
+++ 
@@ -10,7 +10,10 @@
     add(tmp1, 0, tmp2, 0, tmp2, 0);                 // x^2 + y^2
     rootN(tmp2, 0, 2, tmp1, 0);                     // r = sqrt(x^2 + y^2)
 
-    if (x[xOffset] >= 0) {
+    double xVal = x[xOffset];
+    double yVal = y[yOffset];
+
+    if (xVal > 0 || (xVal == 0 && yVal >= 0)) {
 
         // compute atan2(y, x) = 2 atan(y / (r + x))
         add(tmp1, 0, x, xOffset, tmp2, 0);          // r + x
@@ -20,7 +23,7 @@
             result[resultOffset + i] = 2 * tmp2[i]; // 2 * atan(y / (r + x))
         }
 
-    } else {
+    } else if (xVal < 0 || (xVal == 0 && yVal < 0)) {
 
         // compute atan2(y, x) = +/- pi - 2 atan(y / (r - x))
         subtract(tmp1, 0, x, xOffset, tmp2, 0);     // r - x
@@ -32,8 +35,14 @@
             result[resultOffset + i] = -2 * tmp2[i]; // +/-pi - 2 * atan(y / (r - x))
         }
 
+    } else {
+        // x = 0 and y = 0, atan2(0,0) = 0 with sign based on y and x signs
+        for (int i = 0; i < getSize(); ++i) {
+            result[resultOffset + i] = 0.0;
+        }
     }
 
     // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly
 
 }
+
