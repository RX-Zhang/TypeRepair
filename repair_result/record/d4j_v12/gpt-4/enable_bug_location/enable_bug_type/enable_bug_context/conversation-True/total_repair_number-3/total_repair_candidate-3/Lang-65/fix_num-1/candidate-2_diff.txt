--- 
+++ 
@@ -3,23 +3,38 @@
         throw new ArithmeticException("Calendar value too large for accurate calculations");
     }
     
-
     // ----------------- Fix for LANG-59 ---------------------- START ---------------
     // see http://issues.apache.org/jira/browse/LANG-59
     //
     // Manually truncate milliseconds, seconds and minutes, rather than using
     // Calendar methods.
-
-
+    
     // truncate milliseconds
-
-    // truncate seconds
-
-    // truncate minutes
-
-    // reset time
+    for (int i = 0; i < fields.length; i++) {
+        for (int j = 0; j < fields[i].length; j++) {
+            if (fields[i][j] == field) {
+                // Once the matching field is found, truncate the smaller fields
+                switch (field) {
+                    case Calendar.MILLISECOND:
+                        // no smaller fields to truncate
+                        break;
+                    case Calendar.SECOND:
+                        val.set(Calendar.MILLISECOND, 0);
+                        break;
+                    case Calendar.MINUTE:
+                        val.set(Calendar.MILLISECOND, 0);
+                        val.set(Calendar.SECOND, 0);
+                        break;
+                    default:
+                        break;
+                }
+                i = fields.length; // break outer loop
+                j = fields[i - 1].length; // break inner loop
+            }
+        }
+    }
     // ----------------- Fix for LANG-59 ----------------------- END ----------------
-
+    
     boolean roundUp = false;
     for (int i = 0; i < fields.length; i++) {
         for (int j = 0; j < fields[i].length; j++) {
@@ -37,7 +52,7 @@
                             val.add(Calendar.MONTH, 1);
                         }
                     } else {
-                        //We need at add one to this field since the
+                        //We need to need to add one to this field since the
                         //  last number causes us to round up
                         val.add(fields[i][0], 1);
                     }
@@ -54,7 +69,7 @@
                 if (fields[i][0] == Calendar.DATE) {
                     //If we're going to drop the DATE field's value,
                     //  we want to do this our own way.
-                    //We need to subtrace 1 since the date has a minimum of 1
+                    //We need to subtract 1 since the date has a minimum of 1
                     offset = val.get(Calendar.DATE) - 1;
                     //If we're above 15 days adjustment, that means we're in the
                     //  bottom half of the month and should stay accordingly.
@@ -88,8 +103,9 @@
             roundUp = offset > ((max - min) / 2);
         }
         //We need to remove this field
-            val.set(fields[i][0], val.get(fields[i][0]) - offset);
+        val.set(fields[i][0], val.get(fields[i][0]) - offset);
     }
     throw new IllegalArgumentException("The field " + field + " is not supported");
 
 }
+
