--- 
+++ 
@@ -105,6 +105,9 @@
             // determine the Levenberg-Marquardt parameter
             determineLMParameter(oldRes, delta, diag, work1, work2, work3);
 
+            // determine the direction based on the current lmPar value
+            determineLMDirection(oldRes, diag, work2, work3);
+
             // compute the new point and the norm of the evolution direction
             double lmNorm = 0;
             for (int j = 0; j < solvedCols; ++j) {
@@ -158,11 +161,11 @@
             if (ratio <= 0.25) {
                 double tmp =
                     (actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5;
-                    if ((0.1 * cost >= previousCost) || (tmp < 0.1)) {
-                        tmp = 0.1;
-                    }
-                    delta = tmp * Math.min(delta, 10.0 * lmNorm);
-                    lmPar /= tmp;
+                if ((0.1 * cost >= previousCost) || (tmp < 0.1)) {
+                    tmp = 0.1;
+                }
+                delta = tmp * Math.min(delta, 10.0 * lmNorm);
+                lmPar /= tmp;
             } else if ((lmPar == 0) || (ratio >= 0.75)) {
                 delta = 2 * lmNorm;
                 lmPar *= 0.5;
@@ -193,12 +196,12 @@
                 oldRes    = tmpVec;
             }
             if (checker==null) {
-            	if (((Math.abs(actRed) <= costRelativeTolerance) &&
+                if (((Math.abs(actRed) <= costRelativeTolerance) &&
                     (preRed <= costRelativeTolerance) &&
                     (ratio <= 2.0)) ||
                    (delta <= parRelativeTolerance * xNorm)) {
                    return current;
-               }
+                }
             } else {
                 if (checker.converged(getIterations(), previous, current)) {
                     return current;
@@ -222,3 +225,4 @@
     }
 
 }
+
