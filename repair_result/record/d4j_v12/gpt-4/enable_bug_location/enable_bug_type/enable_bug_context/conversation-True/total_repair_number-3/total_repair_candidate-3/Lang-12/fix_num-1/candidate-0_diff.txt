--- 
+++ 
@@ -5,56 +5,62 @@
     } else if (count < 0) {
         throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");
     }
+    if (chars != null && chars.length == 0) {
+        throw new IllegalArgumentException("The chars array must not be empty");
+    }
 
     if (start == 0 && end == 0) {
+        if (chars != null) {
+            end = chars.length;
+        } else {
             if (!letters && !numbers) {
+                start = 0;
                 end = Integer.MAX_VALUE;
             } else {
+                start = ' ';
                 end = 'z' + 1;
-                start = ' ';                
             }
+        }
     }
 
+    int gap = (chars == null) ? end - start : chars.length;
+
     char[] buffer = new char[count];
-    int gap = end - start;
+    int pos = 0;
 
-    while (count-- != 0) {
+    while (pos < count) {
         char ch;
         if (chars == null) {
             ch = (char) (random.nextInt(gap) + start);
         } else {
-            ch = chars[random.nextInt(gap) + start];
+            ch = chars[random.nextInt(gap)];
         }
         if (letters && Character.isLetter(ch)
                 || numbers && Character.isDigit(ch)
                 || !letters && !numbers) {
-            if(ch >= 56320 && ch <= 57343) {
-                if(count == 0) {
-                    count++;
-                } else {
-                    // low surrogate, insert high surrogate after putting it in
-                    buffer[count] = ch;
-                    count--;
-                    buffer[count] = (char) (55296 + random.nextInt(128));
+            // handle surrogate pairs properly
+            if (ch >= 56320 && ch <= 57343) {
+                // low surrogate range
+                if (pos == count - 1) {
+                    continue; // no room for high surrogate, skip char
                 }
-            } else if(ch >= 55296 && ch <= 56191) {
-                if(count == 0) {
-                    count++;
-                } else {
-                    // high surrogate, insert low surrogate before putting it in
-                    buffer[count] = (char) (56320 + random.nextInt(128));
-                    count--;
-                    buffer[count] = ch;
+                buffer[pos++] = ch;
+                buffer[pos++] = (char) (55296 + random.nextInt(128));
+            } else if (ch >= 55296 && ch <= 56191) {
+                // high surrogate range
+                if (pos == count - 1) {
+                    continue; // no room for low surrogate, skip char
                 }
-            } else if(ch >= 56192 && ch <= 56319) {
-                // private high surrogate, no effing clue, so skip it
-                count++;
+                buffer[pos++] = (char) (56320 + random.nextInt(128));
+                buffer[pos++] = ch;
+            } else if (ch >= 56192 && ch <= 56319) {
+                // private high surrogate, skip
+                continue;
             } else {
-                buffer[count] = ch;
+                buffer[pos++] = ch;
             }
-        } else {
-            count++;
         }
     }
-    return new String(buffer);
+    return new String(buffer, 0, pos);
 }
+
