--- 
+++ 
@@ -53,6 +53,8 @@
         }
         hNew = initializeStep(forward, getOrder(), scale,
                               stepStart, y, yDotK[0], yTmp, yDotK[1]);
+        // Ensure hNew is filtered to be within allowed step size bounds
+        hNew = filterStep(hNew, forward, false);
         firstTime = false;
       }
 
@@ -87,8 +89,8 @@
       if (error >= 1.0) {
         // reject the step and attempt to reduce error by stepsize control
         final double factor =
-            FastMath.min(maxGrowth,
-                         FastMath.max(minReduction, safety * FastMath.pow(error, exp)));
+            FastMath.min(getMaxGrowth(),
+                         FastMath.max(getMinReduction(), getSafety() * FastMath.pow(error, exp)));
         hNew = filterStep(stepSize * factor, forward, false);
       }
 
@@ -113,7 +115,7 @@
 
         // stepsize control for next step
         final double factor =
-            FastMath.min(maxGrowth, FastMath.max(minReduction, safety * FastMath.pow(error, exp)));
+            FastMath.min(getMaxGrowth(), FastMath.max(getMinReduction(), getSafety() * FastMath.pow(error, exp)));
         final double  scaledH    = stepSize * factor;
         final double  nextT      = stepStart + scaledH;
         final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);
@@ -136,3 +138,4 @@
   resetInternalState();
 
 }
+
