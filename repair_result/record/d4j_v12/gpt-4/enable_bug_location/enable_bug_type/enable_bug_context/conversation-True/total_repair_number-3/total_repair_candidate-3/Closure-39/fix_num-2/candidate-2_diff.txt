--- 
+++ 
@@ -1,7 +1,7 @@
 String toStringHelper(boolean forAnnotations) {
   if (hasReferenceName()) {
     return getReferenceName();
-  } else if (prettyPrint) {
+  } else if (prettyPrint && !forAnnotations) {
     // Don't pretty print recursively.
     prettyPrint = false;
 
@@ -9,7 +9,7 @@
     Set<String> propertyNames = Sets.newTreeSet();
     for (ObjectType current = this;
          current != null && !current.isNativeObjectType() &&
-             propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
+             propertyNames.size() < MAX_PRETTY_PRINTED_PROPERTIES;
          current = current.getImplicitPrototype()) {
       propertyNames.addAll(current.getOwnPropertyNames());
     }
@@ -25,10 +25,14 @@
 
       sb.append(property);
       sb.append(": ");
-      sb.append(getPropertyType(property).toString());
+      if (forAnnotations) {
+        sb.append(getPropertyType(property).toAnnotationString());
+      } else {
+        sb.append(getPropertyType(property).toString());
+      }
 
       ++i;
-      if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
+      if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES && propertyNames.size() > MAX_PRETTY_PRINTED_PROPERTIES) {
         sb.append(", ...");
         break;
       }
@@ -38,7 +42,33 @@
 
     prettyPrint = true;
     return sb.toString();
+  } else if (forAnnotations) {
+    // Provide full list for annotations
+    StringBuilder sb = new StringBuilder();
+    sb.append("{");
+
+    Set<String> propertyNames = Sets.newTreeSet();
+    for (ObjectType current = this; 
+         current != null && !current.isNativeObjectType();
+         current = current.getImplicitPrototype()) {
+      propertyNames.addAll(current.getOwnPropertyNames());
+    }
+
+    int i = 0;
+    for (String property : propertyNames) {
+      if (i > 0) {
+        sb.append(", ");
+      }
+      sb.append(property);
+      sb.append(": ");
+      sb.append(getPropertyType(property).toAnnotationString());
+      i++;
+    }
+
+    sb.append("}");
+    return sb.toString();
   } else {
     return "{...}";
   }
 }
+
