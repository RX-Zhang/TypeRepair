--- 
+++ 
@@ -7,16 +7,28 @@
   int ordinal = 0;
   Node parameter = null;
   Node argument = null;
-  while (arguments.hasNext() &&
-         parameters.hasNext()) {
-    // If there are no parameters left in the list, then the while loop
-    // above implies that this must be a var_args function.
-      parameter = parameters.next();
+
+  boolean isVarArgs = functionType.isVarArgs();
+
+  while (arguments.hasNext()) {
     argument = arguments.next();
     ordinal++;
 
-    validator.expectArgumentMatchesParameter(t, argument,
-        getJSType(argument), getJSType(parameter), call, ordinal);
+    if (parameters.hasNext()) {
+      parameter = parameters.next();
+      validator.expectArgumentMatchesParameter(t, argument,
+          getJSType(argument), getJSType(parameter), call, ordinal);
+    } else {
+      // No more parameters, check if var_args, validate accordingly
+      if (isVarArgs) {
+        JSType restParamType = functionType.getRestFormalsType();
+        validator.expectArgumentMatchesParameter(t, argument,
+            getJSType(argument), restParamType, call, ordinal);
+      } else {
+        // No matching parameter and no var_args, report wrong argument count
+        break;
+      }
+    }
   }
 
   int numArgs = call.getChildCount() - 1;
@@ -30,3 +42,4 @@
             " and no more than " + maxArgs + " argument(s)" : "");
   }
 }
+
