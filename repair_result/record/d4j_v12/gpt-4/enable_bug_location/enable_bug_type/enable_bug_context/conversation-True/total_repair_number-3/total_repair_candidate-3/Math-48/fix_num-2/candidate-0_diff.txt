--- 
+++ 
@@ -27,11 +27,15 @@
     // larger than the right bound.
     boolean inverted = false;
 
+    // Keep track of evaluations to detect stuck situations.
+    int evaluations = 0;
+
     // Keep finding better approximations.
     while (true) {
         // Calculate the next approximation.
         final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));
         final double fx = computeObjectiveValue(x);
+        evaluations++;
 
         // If the new approximation is the exact root, return it. Since
         // this is not an under-approximation or an over-approximation,
@@ -58,6 +62,9 @@
             case REGULA_FALSI:
                 // Detect early that algorithm is stuck, instead of waiting
                 // for the maximum number of iterations to be exceeded.
+                if (evaluations > getMaxEvaluations()) {
+                    throw new TooManyEvaluationsException(getMaxEvaluations());
+                }
                 break;
             default:
                 // Should never happen.
@@ -121,3 +128,4 @@
         }
     }
 }
+
