--- 
+++ 
@@ -27,15 +27,15 @@
         // there's a degeneracy as indicated by a tie in the minimum ratio test
 
         // 1. check if there's an artificial variable that can be forced out of the basis
-            for (Integer row : minRatioPositions) {
-                for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
-                    int column = i + tableau.getArtificialVariableOffset();
-                    final double entry = tableau.getEntry(row, column);
-                    if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
-                        return row;
-                    }
+        for (Integer row : minRatioPositions) {
+            for (int i = 0; i < tableau.getNumArtificialVariables(); i++) {
+                int column = i + tableau.getArtificialVariableOffset();
+                final double entry = tableau.getEntry(row, column);
+                if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {
+                    return row;
                 }
             }
+        }
 
         // 2. apply Bland's rule to prevent cycling:
         //    take the row for which the corresponding basic variable has the smallest index
@@ -46,20 +46,24 @@
         // Additional heuristic: if we did not get a solution after half of maxIterations
         //                       revert to the simple case of just returning the top-most row
         // This heuristic is based on empirical data gathered while investigating MATH-828.
-            Integer minRow = null;
-            int minIndex = tableau.getWidth();
-            for (Integer row : minRatioPositions) {
-                int i = tableau.getNumObjectiveFunctions();
-                for (; i < tableau.getWidth() - 1 && minRow != row; i++) {
-                    if (row == tableau.getBasicRow(i)) {
-                        if (i < minIndex) {
-                            minIndex = i;
-                            minRow = row;
-                        }
+        Integer minRow = null;
+        int minIndex = tableau.getWidth();
+        for (Integer row : minRatioPositions) {
+            for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {
+                if (row.equals(tableau.getBasicRow(i))) {
+                    if (i < minIndex) {
+                        minIndex = i;
+                        minRow = row;
                     }
+                    break;
                 }
             }
-            return minRow;
+        }
+        if (minRow == null) {
+            return minRatioPositions.get(0);
+        }
+        return minRow;
     }
     return minRatioPositions.get(0);
 }
+
