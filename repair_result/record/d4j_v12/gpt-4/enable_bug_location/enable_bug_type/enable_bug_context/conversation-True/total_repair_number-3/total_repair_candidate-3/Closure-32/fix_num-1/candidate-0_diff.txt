--- 
+++ 
@@ -33,12 +33,12 @@
       case STAR:
         if (ignoreStar) {
           // Mark the position after the star as the new start of the line.
+          // We do not append anything here since the star is just a leading '*' on the line.
         } else {
           // The star is part of the comment.
-          if (builder.length() > 0) {
+          if (builder.length() > 0 && builder.charAt(builder.length() - 1) != '\n') {
             builder.append(' ');
           }
-
           builder.append('*');
         }
 
@@ -49,7 +49,6 @@
         if (option != WhitespaceOption.SINGLE_LINE) {
           builder.append("\n");
         }
-
         ignoreStar = true;
         token = next();
         continue;
@@ -58,7 +57,7 @@
         ignoreStar = false;
         state = State.SEARCHING_ANNOTATION;
 
-            // All tokens must be separated by a space.
+        // All tokens must be separated by a space.
 
         if (token == JsDocToken.EOC ||
             token == JsDocToken.EOF ||
@@ -83,7 +82,7 @@
           return new ExtractionInfo(multilineText, token);
         }
 
-        if (builder.length() > 0) {
+        if (builder.length() > 0 && builder.charAt(builder.length() - 1) != '\n') {
           builder.append(' ');
         }
         builder.append(toString(token));
@@ -99,3 +98,4 @@
     }
   } while (true);
 }
+
