--- 
+++ 
@@ -20,7 +20,14 @@
     String dec;
     String exp;
     int decPos = str.indexOf('.');
-    int expPos = str.indexOf('e') + str.indexOf('E') + 1;
+    int expPosE = str.indexOf('e');
+    int expPosBigE = str.indexOf('E');
+    int expPos = -1;
+    if (expPosE > -1 && expPosBigE > -1) {
+        expPos = Math.min(expPosE, expPosBigE);
+    } else {
+        expPos = Math.max(expPosE, expPosBigE);
+    }
 
     if (decPos > -1) {
 
@@ -68,7 +75,7 @@
             case 'f' :
             case 'F' :
                 try {
-                    Float f = NumberUtils.createFloat(numeric);
+                    Float f = createFloat(numeric);
                     if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {
                         //If it's too big for a float or the float value = 0 and the string
                         //has non-zeros in it, then float does not have the precision we want
@@ -78,12 +85,13 @@
                 } catch (NumberFormatException nfe) {
                     // ignore the bad number
                 }
+
                 //$FALL-THROUGH$
             case 'd' :
             case 'D' :
                 try {
-                    Double d = NumberUtils.createDouble(numeric);
-                    if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
+                    Double d = createDouble(numeric);
+                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
                         return d;
                     }
                 } catch (NumberFormatException nfe) {
@@ -146,3 +154,4 @@
         }
     }
 }
+
