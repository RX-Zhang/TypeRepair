--- 
+++ 
@@ -46,20 +46,21 @@
   }
   if (
       (isSimpleOp || !NodeUtil.mayHaveSideEffects(n, t.getCompiler()))) {
-    String msg = "This code lacks side-effects. Is there a bug?";
-    if (n.isString()) {
-      msg = "Is there a missing '+' on the previous line?";
-    } else if (isSimpleOp) {
-      msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
-          "' operator is not being used.";
-    }
+    // protect side-effect free code by wrapping it in a preservation call
+    if (protectSideEffectFreeCode && !NodeUtil.isStatement(n)) {
+      problemNodes.add(n);
+    } else {
+      String msg = "This code lacks side-effects. Is there a bug?";
+      if (n.isString()) {
+        msg = "Is there a missing '+' on the previous line?";
+      } else if (isSimpleOp) {
+        msg = "The result of the '" + Token.name(n.getType()).toLowerCase() +
+            "' operator is not being used.";
+      }
 
-    t.getCompiler().report(
-        t.makeError(n, level, USELESS_CODE_ERROR, msg));
-    // TODO(johnlenz): determine if it is necessary to
-    // try to protect side-effect free statements as well.
-    if (!NodeUtil.isStatement(n)) {
-      problemNodes.add(n);
+      t.getCompiler().report(
+          t.makeError(n, level, USELESS_CODE_ERROR, msg));
     }
   }
 }
+
