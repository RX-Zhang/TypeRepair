--- 
+++ 
@@ -3,14 +3,9 @@
   Node callTarget = n.getFirstChild();
   if (callTarget != null && callTarget.isName() &&
         callTarget.getString().equals("String")) {
-    // Fold String(a) to '' + (a) on immutable literals,
-    // which allows further optimizations
-    //
-    // We can't do this in the general case, because String(a) has
-    // slightly different semantics than '' + (a). See
-    // http://code.google.com/p/closure-compiler/issues/detail?id=759
+    // Only fold String(a) to '' + (a) if there is exactly one argument.
     Node value = callTarget.getNext();
-    if (value != null) {
+    if (value != null && value.getNext() == null) {
       Node addition = IR.add(
           IR.string("").srcref(callTarget),
           value.detachFromParent());
@@ -21,3 +16,4 @@
   }
   return n;
 }
+
