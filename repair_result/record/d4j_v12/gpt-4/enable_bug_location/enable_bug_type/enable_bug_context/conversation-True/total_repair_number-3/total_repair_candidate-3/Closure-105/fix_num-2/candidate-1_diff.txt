--- 
+++ 
@@ -5,7 +5,7 @@
   }
 
   Node arrayNode = left.getFirstChild();
-  Node functionName = arrayNode.getNext();
+  Node functionName = left.getNext();
 
   if ((arrayNode.getType() != Token.ARRAYLIT) ||
       !functionName.getString().equals("join")) {
@@ -42,8 +42,8 @@
     foldedSize += sb.length() + 2;
     arrayFoldedChildren.add(Node.newString(sb.toString()));
   }
-  // one for each comma.
-  foldedSize += arrayFoldedChildren.size() - 1;
+  // Add commas length: one for each comma.
+  foldedSize += Math.max(0, arrayFoldedChildren.size() - 1) * joinString.length();
 
   int originalSize = InlineCostEstimator.getCost(n);
   switch (arrayFoldedChildren.size()) {
@@ -87,3 +87,4 @@
   }
   t.getCompiler().reportCodeChange();
 }
+
