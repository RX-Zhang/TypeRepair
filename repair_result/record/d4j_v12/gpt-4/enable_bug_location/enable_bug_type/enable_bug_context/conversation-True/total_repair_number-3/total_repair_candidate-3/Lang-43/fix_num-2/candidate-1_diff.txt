--- 
+++ 
@@ -6,23 +6,29 @@
         return appendTo == null ? null : appendTo.append(QUOTE);
     }
     int lastHold = start;
-    for (int i = pos.getIndex(); i < pattern.length(); i++) {
-        if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-            appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                    QUOTE);
-            pos.setIndex(i + ESCAPED_QUOTE.length());
+    for (;;) {
+        int index = pos.getIndex();
+        if (index >= pattern.length()) {
+            throw new IllegalArgumentException(
+                    "Unterminated quoted string at position " + start);
+        }
+        if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, index)) {
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, index - lastHold).append(QUOTE);
+            }
+            pos.setIndex(index + ESCAPED_QUOTE.length());
             lastHold = pos.getIndex();
             continue;
         }
-        switch (c[pos.getIndex()]) {
-        case QUOTE:
-            next(pos);
-            return appendTo == null ? null : appendTo.append(c, lastHold,
-                    pos.getIndex() - lastHold);
-        default:
-            next(pos);
+        char ch = c[index];
+        if (ch == QUOTE) {
+            pos.setIndex(index + 1);
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, pos.getIndex() - lastHold);
+            }
+            return appendTo;
         }
+        pos.setIndex(index + 1);
     }
-    throw new IllegalArgumentException(
-            "Unterminated quoted string at position " + start);
 }
+
