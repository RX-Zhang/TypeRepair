--- 
+++ 
@@ -33,7 +33,11 @@
         return null;
     }
     
-        // minus signs should be leading, invalid expression
+    // minus signs must be leading, invalid expression
+    if (num.intValue() < 0) {
+        pos.setIndex(initialIndex);
+        return null;
+    }
 
     // parse '/'
     int startIndex = pos.getIndex();
@@ -44,10 +48,10 @@
         // return num as a fraction
         return new Fraction(num.intValue(), 1);
     case '/' :
-        // found '/', continue parsing denominator
+        // '/', continue parsing denominator
         break;
     default :
-        // invalid '/'
+        invalid '/'
         // set index back to initial, error index should be the last
         // character examined.
         pos.setIndex(initialIndex);
@@ -68,10 +72,15 @@
         return null;
     }
     
-        // minus signs must be leading, invalid
+    // minus signs must be leading, invalid
+    if (den.intValue() < 0) {
+        pos.setIndex(initialIndex);
+        return null;
+    }
 
     int w = whole.intValue();
     int n = num.intValue();
     int d = den.intValue();
     return new Fraction(((Math.abs(w) * d) + n) * MathUtils.sign(w), d);
 }
+
