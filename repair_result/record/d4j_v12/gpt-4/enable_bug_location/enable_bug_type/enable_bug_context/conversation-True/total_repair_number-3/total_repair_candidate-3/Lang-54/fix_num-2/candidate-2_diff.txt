--- 
+++ 
@@ -3,32 +3,57 @@
         return null;
     }
     int len = str.length();
-    if (len != 2 && len != 5 && len < 7) {
+    if (len < 2) {
         throw new IllegalArgumentException("Invalid locale format: " + str);
     }
+
     char ch0 = str.charAt(0);
     char ch1 = str.charAt(1);
     if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {
         throw new IllegalArgumentException("Invalid locale format: " + str);
     }
+
     if (len == 2) {
-        return new Locale(str, "");
-    } else {
+        Locale locale = new Locale(str, "");
+        if (!availableLocaleSet().contains(locale)) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        return locale;
+    } else if (len == 5) {
         if (str.charAt(2) != '_') {
             throw new IllegalArgumentException("Invalid locale format: " + str);
         }
         char ch3 = str.charAt(3);
         char ch4 = str.charAt(4);
-        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {
+        if ((ch3 < 'A' || ch3 > 'Z') || (ch4 < 'A' || ch4 > 'Z')) {
             throw new IllegalArgumentException("Invalid locale format: " + str);
         }
-        if (len == 5) {
-            return new Locale(str.substring(0, 2), str.substring(3, 5));
-        } else {
-            if (str.charAt(5) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
+        Locale locale = new Locale(str.substring(0, 2), str.substring(3, 5));
+        if (!availableLocaleSet().contains(locale)) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
         }
+        return locale;
+    } else if (len >= 7) {
+        if (str.charAt(2) != '_') {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        char ch3 = str.charAt(3);
+        char ch4 = str.charAt(4);
+        if ((ch3 < 'A' || ch3 > 'Z') || (ch4 < 'A' || ch4 > 'Z')) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        if (str.charAt(5) != '_') {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        String variant = str.substring(6);
+        // Variant can be empty string legitimately, so no validation on variant chars here
+        Locale locale = new Locale(str.substring(0, 2), str.substring(3, 5), variant);
+        if (!availableLocaleSet().contains(locale)) {
+            throw new IllegalArgumentException("Invalid locale format: " + str);
+        }
+        return locale;
+    } else {
+        throw new IllegalArgumentException("Invalid locale format: " + str);
     }
 }
+
