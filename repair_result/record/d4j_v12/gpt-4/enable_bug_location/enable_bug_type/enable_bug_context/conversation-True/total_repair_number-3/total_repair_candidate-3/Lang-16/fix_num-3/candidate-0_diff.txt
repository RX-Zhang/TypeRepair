--- 
+++ 
@@ -12,7 +12,8 @@
         // a wrong value.
         return null;
     }
-    if (str.startsWith("0x") || str.startsWith("-0x")) {
+    String lcStr = str.toLowerCase();
+    if (lcStr.startsWith("0x") || lcStr.startsWith("-0x")) {
         return createInteger(str);
     }   
     char lastChar = str.charAt(str.length() - 1);
@@ -20,8 +21,9 @@
     String dec;
     String exp;
     int decPos = str.indexOf('.');
-    int expPos = str.indexOf('e') + str.indexOf('E') + 1;
-
+    int ePos = str.indexOf('e');
+    int expPos = ePos >= 0 ? ePos : str.indexOf('E');
+    
     if (decPos > -1) {
 
         if (expPos > -1) {
@@ -86,7 +88,7 @@
             case 'D' :
                 try {
                     Double d = NumberUtils.createDouble(numeric);
-                    if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
+                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
                         return d;
                     }
                 } catch (NumberFormatException nfe) { // NOPMD
@@ -98,7 +100,7 @@
                     // ignore the bad number
                 }
                 //$FALL-THROUGH$
-            default :
+ default :
                 throw new NumberFormatException(str + " is not a valid number.");
 
         }
@@ -149,3 +151,4 @@
         }
     }
 }
+
