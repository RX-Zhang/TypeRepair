--- 
+++ 
@@ -2,33 +2,49 @@
     if (str == null) {
         return null;
     }
+    // Validate length and format more flexibly to accommodate empty country or variant
     int len = str.length();
-    if (len != 2 && len != 5 && len < 7) {
+    if (len < 2) {
         throw new IllegalArgumentException("Invalid locale format: " + str);
     }
-    char ch0 = str.charAt(0);
-    char ch1 = str.charAt(1);
-    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {
+
+    String language = "";
+    String country = "";
+    String variant = "";
+
+    String[] parts = str.split("_", -1); // keep empty trailing tokens
+
+    if (parts.length > 3) {
         throw new IllegalArgumentException("Invalid locale format: " + str);
     }
-    if (len == 2) {
-        return new Locale(str, "");
-    } else {
-        if (str.charAt(2) != '_') {
+
+    language = parts[0];
+    if (language.length() != 2 || !language.chars().allMatch(ch -> ch >= 'a' && ch <= 'z')) {
+        throw new IllegalArgumentException("Invalid locale format: " + str);
+    }
+
+    if (parts.length > 1) {
+        country = parts[1];
+        // country can be "" or 2 uppercase letters
+        if (country.length() != 0 && (country.length() != 2 || !country.chars().allMatch(ch -> ch >= 'A' && ch <= 'Z'))) {
             throw new IllegalArgumentException("Invalid locale format: " + str);
         }
-        char ch3 = str.charAt(3);
-        char ch4 = str.charAt(4);
-        if (ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z') {
+    }
+
+    if (parts.length == 3) {
+        variant = parts[2];
+        if (variant.length() == 0) {
             throw new IllegalArgumentException("Invalid locale format: " + str);
         }
-        if (len == 5) {
-            return new Locale(str.substring(0, 2), str.substring(3, 5));
-        } else {
-            if (str.charAt(5) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
-        }
     }
+
+    Locale locale = new Locale(language, country, variant);
+
+    // Validate that the constructed locale is among the available locales
+    if (!availableLocaleSet().contains(locale)) {
+        throw new IllegalArgumentException("Invalid locale format: " + str);
+    }
+
+    return locale;
 }
+
