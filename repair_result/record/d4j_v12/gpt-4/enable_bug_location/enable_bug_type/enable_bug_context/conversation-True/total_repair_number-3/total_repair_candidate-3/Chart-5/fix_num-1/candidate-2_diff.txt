--- 
+++ 
@@ -3,35 +3,43 @@
         throw new IllegalArgumentException("Null 'x' argument.");
     }
 
-    // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
     int index = indexOf(x);
-    if (index >= 0 && !this.allowDuplicateXValues) {
-        XYDataItem existing = (XYDataItem) this.data.get(index);
-        try {
-            overwritten = (XYDataItem) existing.clone();
+    if (index >= 0) {
+        // Duplicate X values are allowed, so update existing item
+        if (!this.allowDuplicateXValues) {
+            XYDataItem existing = (XYDataItem) this.data.get(index);
+            try {
+                overwritten = (XYDataItem) existing.clone();
+            }
+            catch (CloneNotSupportedException e) {
+                throw new SeriesException("Couldn't clone XYDataItem!");
+            }
+            existing.setY(y);
         }
-        catch (CloneNotSupportedException e) {
-            throw new SeriesException("Couldn't clone XYDataItem!");
+        else {
+            // allowDuplicateXValues == true, so just add new item
+            if (this.autoSort) {
+                this.data.add(-index - 1, new XYDataItem(x, y));
+            }
+            else {
+                this.data.add(new XYDataItem(x, y));
+            }
         }
-        existing.setY(y);
     }
     else {
-        // if the series is sorted, the negative index is a result from
-        // Collections.binarySearch() and tells us where to insert the
-        // new item...otherwise it will be just -1 and we should just
-        // append the value to the list...
         if (this.autoSort) {
             this.data.add(-index - 1, new XYDataItem(x, y));
         }
         else {
             this.data.add(new XYDataItem(x, y));
         }
-        // check if this addition will exceed the maximum item count...
-        if (getItemCount() > this.maximumItemCount) {
-            this.data.remove(0);
-        }
+    }
+
+    if (getItemCount() > this.maximumItemCount) {
+        this.data.remove(0);
     }
     fireSeriesChanged();
     return overwritten;
 }
+
