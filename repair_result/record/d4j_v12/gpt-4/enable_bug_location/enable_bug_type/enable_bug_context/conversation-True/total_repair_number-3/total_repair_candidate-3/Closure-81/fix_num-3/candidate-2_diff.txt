--- 
+++ 
@@ -2,19 +2,16 @@
   Name name = functionNode.getFunctionName();
   Boolean isUnnamedFunction = false;
   if (name == null) {
-    name = new Name();
-    name.setIdentifier("");
-    isUnnamedFunction = true;
+    // Instead of creating a new empty name, treat this as an error
+    // unnamed function statements are not allowed
+    parseError("unnamed function statement");
   }
   Node node = newNode(Token.FUNCTION);
   Node newName = transform(name);
-  if (isUnnamedFunction) {
-    // Old Rhino tagged the empty name node with the line number of the
-    // declaration.
+
+  if (name == null) {
+    // Defensive: if somehow still null, mark with line number
     newName.setLineno(functionNode.getLineno());
-    // TODO(bowdidge) Mark line number of paren correctly.
-    // Same problem as below - the left paren might not be on the
-    // same line as the function keyword.
     int lpColumn = functionNode.getAbsolutePosition() +
         functionNode.getLp();
     newName.setCharno(position2charno(lpColumn));
@@ -28,9 +25,8 @@
   // function name (or else a semicolon will be inserted.)  If there's no
   // function name, assume the paren was on the same line as the function.
   // TODO(bowdidge): Mark line number of paren correctly.
-  Name fnName = functionNode.getFunctionName();
-  if (fnName != null) {
-    lp.setLineno(fnName.getLineno());
+  if (name != null) {
+    lp.setLineno(name.getLineno());
   } else {
     lp.setLineno(functionNode.getLineno());
   }
@@ -46,5 +42,6 @@
   Node bodyNode = transform(functionNode.getBody());
   parseDirectives(bodyNode);
   node.addChildToBack(bodyNode);
- return node;
+  return node;
 }
+
