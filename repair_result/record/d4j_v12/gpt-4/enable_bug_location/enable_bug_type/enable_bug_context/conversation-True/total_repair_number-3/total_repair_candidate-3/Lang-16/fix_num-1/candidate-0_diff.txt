--- 
+++ 
@@ -12,7 +12,9 @@
         // a wrong value.
         return null;
     }
-    if (str.startsWith("0x") || str.startsWith("-0x")) {
+    // Change here: to handle uppercase '0X' prefix as well as lowercase '0x'.
+    String lowerStr = str.toLowerCase();
+    if (lowerStr.startsWith("0x") || lowerStr.startsWith("-0x")) {
         return createInteger(str);
     }   
     char lastChar = str.charAt(str.length() - 1);
@@ -20,7 +22,7 @@
     String dec;
     String exp;
     int decPos = str.indexOf('.');
-    int expPos = str.indexOf('e') + str.indexOf('E') + 1;
+    int expPos = Math.max(str.indexOf('e'), str.indexOf('E'));
 
     if (decPos > -1) {
 
@@ -86,15 +88,14 @@
             case 'D' :
                 try {
                     Double d = NumberUtils.createDouble(numeric);
-                    if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {
+                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {
                         return d;
                     }
                 } catch (NumberFormatException nfe) { // NOPMD
                     // ignore the bad number
                 }
-                try {
-                    return createBigDecimal(numeric);
-                } catch (NumberFormatException e) { // NOPMD
+                try                    return createBigDecimal(numeric);
+                } catch (FormatException e) { // NOPMD
                     // ignore the bad number
                 }
                 //$FALL-THROUGH$
@@ -149,3 +150,4 @@
         }
     }
 }
+
