--- 
+++ 
@@ -1,12 +1,12 @@
 public static int gcd(int u, int v) {
-    if (u * v == 0) {
-        return (Math.abs(u) + Math.abs(v));
+    if (u == 0 && v == 0) {
+        return 0;
     }
     // keep u and v negative, as negative integers range down to
     // -2^31, while positive numbers can only be as large as 2^31-1
     // (i.e. we can't necessarily negate a negative number without
     // overflow)
-    /* assert u!=0 && v!=0; */
+    /* assert u!=0 || v!=0; */
     if (u > 0) {
         u = -u;
     } // make u negative
@@ -48,3 +48,4 @@
     } while (t != 0);
     return -u * (1 << k); // gcd is u*2^k
 }
+
