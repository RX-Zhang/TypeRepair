--- 
+++ 
@@ -34,7 +34,7 @@
         if (s.regionMatches(true, i + 1, END_SCRIPT, 0,
                             END_SCRIPT.length())) {
           sb.append("<\\");
-        } else if (s.regionMatches(false, i + 1, START_COMMENT, 0,
+        } else if (s.regionMatches(true, i + 1, START_COMMENT, 0,
                                    START_COMMENT.length())) {
           sb.append("<\\");
         } else {
@@ -46,16 +46,20 @@
         //  character can be represented in this character set.
         if (outputCharsetEncoder != null) {
           if (outputCharsetEncoder.canEncode(c)) {
-            sb.append(c);
+            if (c >= 0x20 && c <= 0x7e) {
+              sb.append(c);
+            } else {
+              appendHexJavaScriptRepresentation(sb, c);
+            }
           } else {
             // Unicode-escape the character.
             appendHexJavaScriptRepresentation(sb, c);
           }
         } else {
-          // No charsetEncoder provided - pass straight latin characters
-          // through, and escape the rest.  Doing the explicit character
+          // No charsetEncoder provided - pass straight ascii printable characters
+          // through, and escape the rest. Doing the explicit character
           // check is measurably faster than using the CharsetEncoder.
-          if (c > 0x1f && c <= 0x7f) {
+          if (c >= 0x20 && c <= 0x7e) {
             sb.append(c);
           } else {
             // Other characters can be misinterpreted by some js parsers,
@@ -69,3 +73,4 @@
   sb.append(quote);
   return sb.toString();
 }
+
