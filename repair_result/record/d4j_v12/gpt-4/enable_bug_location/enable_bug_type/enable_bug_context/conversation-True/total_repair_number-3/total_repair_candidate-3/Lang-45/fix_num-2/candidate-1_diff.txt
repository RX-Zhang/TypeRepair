--- 
+++ 
@@ -7,12 +7,18 @@
         return StringUtils.EMPTY;
     }
 
+    int strLength = str.length();
+
     // if the lower value is greater than the length of the string,
     // set to the length of the string
+    if (lower > strLength) {
+        lower = strLength;
+    }
+
     // if the upper value is -1 (i.e. no limit) or is greater
     // than the length of the string, set to the length of the string
-    if (upper == -1 || upper > str.length()) {
-        upper = str.length();
+    if (upper == -1 || upper > strLength) {
+        upper = strLength;
     }
     // if upper is less than lower, raise it to lower
     if (upper < lower) {
@@ -22,13 +28,16 @@
     StringBuffer result = new StringBuffer();
     int index = StringUtils.indexOf(str, " ", lower);
     if (index == -1) {
-        result.append(str.substring(0, upper));
-        // only if abbreviation has occured do we append the appendToEnd value
-        if (upper != str.length()) {
+        // Ensure upper does not exceed string length
+        int endIndex = Math.min(upper, strLength);
+        result.append(str.substring(0, endIndex));
+        // only if abbreviation has occurred do we append the appendToEnd value
+        if (endIndex != strLength) {
             result.append(StringUtils.defaultString(appendToEnd));
         }
     } else if (index > upper) {
-        result.append(str.substring(0, upper));
+        int endIndex = Math.min(upper, strLength);
+        result.append(str.substring(0, endIndex));
         result.append(StringUtils.defaultString(appendToEnd));
     } else {
         result.append(str.substring(0, index));
@@ -36,3 +45,4 @@
     }
     return result.toString();
 }
+
