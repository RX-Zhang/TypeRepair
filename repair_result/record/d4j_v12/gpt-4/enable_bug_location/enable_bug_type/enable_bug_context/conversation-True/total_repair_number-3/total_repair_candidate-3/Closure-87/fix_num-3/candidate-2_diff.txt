--- 
+++ 
@@ -2,19 +2,46 @@
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
-        // IE has a bug where event handlers behave differently when
-        // their return value is used vs. when their return value is in
-        // an EXPR_RESULT. It's pretty freaking weird. See:
-        // http://code.google.com/p/closure-compiler/issues/detail?id=291
-        // We try to detect this case, and not fold EXPR_RESULTs
-        // into other expressions.
+      // IE has a bug where event handlers behave differently when
+      // their return value is used vs. when their return value is in
+      // an EXPR_RESULT. It's pretty freaking weird. See:
+      // http://code.google.com/p/closure-compiler/issues/detail?id=291
+      // We try to detect this case, and not fold EXPR_RESULTs
+      // into other expressions.
 
-          // We only have to worry about methods with an implicit 'this'
-          // param, or this doesn't happen.
+      // We only have to worry about methods with an implicit 'this'
+      // param, or this doesn't happen.
 
-        return NodeUtil.isExpressionNode(maybeExpr);
+      if (maybeExpr.isExprResult() &&
+          maybeExpr.getFirstChild() != null &&
+          maybeExpr.getFirstChild().isCall()) {
+        Node call = maybeExpr.getFirstChild();
+        if (call.getFirstChild().isGetProp() &&
+            call.getFirstChild().getFirstChild() == call.getFirstChild()) {
+          // Do not fold if this is an event handler like f.onchange()
+          String propName = call.getFirstChild().getLastChild().getString();
+          // Common event handlers where folding causes issues
+          if ("onchange".equals(propName) ||
+              "onload".equals(propName) ||
+              "onclick".equals(propName) ||
+              "onmouseup".equals(propName) ||
+              "onmousedown".equals(propName) ||
+              "onmouseover".equals(propName) ||
+              "onmouseout".equals(propName) ||
+              "ondblclick".equals(propName) ||
+              "onkeypress".equals(propName) ||
+              "onkeyup".equals(propName) ||
+              "onkeydown".equals(propName) ||
+              "onselect".equals(propName)) {
+            return false;
+          }
+        }
+      }
+
+      return NodeUtil.isExpressionNode(maybeExpr);
     }
   }
 
   return false;
 }
+
