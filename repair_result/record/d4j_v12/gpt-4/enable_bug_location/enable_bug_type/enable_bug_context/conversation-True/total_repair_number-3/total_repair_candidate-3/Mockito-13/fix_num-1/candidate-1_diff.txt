--- 
+++ 
@@ -13,19 +13,24 @@
 
     mockingProgress.validateState();
 
-    //if verificationMode is not null then someone is doing verify()        
+    // if verificationMode is not null then someone is doing verify()
     if (verificationMode != null) {
-        //We need to check if verification was started on the correct mock 
+        // We need to check if verification was started on the correct mock
         // - see VerifyingWithAnExtraCallToADifferentMockTest (bug 138)
-        if (verificationMode instanceof MockAwareVerificationMode && ((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                
-            VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);            
-            verificationMode.verify(data);
-            return null;
-            // this means there is an invocation on a different mock. Re-adding verification mode 
-            // - see VerifyingWithAnExtraCallToADifferentMockTest (bug 138)
+        if (verificationMode instanceof MockAwareVerificationMode) {
+            MockAwareVerificationMode mockAwareVerificationMode = (MockAwareVerificationMode) verificationMode;
+            if (mockAwareVerificationMode.getMock() == invocation.getMock()) {
+                VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);
+                verificationMode.verify(data);
+                return null;
+            } else {
+                // this means there is an invocation on a different mock.
+                // Re-adding verification mode to the stack, so it can be used later
+                mockingProgress.verificationStarted(verificationMode);
+            }
         }
     }
-    
+
     invocationContainerImpl.setInvocationForPotentialStubbing(invocationMatcher);
     OngoingStubbingImpl<T> ongoingStubbing = new OngoingStubbingImpl<T>(invocationContainerImpl);
     mockingProgress.reportOngoingStubbing(ongoingStubbing);
@@ -47,3 +52,4 @@
         return ret;
     }
 }
+
