--- 
+++ 
@@ -112,8 +112,8 @@
       } else {
         // reject the step and attempt to reduce error by stepsize control
         final double factor =
-            Math.min(maxGrowth,
-                     Math.max(minReduction, safety * Math.pow(error, exp)));
+            Math.min(getMaxGrowth(),
+                     Math.max(getMinReduction(), getSafety() * Math.pow(error, exp)));
         hNew = filterStep(stepSize * factor, forward, false);
       }
 
@@ -150,9 +150,9 @@
         stepSize = filterStep(stepSize, forward, true);
 
       // stepsize control for next step
-      final double factor = Math.min(maxGrowth,
-                                     Math.max(minReduction,
-                                              safety * Math.pow(error, exp)));
+      final double factor = Math.min(getMaxGrowth(),
+                                     Math.max(getMinReduction(),
+                                              getSafety() * Math.pow(error, exp)));
       final double  scaledH    = stepSize * factor;
       final double  nextT      = stepStart + scaledH;
       final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);
@@ -166,3 +166,4 @@
   return stopTime;
 
 }
+
