--- 
+++ 
@@ -10,7 +10,7 @@
     int pfxLen = 0;
     for(final String pfx : hex_prefixes) {
         if (str.startsWith(pfx)) {
-            pfxLen += pfx.length();
+            pfxLen = pfx.length();  // Fix: should assign, not +=
             break;
         }
     }
@@ -29,7 +29,8 @@
     String dec;
     String exp;
     final int decPos = str.indexOf('.');
-    final int expPos = str.indexOf('e') + str.indexOf('E') + 1; // assumes both not present
+    final int expPos = (str.indexOf('e') == -1 ? str.indexOf('E') : str.indexOf('e')); // Fix: find correct exponent position
+
     // if both e and E are present, this is caught by the checks on expPos (which prevent IOOBE)
     // and the parsing which will detect if e or E appear in a number due to using the wrong offset
 
@@ -71,7 +72,7 @@
             case 'L' :
                 if (dec == null
                     && exp == null
-                    && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {
+                    && ((numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) || isDigits(numeric))) {
                     try {
                         return createLong(numeric);
                     } catch (final NumberFormatException nfe) { // NOPMD
@@ -163,3 +164,4 @@
 
     return createBigDecimal(str);
 }
+
