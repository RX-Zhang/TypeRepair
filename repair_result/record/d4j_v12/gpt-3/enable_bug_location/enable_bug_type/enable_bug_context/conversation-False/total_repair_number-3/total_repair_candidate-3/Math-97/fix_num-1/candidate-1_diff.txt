--- 
+++ 
@@ -2,7 +2,11 @@
     FunctionEvaluationException {
     
     clearResult();
-    verifyInterval(min, max);
+    
+    // Input validation for min and max
+    if (min >= max) {
+        throw new IllegalArgumentException("Invalid interval: min must be less than max. Min: " + min + ", Max: " + max);
+    }
     
     double ret = Double.NaN;
     
@@ -13,11 +17,16 @@
     double sign = yMin * yMax;
     if (sign >= 0) {
         // check if either value is close to a zero
+        if (Math.abs(yMin) <= functionValueAccuracy || Math.abs(yMax) <= functionValueAccuracy) {
+            // One of the values is close to zero, treat as a root
+            ret = (Math.abs(yMin) <= Math.abs(yMax)) ? min : max;
+        } else {
             // neither value is close to zero and min and max do not bracket root.
             throw new IllegalArgumentException
             ("Function values at endpoints do not have different signs." +
                     "  Endpoints: [" + min + "," + max + "]" + 
                     "  Values: [" + yMin + "," + yMax + "]");
+        }
     } else {
         // solve using only the first endpoint as initial guess
         ret = solve(min, yMin, max, yMax, min, yMin);
@@ -26,3 +35,4 @@
 
     return ret;
 }
+
