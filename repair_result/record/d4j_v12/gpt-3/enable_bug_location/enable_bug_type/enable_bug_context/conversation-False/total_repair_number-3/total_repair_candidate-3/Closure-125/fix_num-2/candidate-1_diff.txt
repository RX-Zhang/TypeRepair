--- 
+++ 
@@ -9,8 +9,30 @@
     } else {
       ensureTyped(t, n);
     }
+  } else if (type.isUnionType()) {
+    // Handle union types by checking if any alternate is a constructor
+    boolean anyConstructor = false;
+    for (JSType alt : type.toMaybeUnionType().getAlternates()) {
+      if (alt.isConstructor()) {
+        anyConstructor = true;
+        break;
+      }
+    }
+    if (anyConstructor) {
+      FunctionType fnType = type.toMaybeFunctionType();
+      if (fnType != null) {
+        visitParameterList(t, n, fnType);
+        ensureTyped(t, n, fnType.getInstanceType());
+      } else {
+        ensureTyped(t, n);
+      }
+    } else {
+      report(t, n, NOT_A_CONSTRUCTOR);
+      ensureTyped(t, n);
+    }
   } else {
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
+
