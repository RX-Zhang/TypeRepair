--- 
+++ 
@@ -47,8 +47,7 @@
         double stepa = 0;
         double stepb = 0;
         if (nfm <= 2 * n) {
-            if (nfm >= 1 &&
-                nfm <= n) {
+            if (nfm >= 1 && nfm <= n) {
                 stepa = initialTrustRegionRadius;
                 if (upperDifference.getEntry(nfmm) == ZERO) {
                     stepa = -stepa;
@@ -118,15 +117,13 @@
         // off-diagonal second derivative terms of the initial quadratic model.
 
         if (numEval <= 2 * n + 1) {
-            if (numEval >= 2 &&
-                numEval <= n + 1) {
+            if (numEval >= 2 && numEval <= n + 1) {
                 gradientAtTrustRegionCenter.setEntry(nfmm, (f - fbeg) / stepa);
                 if (npt < numEval + n) {
                     final double oneOverStepA = ONE / stepa;
                     bMatrix.setEntry(0, nfmm, -oneOverStepA);
                     bMatrix.setEntry(nfm, nfmm, oneOverStepA);
                     bMatrix.setEntry(npt + nfmm, nfmm, -HALF * rhosq);
-                    throw new PathIsExploredException(); // XXX
                 }
             } else if (numEval >= n + 2) {
                 final int ih = nfx * (nfx + 1) / 2 - 1;
@@ -151,7 +148,6 @@
                               -bMatrix.getEntry(0, nfxm) - bMatrix.getEntry(nfm, nfxm));
                 zMatrix.setEntry(0, nfxm, Math.sqrt(TWO) / (stepa * stepb));
                 zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) / rhosq);
-                // zMatrix.setEntry(nfm, nfxm, Math.sqrt(HALF) * recip); // XXX "testAckley" and "testDiffPow" fail.
                 zMatrix.setEntry(nfm - n, nfxm,
                               -zMatrix.getEntry(0, nfxm) - zMatrix.getEntry(nfm, nfxm));
             }
@@ -168,7 +164,7 @@
             final int ih = ipt * (ipt - 1) / 2 + jpt - 1;
             final double tmp = interpolationPoints.getEntry(nfm, ipt - 1) * interpolationPoints.getEntry(nfm, jpt - 1);
             modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp);
-            throw new PathIsExploredException(); // XXX
         }
     } while (getEvaluations() < npt);
 } // prelim
+
