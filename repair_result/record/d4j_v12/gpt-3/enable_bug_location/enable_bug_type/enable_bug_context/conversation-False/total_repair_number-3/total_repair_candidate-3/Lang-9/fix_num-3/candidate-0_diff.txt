--- 
+++ 
@@ -1,36 +1,44 @@
 private void init() {
-    thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
+    thisYear = Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);
 
-    nameValues= new ConcurrentHashMap<Integer, KeyValue[]>();
+    nameValues = new ConcurrentHashMap<Integer, KeyValue[]>();
 
-    StringBuilder regex= new StringBuilder();
+    StringBuilder regex = new StringBuilder();
     List<Strategy> collector = new ArrayList<Strategy>();
 
-    Matcher patternMatcher= formatPattern.matcher(pattern);
-    if(!patternMatcher.lookingAt()) {
+    Matcher patternMatcher = formatPattern.matcher(pattern);
+    if (!patternMatcher.lookingAt()) {
         throw new IllegalArgumentException("Invalid pattern");
     }
 
-    currentFormatField= patternMatcher.group();
-    Strategy currentStrategy= getStrategy(currentFormatField);
-    for(;;) {
+    currentFormatField = patternMatcher.group();
+    Strategy currentStrategy = getStrategy(currentFormatField);
+
+    for (;;) {
         patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());
-        if(!patternMatcher.lookingAt()) {
+        if (!patternMatcher.lookingAt()) {
             nextStrategy = null;
             break;
         }
-        String nextFormatField= patternMatcher.group();
+        String nextFormatField = patternMatcher.group();
+
+        // Detect unterminated quote in literal patterns starting with a single quote
+        if (nextFormatField.startsWith("'") && !nextFormatField.endsWith("'")) {
+            throw new IllegalArgumentException("Unterminated quote in pattern: " + nextFormatField);
+        }
+
         nextStrategy = getStrategy(nextFormatField);
-        if(currentStrategy.addRegex(this, regex)) {
+        if (currentStrategy.addRegex(this, regex)) {
             collector.add(currentStrategy);
         }
-        currentFormatField= nextFormatField;
-        currentStrategy= nextStrategy;
+        currentFormatField = nextFormatField;
+        currentStrategy = nextStrategy;
     }
-    if(currentStrategy.addRegex(this, regex)) {
+    if (currentStrategy.addRegex(this, regex)) {
         collector.add(currentStrategy);
     }
-    currentFormatField= null;
-    strategies= collector.toArray(new Strategy[collector.size()]);
-    parsePattern= Pattern.compile(regex.toString());
+    currentFormatField = null;
+    strategies = collector.toArray(new Strategy[collector.size()]);
+    parsePattern = Pattern.compile(regex.toString());
 }
+
