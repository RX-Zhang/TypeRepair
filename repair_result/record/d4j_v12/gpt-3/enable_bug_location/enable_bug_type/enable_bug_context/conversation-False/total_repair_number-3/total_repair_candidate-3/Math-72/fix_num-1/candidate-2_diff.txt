--- 
+++ 
@@ -15,25 +15,25 @@
     // return the first endpoint if it is good enough
     double yMin = f.value(min);
     if (Math.abs(yMin) <= functionValueAccuracy) {
-        setResult(yMin, 0);
+        setResult(min, 0); // Changed from yMin to min
         return result;
     }
 
     // reduce interval if min and initial bracket the root
     if (yInitial * yMin < 0) {
-        return solve(f, min, yMin, initial, yInitial, min, yMin);
+        return solve(f, min, initial, yInitial, min, yMin); // Corrected function call parameters
     }
 
     // return the second endpoint if it is good enough
     double yMax = f.value(max);
     if (Math.abs(yMax) <= functionValueAccuracy) {
-        setResult(yMax, 0);
+        setResult(max, 0); // Changed from yMax to max
         return result;
     }
 
     // reduce interval if initial and max bracket the root
     if (yInitial * yMax < 0) {
-        return solve(f, initial, yInitial, max, yMax, initial, yInitial);
+        return solve(f, initial, max, yMax, initial, yInitial); // Corrected function call parameters
     }
 
     if (yMin * yMax > 0) {
@@ -42,6 +42,7 @@
     }
 
     // full Brent algorithm starting with provided initial guess
-    return solve(f, min, yMin, max, yMax, initial, yInitial);
+    return solve(f, min, max, yMin, yMax, initial, yInitial); // Corrected function call parameters
 
 }
+
