--- 
+++ 
@@ -4,15 +4,16 @@
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-    if (instantBefore == instantAfter) {
+    if (instantBefore >= instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-    return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    return convertLocalToUTC(local, false, earlierOrLater ? instantBefore : instantAfter);
     
     // calculate result
       // currently in later offset
       // currently in earlier offset
 }
+
