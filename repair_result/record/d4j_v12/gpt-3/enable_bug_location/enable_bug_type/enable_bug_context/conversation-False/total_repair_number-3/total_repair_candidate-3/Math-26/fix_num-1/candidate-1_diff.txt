--- 
+++ 
@@ -4,7 +4,7 @@
     long overflow = Integer.MAX_VALUE;
     double r0 = value;
     long a0 = (long)FastMath.floor(r0);
-    if (a0 > overflow) {
+    if (a0 > overflow || a0 < -overflow) {
         throw new FractionConversionException(value, a0, 1l);
     }
 
@@ -32,12 +32,12 @@
         long a1 = (long)FastMath.floor(r1);
         p2 = (a1 * p1) + p0;
         q2 = (a1 * q1) + q0;
-        if ((p2 > overflow) || (q2 > overflow)) {
+        if ((p2 > overflow) || (p2 < -overflow) || (q2 > overflow) || (q2 < -overflow)) {
             throw new FractionConversionException(value, p2, q2);
         }
 
         double convergent = (double)p2 / (double)q2;
-        if (n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator) {
+        if (n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 <= maxDenominator) {
             p0 = p1;
             p1 = p2;
             q0 = q1;
@@ -53,7 +53,7 @@
         throw new FractionConversionException(value, maxIterations);
     }
 
-    if (q2 < maxDenominator) {
+    if (q2 <= maxDenominator) {
         this.numerator = (int) p2;
         this.denominator = (int) q2;
     } else {
@@ -62,3 +62,4 @@
     }
 
 }
+
