--- 
+++ 
@@ -2,6 +2,10 @@
 
   // Just an 'exit'.
   if (matchingExitNode(n, exitType, labelName)) {
+    // Don't remove 'exit' nodes from finally blocks.
+    if (NodeUtil.isWithinFinallyBlock(n)) {
+      return;
+    }
     NodeUtil.removeChild(n.getParent(), n);
     compiler.reportCodeChange();
     return;
@@ -35,14 +39,18 @@
      */
     if (NodeUtil.hasFinally(n)) {
       Node finallyBlock = n.getLastChild();
-      tryMinimizeExits(finallyBlock, exitType, labelName);
+      // Skip minimizing exits inside finally blocks.
+      // So do NOT call tryMinimizeExits on the finally block.
+      // This fixes bugs related to removing breaks/returns inside finally.
     }
+    return;
   }
 
   // Just a 'label'.
   if (n.isLabel()) {
     Node labelBlock = n.getLastChild();
     tryMinimizeExits(labelBlock, exitType, labelName);
+    return;
   }
 
   // TODO(johnlenz): The last case of SWITCH statement?
@@ -94,3 +102,4 @@
     }
   }
 }
+
