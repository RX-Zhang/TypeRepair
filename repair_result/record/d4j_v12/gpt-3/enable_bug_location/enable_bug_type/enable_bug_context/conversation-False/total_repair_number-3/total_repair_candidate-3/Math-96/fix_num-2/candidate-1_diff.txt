--- 
+++ 
@@ -1,23 +1,27 @@
 public boolean equals(Object other) {
     boolean ret;
-    
-    if (this == other) { 
+
+    if (this == other) {
         ret = true;
     } else if (other == null) {
         ret = false;
-    } else  {
+    } else {
         try {
-            Complex rhs = (Complex)other;
-            if (rhs.isNaN()) {
-                ret = this.isNaN();
+            Complex rhs = (Complex) other;
+            if (this.isNaN() && rhs.isNaN()) {
+                ret = true;
+            } else if (this.isNaN() || rhs.isNaN()) {
+                ret = false;
             } else {
-                ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary())); 
+                ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal()))
+                        && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
             }
         } catch (ClassCastException ex) {
             // ignore exception
             ret = false;
         }
     }
-  
+
     return ret;
 }
+
