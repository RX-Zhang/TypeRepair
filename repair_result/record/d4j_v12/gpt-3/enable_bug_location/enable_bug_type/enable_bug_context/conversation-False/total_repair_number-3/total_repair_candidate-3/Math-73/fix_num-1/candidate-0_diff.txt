--- 
+++ 
@@ -3,6 +3,15 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
     clearResult();
+    
+    // Input validation
+    if (min >= max) {
+        throw new IllegalArgumentException("Invalid interval: min must be less than max.");
+    }
+    if (initial < min || initial > max) {
+        throw new IllegalArgumentException("Initial guess must be within the interval [min, max].");
+    }
+
     verifySequence(min, initial, max);
 
     // return the initial guess if it is good enough
@@ -15,19 +24,19 @@
     // return the first endpoint if it is good enough
     double yMin = f.value(min);
     if (Math.abs(yMin) <= functionValueAccuracy) {
-        setResult(yMin, 0);
+        setResult(min, 0);
         return result;
     }
 
-    // reduce interval if min and initial bracket the root
-    if (yInitial * yMin < 0) {
-        return solve(f, min, yMin, initial, yInitial, min, yMin);
+    // Check for bracketing
+    if (yInitial * yMin > 0) {
+        throw new IllegalArgumentException("Function values at endpoints do not have different signs.");
     }
 
     // return the second endpoint if it is good enough
     double yMax = f.value(max);
     if (Math.abs(yMax) <= functionValueAccuracy) {
-        setResult(yMax, 0);
+        setResult(max, 0);
         return result;
     }
 
@@ -36,8 +45,7 @@
         return solve(f, initial, yInitial, max, yMax, initial, yInitial);
     }
 
-
     // full Brent algorithm starting with provided initial guess
     return solve(f, min, yMin, max, yMax, initial, yInitial);
+}
 
-}
