--- 
+++ 
@@ -1,15 +1,15 @@
 public static boolean toBoolean(String str) {
+    if (str == null) {
+        return false;
+    }
     // Previously used equalsIgnoreCase, which was fast for interned 'true'.
     // Non interned 'true' matched 15 times slower.
     // 
     // Optimisation provides same performance as before for interned 'true'.
     // Similar performance for null, 'false', and other strings not length 2/3/4.
     // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
-    if (str == "true") {
+    if (str.equalsIgnoreCase("true")) {
         return true;
-    }
-    if (str == null) {
-        return false;
     }
     switch (str.length()) {
         case 2: {
@@ -50,3 +50,4 @@
     }
     return false;
 }
+
