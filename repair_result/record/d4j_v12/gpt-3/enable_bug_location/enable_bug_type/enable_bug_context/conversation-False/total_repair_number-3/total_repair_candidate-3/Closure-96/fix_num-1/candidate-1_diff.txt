--- 
+++ 
@@ -11,12 +11,23 @@
          parameters.hasNext()) {
     // If there are no parameters left in the list, then the while loop
     // above implies that this must be a var_args function.
-      parameter = parameters.next();
+    parameter = parameters.next();
     argument = arguments.next();
     ordinal++;
 
+    // Ensure argument is of a valid type before validation
+    JSType argumentType = getJSType(argument);
+    JSType parameterType = getJSType(parameter);
+    
+    // Input validation for argument types
+    if (argumentType == null || parameterType == null) {
+      report(t, argument, INVALID_INTERFACE_MEMBER_DECLARATION,
+          "Argument or parameter type is invalid");
+      return;
+    }
+
     validator.expectArgumentMatchesParameter(t, argument,
-        getJSType(argument), getJSType(parameter), call, ordinal);
+        argumentType, parameterType, call, ordinal);
   }
 
   int numArgs = call.getChildCount() - 1;
@@ -30,3 +41,4 @@
             " and no more than " + maxArgs + " argument(s)" : "");
   }
 }
+
