--- 
+++ 
@@ -6,8 +6,7 @@
     // Checks whether there is at least one finite bound value.
     boolean hasFiniteBounds = false;
     for (int i = 0; i < lB.length; i++) {
-        if (!Double.isInfinite(lB[i]) ||
-            !Double.isInfinite(uB[i])) {
+        if (!Double.isInfinite(lB[i]) && !Double.isInfinite(uB[i])) {
             hasFiniteBounds = true;
             break;
         }
@@ -16,8 +15,7 @@
     boolean hasInfiniteBounds = false;
     if (hasFiniteBounds) {
         for (int i = 0; i < lB.length; i++) {
-            if (Double.isInfinite(lB[i]) ||
-                Double.isInfinite(uB[i])) {
+            if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) {
                 hasInfiniteBounds = true;
                 break;
             }
@@ -49,10 +47,11 @@
                 throw new NotPositiveException(inputSigma[i]);
             }
             if (boundaries != null) {
-                if (inputSigma[i] > boundaries[1][i] - boundaries[0][i]) {
+                if (inputSigma[i] > (boundaries[1][i] - boundaries[0][i])) {
                     throw new OutOfRangeException(inputSigma[i], 0, boundaries[1][i] - boundaries[0][i]);
                 }
             }
         }
     }
 }
+
