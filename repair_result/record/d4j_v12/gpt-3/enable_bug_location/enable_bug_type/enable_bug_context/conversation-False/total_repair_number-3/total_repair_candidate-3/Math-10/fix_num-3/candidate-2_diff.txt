--- 
+++ 
@@ -9,6 +9,12 @@
     multiply(y, yOffset, y, yOffset, tmp2, 0);      // y^2
     add(tmp1, 0, tmp2, 0, tmp2, 0);                 // x^2 + y^2
     rootN(tmp2, 0, 2, tmp1, 0);                     // r = sqrt(x^2 + y^2)
+
+    // Handling case when both x and y are zero
+    if (Double.isNaN(tmp1[0]) || Double.isNaN(x[xOffset]) || (r == 0 && x[xOffset] == 0 && y[yOffset] == 0)) {
+        result[resultOffset] = Double.NaN; // Return NaN for 0/0 case
+        return;
+    }
 
     if (x[xOffset] >= 0) {
 
@@ -35,5 +41,14 @@
     }
 
     // fix value to take special cases (+0/+0, +0/-0, -0/+0, -0/-0, +/-infinity) correctly
+    if (y[yOffset] == 0 && x[xOffset] == 0) {
+        result[resultOffset] = Double.NaN; // 0/0 case
+    } else if (y[yOffset] < 0 && x[xOffset] == 0) {
+        result[resultOffset] = -FastMath.PI / 2; // -pi/2 case
+    } else if (y[yOffset] > 0 && x[xOffset] == 0) {
+        result[resultOffset] = FastMath.PI / 2; // pi/2 case
+    } else if (x[xOffset] == 0 && y[yOffset] == 0) {
+        result[resultOffset] = 0; // Both are zero
+    }
+}
 
-}
