--- 
+++ 
@@ -3,7 +3,20 @@
     throws MaxIterationsExceededException, FunctionEvaluationException {
 
     clearResult();
-    verifySequence(min, initial, max);
+    
+    // Input validation for the interval
+    if (min >= max) {
+        throw new IllegalArgumentException("Invalid interval: min must be less than max");
+    }
+
+    // Calculate function values at the endpoints
+    double yMin = f.value(min);
+    double yMax = f.value(max);
+    
+    // Check for non-bracketing conditions
+    if (yMin * yMax > 0) {
+        throw new IllegalArgumentException("Function values at endpoints do not have different signs. Endpoints: [" + min + ", " + max + "], Values: [" + yMin + ", " + yMax + "]");
+    }
 
     // return the initial guess if it is good enough
     double yInitial = f.value(initial);
@@ -13,9 +26,8 @@
     }
 
     // return the first endpoint if it is good enough
-    double yMin = f.value(min);
     if (Math.abs(yMin) <= functionValueAccuracy) {
-        setResult(yMin, 0);
+        setResult(min, 0);
         return result;
     }
 
@@ -25,9 +37,8 @@
     }
 
     // return the second endpoint if it is good enough
-    double yMax = f.value(max);
     if (Math.abs(yMax) <= functionValueAccuracy) {
-        setResult(yMax, 0);
+        setResult(max, 0);
         return result;
     }
 
@@ -36,8 +47,7 @@
         return solve(f, initial, yInitial, max, yMax, initial, yInitial);
     }
 
-
     // full Brent algorithm starting with provided initial guess
     return solve(f, min, yMin, max, yMax, initial, yInitial);
+}
 
-}
