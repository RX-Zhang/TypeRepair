--- 
+++ 
@@ -7,8 +7,14 @@
         return StringUtils.EMPTY;
     }
 
-    // if the lower value is greater than the length of the string,
-    // set to the length of the string
+    // Check boundaries for lower and upper
+    if (lower < 0) {
+        lower = 0; // Reset lower to 0 if it's negative
+    }
+    if (lower > str.length()) {
+        lower = str.length(); // If lower is greater than string length, set to the length
+    }
+
     // if the upper value is -1 (i.e. no limit) or is greater
     // than the length of the string, set to the length of the string
     if (upper == -1 || upper > str.length()) {
@@ -22,17 +28,18 @@
     StringBuffer result = new StringBuffer();
     int index = StringUtils.indexOf(str, " ", lower);
     if (index == -1) {
-        result.append(str.substring(0, upper));
-        // only if abbreviation has occured do we append the appendToEnd value
+        result.append(str.substring(lower, upper)); // Use lower instead of 0
+        // only if abbreviation has occurred do we append the appendToEnd value
         if (upper != str.length()) {
             result.append(StringUtils.defaultString(appendToEnd));
         }
     } else if (index > upper) {
-        result.append(str.substring(0, upper));
+        result.append(str.substring(lower, upper)); // Use lower instead of 0
         result.append(StringUtils.defaultString(appendToEnd));
     } else {
-        result.append(str.substring(0, index));
+        result.append(str.substring(lower, index)); // Use lower instead of 0
         result.append(StringUtils.defaultString(appendToEnd));
     }
     return result.toString();
 }
+
