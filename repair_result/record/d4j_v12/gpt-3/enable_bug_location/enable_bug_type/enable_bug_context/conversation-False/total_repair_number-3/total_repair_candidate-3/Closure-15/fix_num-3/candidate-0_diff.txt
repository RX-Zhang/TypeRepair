--- 
+++ 
@@ -6,7 +6,7 @@
   }
 
   // TODO(user): We only care about calls to functions that
-  // passes one of the dependent variable to a non-side-effect free
+  // pass one of the dependent variables to a non-side-effect free
   // function.
   if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
     return true;
@@ -16,11 +16,15 @@
     return true;
   }
 
-
   for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
-    if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
+    // Fix: Only skip nodes that start a new CFG node and then apply recursively
+    if (ControlFlowGraph.isEnteringNewCfgNode(c)) {
+      continue;
+    }
+    if (apply(c)) {
       return true;
     }
   }
   return false;
 }
+
