--- 
+++ 
@@ -1,31 +1,29 @@
 public void captureArgumentsFrom(Invocation invocation) {
     if (invocation.getMethod().isVarArgs()) {
         int indexOfVararg = invocation.getRawArguments().length - 1;
-        throw new UnsupportedOperationException();
-
+        if (indexOfVararg < 0 || invocation.getRawArguments()[indexOfVararg] == null) {
+            throw new UnsupportedOperationException("Varargs cannot be captured from an empty or null argument.");
+        }
+        // Handle varargs capturing logic here
+        Object array = invocation.getRawArguments()[indexOfVararg];
+        if (array instanceof Object[]) {
+            for (Object arg : (Object[]) array) {
+                for (Matcher m : matchers) {
+                    if (m instanceof CapturesArguments) {
+                        ((CapturesArguments) m).captureFrom(arg);
+                    }
+                }
+            }
+        }
     } else {
         for (int position = 0; position < matchers.size(); position++) {
             Matcher m = matchers.get(position);
             if (m instanceof CapturesArguments) {
-                ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
+                if (position < invocation.getRawArguments().length) {
+                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
+                }
             }
         }
     }
+}
 
-      for (int position = 0; position < matchers.size(); position++) {
-          Matcher m = matchers.get(position);
-          if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-              //TODO SF - this whole lot can be moved captureFrom implementation
-              if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-                  Object array = invocation.getRawArguments()[position];
-                  for (int i = 0; i < Array.getLength(array); i++) {
-                      ((CapturesArguments) m).captureFrom(Array.get(array, i));
-                  }
-                  //since we've captured all varargs already, it does not make sense to process other matchers.
-                  return;
-              } else {
-                  ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-              }
-          }
-      }
-}
