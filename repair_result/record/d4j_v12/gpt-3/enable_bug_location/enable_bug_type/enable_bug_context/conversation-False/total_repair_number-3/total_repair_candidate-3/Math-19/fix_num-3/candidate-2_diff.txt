--- 
+++ 
@@ -6,8 +6,7 @@
     // Checks whether there is at least one finite bound value.
     boolean hasFiniteBounds = false;
     for (int i = 0; i < lB.length; i++) {
-        if (!Double.isInfinite(lB[i]) ||
-            !Double.isInfinite(uB[i])) {
+        if (!Double.isInfinite(lB[i]) && !Double.isInfinite(uB[i])) {
             hasFiniteBounds = true;
             break;
         }
@@ -16,8 +15,7 @@
     boolean hasInfiniteBounds = false;
     if (hasFiniteBounds) {
         for (int i = 0; i < lB.length; i++) {
-            if (Double.isInfinite(lB[i]) ||
-                Double.isInfinite(uB[i])) {
+            if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) {
                 hasInfiniteBounds = true;
                 break;
             }
@@ -54,5 +52,9 @@
                 }
             }
         }
+    } else {
+        // Input validation for inputSigma not being null
+        throw new InputValidationException("inputSigma cannot be null");
     }
 }
+
