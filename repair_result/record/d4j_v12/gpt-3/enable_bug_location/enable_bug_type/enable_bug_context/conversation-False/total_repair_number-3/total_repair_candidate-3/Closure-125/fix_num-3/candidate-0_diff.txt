--- 
+++ 
@@ -1,16 +1,23 @@
 private void visitNew(NodeTraversal t, Node n) {
-  Node constructor = n.getFirstChild();
-  JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
-  if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
-    FunctionType fnType = type.toMaybeFunctionType();
-    if (fnType != null) {
-      visitParameterList(t, n, fnType);
-      ensureTyped(t, n, fnType.getInstanceType());
+  try {
+    Node constructor = n.getFirstChild();
+    JSType type = getJSType(constructor).restrictByNotNullOrUndefined();
+    if (type.isConstructor() || type.isEmptyType() || type.isUnknownType()) {
+      FunctionType fnType = type.toMaybeFunctionType();
+      if (fnType != null) {
+        visitParameterList(t, n, fnType);
+        ensureTyped(t, n, fnType.getInstanceType());
+      } else {
+        ensureTyped(t, n);
+      }
     } else {
+      report(t, n, NOT_A_CONSTRUCTOR);
       ensureTyped(t, n);
     }
-  } else {
+  } catch (Exception e) {
+    // Prevent execution error by reporting the error and ensuring typed
     report(t, n, NOT_A_CONSTRUCTOR);
     ensureTyped(t, n);
   }
 }
+
