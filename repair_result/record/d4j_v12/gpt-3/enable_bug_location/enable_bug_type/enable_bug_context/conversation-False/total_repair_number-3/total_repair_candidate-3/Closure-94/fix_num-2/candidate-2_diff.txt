--- 
+++ 
@@ -1,4 +1,8 @@
 static boolean isValidDefineValue(Node val, Set<String> defines) {
+  if (val == null || defines == null) {
+    return false; // Input validation for null values
+  }
+
   switch (val.getType()) {
     case Token.STRING:
     case Token.NUMBER:
@@ -11,8 +15,10 @@
     case Token.BITNOT:
     case Token.BITOR:
     case Token.BITXOR:
+      return isValidDefineValue(val.getFirstChild(), defines) && 
+             isValidDefineValue(val.getSecondChild(), defines); // Added check for second child
 
-    // Uniary operators are valid if the child is valid.
+    // Unary operators are valid if the child is valid.
     case Token.NOT:
     case Token.NEG:
       return isValidDefineValue(val.getFirstChild(), defines);
@@ -26,3 +32,4 @@
   }
   return false;
 }
+
