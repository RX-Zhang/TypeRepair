--- 
+++ 
@@ -28,6 +28,7 @@
             StringBuilder sb = new StringBuilder(dateStr);
             sb.insert(len-1, ".000");
             dateStr = sb.toString();
+            len = dateStr.length();
         }
     } else {
         // Let's see if we have timezone indicator or not...
@@ -38,22 +39,24 @@
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.delete(len-3, len-2);
                 dateStr = sb.toString();
+                len = dateStr.length();
             } else if (c == '+' || c == '-') { // missing minutes
                 // let's just append '00'
                 dateStr += "00";
+                len = dateStr.length();
             }
             // Milliseconds partial or missing; and even seconds are optional
-            len = dateStr.length();
             // remove 'T', '+'/'-' and 4-digit timezone-offset
             c = dateStr.charAt(len-9);
             if (Character.isDigit(c)) {
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.insert(len-5, ".000");
                 dateStr = sb.toString();
+                len = dateStr.length();
             }
             df = _formatISO8601;
             if (_formatISO8601 == null) {
-                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
+                df = _formatISO8601 = getISO8601Format(_timezone, _locale);
             }
         } else {
             // If not, plain date. Easiest to just patch 'Z' in the end?
@@ -67,10 +70,10 @@
             dateStr = sb.toString();
             df = _formatISO8601_z;
             if (df == null) {
-                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,
-                        _timezone, _locale);
+                df = _formatISO8601_z = getISO8601Format(_timezone, _locale);
             }
         }
     }
     return df.parse(dateStr, pos);
 }
+
