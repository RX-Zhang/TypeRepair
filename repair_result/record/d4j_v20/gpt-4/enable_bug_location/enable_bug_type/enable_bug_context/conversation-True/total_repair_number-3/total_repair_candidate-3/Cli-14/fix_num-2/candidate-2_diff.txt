--- 
+++ 
@@ -6,18 +6,18 @@
     // reference to first unexpected option
     Option unexpected = null;
 
-    for (final Iterator i = options.iterator(); i.hasNext();) {
+    for (final Iterator i = getOptions().iterator(); i.hasNext();) {
         final Option option = (Option) i.next();
 
         // needs validation?
-        boolean validate = option.isRequired() || option instanceof Group;
+        boolean validate = option.isRequired() || option instanceof GroupImpl;
         if (validate) {
             option.validate(commandLine);
         }
 
         // if the child option is present then validate it
         if (commandLine.hasOption(option)) {
-            if (++present > maximum) {
+            if (++present > getMaximum()) {
                 unexpected = option;
 
                 break;
@@ -34,13 +34,14 @@
     }
 
     // too few option
-    if (present < minimum) {
+    if (present < getMinimum()) {
         throw new OptionException(this, ResourceConstants.MISSING_OPTION);
     }
 
     // validate each anonymous argument
-    for (final Iterator i = anonymous.iterator(); i.hasNext();) {
+    for (final Iterator i = getAnonymous().iterator(); i.hasNext();) {
         final Option option = (Option) i.next();
         option.validate(commandLine);
     }
 }
+
