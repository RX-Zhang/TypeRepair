--- 
+++ 
@@ -42,17 +42,22 @@
                 // let's just append '00'
                 dateStr += "00";
             }
-            // Milliseconds partial or missing; and even seconds are optional
             len = dateStr.length();
-            // remove 'T', '+'/'-' and 4-digit timezone-offset
-            c = dateStr.charAt(len-9);
-            if (Character.isDigit(c)) {
-                StringBuilder sb = new StringBuilder(dateStr);
-                sb.insert(len-5, ".000");
-                dateStr = sb.toString();
+            // check if time part is missing milliseconds
+            // insert '.000' if missing
+            int timeStart = dateStr.indexOf('T');
+            int tzIndex = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));
+            if (timeStart > 0 && tzIndex > timeStart) {
+                String timePortion = dateStr.substring(timeStart + 1, tzIndex);
+                if (!timePortion.contains(".")) {
+                    StringBuilder sb = new StringBuilder(dateStr);
+                    sb.insert(tzIndex, ".000");
+                    dateStr = sb.toString();
+                    len = dateStr.length();
+                }
             }
             df = _formatISO8601;
-            if (_formatISO8601 == null) {
+            if (df == null) {
                 df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);
             }
         } else {
@@ -61,7 +66,7 @@
             // And possible also millisecond part if missing
             int timeLen = len - dateStr.lastIndexOf('T') - 1;
             if (timeLen <= 8) {
-                    sb.append(".000");
+                sb.append(".000");
             }
             sb.append('Z');
             dateStr = sb.toString();
@@ -74,3 +79,4 @@
     }
     return df.parse(dateStr, pos);
 }
+
