--- 
+++ 
@@ -38,18 +38,52 @@
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.delete(len-3, len-2);
                 dateStr = sb.toString();
+                len = dateStr.length();
             } else if (c == '+' || c == '-') { // missing minutes
                 // let's just append '00'
                 dateStr += "00";
+                len = dateStr.length();
             }
-            // Milliseconds partial or missing; and even seconds are optional
+            // Updated length needed after possible modification
             len = dateStr.length();
-            // remove 'T', '+'/'-' and 4-digit timezone-offset
-            c = dateStr.charAt(len-9);
-            if (Character.isDigit(c)) {
-                StringBuilder sb = new StringBuilder(dateStr);
-                sb.insert(len-5, ".000");
-                dateStr = sb.toString();
+
+            // Check for missing milliseconds or seconds
+            int timeStart = dateStr.indexOf('T');
+            int timeZoneOffset = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));
+            if (timeStart != -1 && timeZoneOffset != -1 && timeZoneOffset > timeStart) {
+                String timePortion = dateStr.substring(timeStart + 1, timeZoneOffset);
+                // If time portion has no seconds, add ":00"
+                if (timePortion.length() == 5) { // hh:mm
+                    StringBuilder sb = new StringBuilder(dateStr);
+                    sb.insert(timeZoneOffset, ":00");
+                    dateStr = sb.toString();
+                    len = dateStr.length();
+                    timeZoneOffset = Math.max(dateStr.lastIndexOf('+'), dateStr.lastIndexOf('-'));
+                }
+                // Insert milliseconds if missing
+                int dotIndex = dateStr.indexOf('.', timeStart);
+                if (dotIndex == -1 || dotIndex > timeZoneOffset) {
+                    StringBuilder sb = new StringBuilder(dateStr);
+                    sb.insert(timeZoneOffset, ".000");
+                    dateStr = sb.toString();
+                    len = dateStr.length();
+                } else {
+                    // Handle partial milliseconds (1 or 2 digits)
+                    int millisEnd = timeZoneOffset;
+                    int millisStart = dotIndex + 1;
+                    int millisLen = millisEnd - millisStart;
+                    if (millisLen == 1) { // one digit millis
+                        StringBuilder sb = new StringBuilder(dateStr);
+                        sb.insert(millisEnd, "00");
+                        dateStr = sb.toString();
+                        len = dateStr.length();
+                    } else if (millisLen == 2) { // two digit millis
+                        StringBuilder sb = new StringBuilder(dateStr);
+                        sb.insert(millisEnd, "0");
+                        dateStr = sb.toString();
+                        len = dateStr.length();
+                    }
+                }
             }
             df = _formatISO8601;
             if (_formatISO8601 == null) {
@@ -61,7 +95,7 @@
             // And possible also millisecond part if missing
             int timeLen = len - dateStr.lastIndexOf('T') - 1;
             if (timeLen <= 8) {
-                    sb.append(".000");
+                sb.append(".000");
             }
             sb.append('Z');
             dateStr = sb.toString();
@@ -74,3 +108,4 @@
     }
     return df.parse(dateStr, pos);
 }
+
