--- 
+++ 
@@ -39,13 +39,20 @@
       if (isVarTypeBetter) {
         redeclareSimpleVar(scope, left, resultType);
       }
-      left.setJSType(isVarDeclaration || leftType == null ?
-          resultType : null);
+      // Only set the type on left if it's a var declaration or no previous leftType exists.
+      // If leftType is non-null and not a var declaration, clear type to avoid masking errors.
+      left.setJSType(isVarDeclaration || leftType == null ? resultType : null);
 
+      // If variable has inferred type, update with least supertype of old and new type.
       if (var != null && var.isTypeInferred()) {
         JSType oldType = var.getType();
-        var.setType(oldType == null ?
-            resultType : oldType.getLeastSupertype(resultType));
+
+        // Handle the case when oldType is null or unknown
+        if (oldType == null || oldType.isUnknownType()) {
+          var.setType(resultType);
+        } else {
+          var.setType(oldType.getLeastSupertype(resultType));
+        }
       }
       break;
     case Token.GETPROP:
@@ -61,3 +68,4 @@
       break;
   }
 }
+
