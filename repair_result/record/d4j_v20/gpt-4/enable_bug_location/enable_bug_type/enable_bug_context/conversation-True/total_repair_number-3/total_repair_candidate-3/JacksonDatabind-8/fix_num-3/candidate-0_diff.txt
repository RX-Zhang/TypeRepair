--- 
+++ 
@@ -11,23 +11,31 @@
             if (!explicit) {
                 return;
             }
-            // both explicit: verify
-            // otherwise only verify if neither explicitly annotated.
-        }
-
-        // one more thing: ok to override in sub-class
-        if (oldOne.getClass() == newOne.getClass()) {
-            // [databind#667]: avoid one particular class of bogus problems
-
+            // both explicit: verify conflict
+            if (oldOne.getClass() == newOne.getClass()) {
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                         +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-            // otherwise, which one to choose?
-                // new type more generic, use old
-            // new type more specific, use it
+            }
+            // no conflict if different classes, allow override
+        } else {
+            // no explicit old creator, but new one explicit, so replace old
+            if (explicit) {
+                _explicitCreators |= mask;
+            } else {
+                // neither explicit, but old already present, consider if they are same class
+                if (oldOne.getClass() == newOne.getClass()) {
+                    // conflict: two implied creators of same kind
+                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                        +" creators: already had implicitly marked "+oldOne+", encountered "+newOne);
+                }
+                // else allow override
+            }
         }
-    }
-    if (explicit) {
-        _explicitCreators |= mask;
+    } else {
+        if (explicit) {
+            _explicitCreators |= mask;
+        }
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
+
