--- 
+++ 
@@ -1,15 +1,29 @@
 private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {
     // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.
     // rels without a baseuri get removed
-    String value = el.absUrl(attr.getKey());
-    if (!preserveRelativeLinks)
-        attr.setValue(value);
-    
+    String url = attr.getValue();
+    if (preserveRelativeLinks) {
+        // if preserving relative links, keep original value to check protocol
+        // but if it's absolute, url will be absolute url; else remains original relative
+        if (el.hasAttr(attr.getKey())) {
+            String abs = el.absUrl(attr.getKey());
+            if (!abs.isEmpty()) {
+                url = abs;
+            }
+        }
+    } else {
+        // overwrite attribute value with absolute url (may be empty string)
+        String abs = el.absUrl(attr.getKey());
+        attr.setValue(abs);
+        url = abs;
+    }
+
     for (Protocol protocol : protocols) {
-        String prot = protocol.toString() + ":";
-        if (value.toLowerCase().startsWith(prot)) {
+        String prot = protocol.toString().toLowerCase() + ":";
+        if (url.toLowerCase().startsWith(prot)) {
             return true;
         }
     }
     return false;
 }
+
