--- 
+++ 
@@ -18,32 +18,31 @@
             // first: let's check to see if this might be part of value with external type id:
             // 11-Sep-2015, tatu: Important; do NOT pass buffer as last arg, but null,
             //   since it is not the bean
-            if (ext.handlePropertyValue(p, ctxt, propName, buffer)) {
-                ;
-            } else {
-                // Last creator property to set?
-                if (buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {
-                    t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
-                    Object bean;
-                    try {
-                        bean = creator.build(ctxt, buffer);
-                    } catch (Exception e) {
-                        wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
-                        continue; // never gets here
-                    }
-                    // if so, need to copy all remaining tokens into buffer
-                    while (t == JsonToken.FIELD_NAME) {
-                        p.nextToken(); // to skip name
-                        tokens.copyCurrentStructure(p);
-                        t = p.nextToken();
-                    }
-                    if (bean.getClass() != _beanType.getRawClass()) {
-                        // !!! 08-Jul-2011, tatu: Could theoretically support; but for now
-                        //   it's too complicated, so bail out
-                        throw ctxt.mappingException("Can not create polymorphic instances with unwrapped values");
-                    }
-                    return ext.complete(p, ctxt, bean);
+            if (ext.handlePropertyValue(p, ctxt, propName, null)) {
+                continue;
+            }
+            // Last creator property to set?
+            if (buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {
+                t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
+                Object bean;
+                try {
+                    bean = creator.build(ctxt, buffer);
+                } catch (Exception e) {
+                    wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
+                    continue; // never gets here
                 }
+                // if so, need to copy all remaining tokens into buffer
+                while (t == JsonToken.FIELD_NAME) {
+                    p.nextToken(); // to skip name
+                    tokens.copyCurrentStructure(p);
+                    t = p.nextToken();
+                }
+                if (bean.getClass() != _beanType.getRawClass()) {
+                    // !!! 08-Jul-2011, tatu: Could theoretically support; but for now
+                    //   it's too complicated, so bail out
+                    throw ctxt.mappingException("Can not create polymorphic instances with unwrapped values");
+                }
+                return ext.complete(p, ctxt, bean);
             }
             continue;
         }
@@ -71,7 +70,10 @@
         // "any property"?
         if (_anySetter != null) {
             buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));
+            continue;
         }
+        // If nothing resolved, and no anySetter, skip value to avoid infinite loop or error
+        p.skipChildren();
     }
 
     // We hit END_OBJECT; resolve the pieces:
@@ -82,3 +84,4 @@
         return null; // never gets here
     }
 }
+
