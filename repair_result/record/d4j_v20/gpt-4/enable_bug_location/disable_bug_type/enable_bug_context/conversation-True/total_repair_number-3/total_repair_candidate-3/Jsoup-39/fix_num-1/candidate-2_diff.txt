--- 
+++ 
@@ -3,31 +3,30 @@
     Document doc = null;
     if (charsetName == null) { // determine from meta. safe parse as UTF-8
         // look for <meta http-equiv="Content-Type" content="text/html;charset=gb2312"> or HTML5 <meta charset="gb2312">
-        docData = Charset.forName(defaultCharset).decode(byteData).toString();
+        charsetName = defaultCharset;
+        docData = Charset.forName(charsetName).decode(byteData).toString();
         doc = parser.parseInput(docData, baseUri);
         Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
         if (meta != null) { // if not found, will keep utf-8 as best attempt
-            String foundCharset;
+            String foundCharset = null;
             if (meta.hasAttr("http-equiv")) {
                 foundCharset = getCharsetFromContentType(meta.attr("content"));
-                if (foundCharset == null && meta.hasAttr("charset")) {
-                    try {
-                        if (Charset.isSupported(meta.attr("charset"))) {
-                            foundCharset = meta.attr("charset");
-                        }
-                    } catch (IllegalCharsetNameException e) {
-                        foundCharset = null;
+            }
+            if (foundCharset == null && meta.hasAttr("charset")) {
+                try {
+                    if (Charset.isSupported(meta.attr("charset"))) {
+                        foundCharset = meta.attr("charset");
                     }
+                } catch (IllegalCharsetNameException e) {
+                    foundCharset = null;
                 }
-            } else {
-                foundCharset = meta.attr("charset");
             }
 
-            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
+            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equalsIgnoreCase(charsetName)) { // need to re-decode
                 foundCharset = foundCharset.trim().replaceAll("[\"']", "");
                 charsetName = foundCharset;
                 byteData.rewind();
-                docData = Charset.forName(foundCharset).decode(byteData).toString();
+                docData = Charset.forName(charsetName).decode(byteData).toString();
                 doc = null;
             }
         }
@@ -48,3 +47,4 @@
     }
     return doc;
 }
+
