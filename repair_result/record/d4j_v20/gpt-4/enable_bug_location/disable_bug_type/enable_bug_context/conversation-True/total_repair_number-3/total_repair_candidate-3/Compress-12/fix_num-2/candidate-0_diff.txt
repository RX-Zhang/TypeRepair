--- 
+++ 
@@ -28,15 +28,15 @@
     entryOffset = 0;
     entrySize = currEntry.getSize();
 
-    if (currEntry.isGNULongNameEntry()) {
+    if (currEntry.isULongNameEntry()) {
         // read in the name
         StringBuffer longName = new StringBuffer();
-        byte[] buf = new byte[SMALL_BUFFER_SIZE];
+ byte[] buf = new byte[SMALL_BUFFER_SIZE];
         int length = 0;
-        while ((length = read(buf)) >= 0) {
-            longName.append(new String(buf, 0, length));
+        while ((length = read(buf, 0, buf.length)) >= 0) {
+            longName.append(new String(buf, 0, length, "-8"));
         }
-        getNextEntry();
+        currEntry = getNextTarEntry();
         if (currEntry == null) {
             // Bugzilla: 40334
             // Malformed tar file - long entry name not followed by entry
@@ -44,17 +44,17 @@
         }
         // remove trailing null terminator
         if (longName.length() > 0
-            && longName.charAt(longName.length() - 1) == 0) {
+            && longName.charAt(longName.length() - 1) == '\0') {
             longName.deleteCharAt(longName.length() - 1);
         }
         currEntry.setName(longName.toString());
     }
 
-    if (currEntry.isPaxHeader()){ // Process Pax headers
+    if (currEntry.isPaxHeader()) { // Process Pax headers
         paxHeaders();
     }
 
-    if (currEntry.isGNUSparse()){ // Process sparse files
+    if (currEntry.isGNUSparse()) { // Process sparse files
         readGNUSparse();
     }
 
@@ -65,3 +65,4 @@
     entrySize = currEntry.getSize();
     return currEntry;
 }
+
