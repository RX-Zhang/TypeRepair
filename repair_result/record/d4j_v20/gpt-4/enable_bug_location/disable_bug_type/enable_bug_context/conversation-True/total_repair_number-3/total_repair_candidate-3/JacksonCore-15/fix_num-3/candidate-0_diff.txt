--- 
+++ 
@@ -1,11 +1,11 @@
 public JsonToken nextToken() throws IOException
 {
-	//Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken
-	// check for no buffered context _exposedContext - null
-	//If all the conditions matches then check for scalar / non-scalar property
-		//if not scalar and ended successfully, then return null
-		//else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once
-		// then return null 
+    //Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken
+    // check for no buffered context _exposedContext - null
+    //If all the conditions matches then check for scalar / non-scalar property
+        //if not scalar and ended successfully, then return null
+        //else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once
+        // then return null 
     // Anything buffered?
     TokenFilterContext ctxt = _exposedContext;
 
@@ -21,10 +21,11 @@
                 _exposedContext = null;
                 if (ctxt.inArray()) {
                     t = delegate.getCurrentToken();
-s this guaranteed to work without further checks?
-                      if (t != JsonToken.START_ARRAY) {
-                    _currToken = t;
-                    return t;
+                    // this is guaranteed to work without further checks
+                    if (t != JsonToken.START_ARRAY) {
+                        _currToken = t;
+                        return t;
+                    }
                 }
 
                 // Almost! Most likely still have the current token;
@@ -47,6 +48,11 @@
         }
     }
 
+    // Check for no multiple matches allowed, and check if we already matched once
+    if (!_allowMultipleMatches && getMatchCount() > 0) {
+        return (_currToken = null);
+    }
+
     // If not, need to read more. If we got any:
     JsonToken t = delegate.nextToken();
     if (t == null) {
@@ -56,7 +62,7 @@
 
     // otherwise... to include or not?
     TokenFilter f;
-    
+
     switch (t.id()) {
     case ID_START_ARRAY:
         f = _itemFilter;
@@ -83,7 +89,7 @@
             return (_currToken = t);
         }
         _headContext = _headContext.createChildArrayContext(f, false);
-        
+
         // Also: only need buffering if parent path to be included
         if (_includePath) {
             t = _nextTokenWithBuffering(_headContext);
@@ -210,3 +216,4 @@
     // We get here if token was not yet found; offlined handling
     return _nextToken2();
 }
+
