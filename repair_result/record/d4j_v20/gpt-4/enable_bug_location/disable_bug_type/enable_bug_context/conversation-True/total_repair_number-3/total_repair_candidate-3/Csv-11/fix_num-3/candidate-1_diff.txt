--- 
+++ 
@@ -13,7 +13,7 @@
             }
         } else {
             if (this.format.getSkipHeaderRecord()) {
-                this.nextRecord();
+                this.nextRecord(); // consume the first record if skipping header
             }
             headerRecord = formatHeader;
         }
@@ -22,8 +22,14 @@
         if (headerRecord != null) {
             for (int i = 0; i < headerRecord.length; i++) {
                 final String header = headerRecord[i];
+                if (header == null) {
+                    // if header is null, treat it as empty string for checking
+                    if (!this.format.getIgnoreEmptyHeaders()) {
+                        throw new IllegalArgumentException("The header contains a null name in " + Arrays.toString(headerRecord));
+                    }
+                }
                 final boolean containsHeader = hdrMap.containsKey(header);
-                final boolean emptyHeader = header.trim().isEmpty();
+                final boolean emptyHeader = header == null || header.trim().isEmpty();
                 if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
                     throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                             "\" in " + Arrays.toString(headerRecord));
@@ -34,3 +40,4 @@
     }
     return hdrMap;
 }
+
