--- 
+++ 
@@ -3,13 +3,14 @@
     Document doc = null;
 
     // look for BOM - overrides any other header or input
-
     if (charsetName == null) { // determine from meta. safe parse as UTF-8
-        // look for <meta http-equiv="Content-Type" content="text/html;charset=gb2312"> or HTML5 <meta charset="gb2312">
+        // decode initially with default charset
         docData = Charset.forName(defaultCharset).decode(byteData).toString();
         doc = parser.parseInput(docData, baseUri);
+
+        // locate meta charset declaration
         Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
-        if (meta != null) { // if not found, will keep utf-8 as best attempt
+        if (meta != null) { // if found, get charset from meta tag content attribute or charset attribute
             String foundCharset = null;
             if (meta.hasAttr("http-equiv")) {
                 foundCharset = getCharsetFromContentType(meta.attr("content"));
@@ -24,8 +25,9 @@
                 }
             }
 
-            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
+            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode
                 foundCharset = foundCharset.trim().replaceAll("[\"']", "");
+
                 charsetName = foundCharset;
                 byteData.rewind();
                 docData = Charset.forName(foundCharset).decode(byteData).toString();
@@ -36,16 +38,18 @@
         Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
         docData = Charset.forName(charsetName).decode(byteData).toString();
     }
+
+    // handle BOM char at start of decoded content
     if (docData.length() > 0 && docData.charAt(0) == UNICODE_BOM) {
-        byteData.rewind();
-        docData = Charset.forName(defaultCharset).decode(byteData).toString();
         docData = docData.substring(1);
-        charsetName = defaultCharset;
+        charsetName = charsetName == null ? defaultCharset : charsetName;
         doc = null;
     }
+
     if (doc == null) {
         doc = parser.parseInput(docData, baseUri);
         doc.outputSettings().charset(charsetName);
     }
     return doc;
 }
+
