--- 
+++ 
@@ -7,13 +7,9 @@
         throw new IllegalArgumentException("Length "+length+" must be at least 2");
     }
 
-    if (buffer[start] == 0) {
-        return 0L;
-    }
-
-    // Skip leading spaces
-    while (start < end){
-        if (buffer[start] == ' '){
+    // Skip leading NULs and spaces
+    while (start < end) {
+        if (buffer[start] == 0 || buffer[start] == ' ') {
             start++;
         } else {
             break;
@@ -21,30 +17,35 @@
     }
 
     // Must have trailing NUL or space
-    byte trailer;
-    trailer = buffer[end-1];
-    if (trailer == 0 || trailer == ' '){
-        end--;
-    } else {
-        throw new IllegalArgumentException(
-                exceptionMessage(buffer, offset, length, end-1, trailer));
-    }
-    // May have additional NULs or spaces
-    trailer = buffer[end - 1];
-    if (trailer == 0 || trailer == ' '){
-        end--;
+    if (end > offset) {
+        byte trailer = buffer[end - 1];
+        if (trailer == 0 || trailer == ' ') {
+            end--;
+        } else {
+            throw new IllegalArgumentException(
+                    exceptionMessage(buffer, offset, length, end - 1, trailer));
+        }
     }
 
-    for ( ;start < end; start++) {
+    // May have additional NULs or spaces before trailer that was removed
+    while (end > start) {
+        byte trailer = buffer[end - 1];
+        if (trailer == 0 || trailer == ' ') {
+            end--;
+        } else {
+            break;
+        }
+    }
+
+    for (; start < end; start++) {
         final byte currentByte = buffer[start];
-        // CheckStyle:MagicNumber OFF
-        if (currentByte < '0' || currentByte > '7'){
+        if (currentByte < '0' || currentByte > '7') {
             throw new IllegalArgumentException(
                     exceptionMessage(buffer, offset, length, start, currentByte));
         }
         result = (result << 3) + (currentByte - '0'); // convert from ASCII
-        // CheckStyle:MagicNumber ON
     }
 
     return result;
 }
+
