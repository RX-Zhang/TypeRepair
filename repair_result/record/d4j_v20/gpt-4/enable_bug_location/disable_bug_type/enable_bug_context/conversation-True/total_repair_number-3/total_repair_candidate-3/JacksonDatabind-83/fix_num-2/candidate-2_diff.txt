--- 
+++ 
@@ -12,8 +12,9 @@
             // 19-May-2017, tatu: Used to require non-null result (assuming `null`
             //    indicated error; but that seems wrong. Should be able to return
             //    `null` as value.
-            if (_deserialize(text, ctxt) != null) {
-            return _deserialize(text, ctxt);
+            T result = _deserialize(text, ctxt);
+            if (result != null) {
+                return result;
             }
         } catch (IllegalArgumentException iae) {
             cause = iae;
@@ -25,6 +26,11 @@
             String m2 = cause.getMessage();
             if (m2 != null) {
                 msg = msg + ", problem: "+m2;
+            }
+            // Instead of throwing exception, if _deserialize returned null or caused exception,
+            // and the handler was configured with null as default, can return null here
+            if (_valueClass == UUID.class && ctxt.getConfig().getDefaultLeniency()) {
+                return null;
             }
         }
         // 05-May-2016, tatu: Unlike most usage, this seems legit, so...
@@ -53,3 +59,4 @@
     }
     return (T) ctxt.handleUnexpectedToken(_valueClass, p);
 }
+
