--- 
+++ 
@@ -17,9 +17,9 @@
         if (creatorProp != null) {
             if (buffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt))) {
                 t = p.nextToken();
-                Object bean;
+                Object builder;
                 try {
-                    bean = creator.build(ctxt, buffer);
+                    builder = creator.build(ctxt, buffer);
                 } catch (Exception e) {
                     wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                     continue;
@@ -30,10 +30,11 @@
                     t = p.nextToken();
                 }
                 tokens.writeEndObject();
-                if (bean.getClass() != _beanType.getRawClass()) {
+                if (builder.getClass() != _beanType.getRawClass()) {
                     ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
                     return null;
                 }
+                Object bean = finishBuild(ctxt, builder);
                 return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
             }
             continue;
@@ -61,12 +62,14 @@
     }
 
     // We hit END_OBJECT, so:
-    Object bean;
+    Object builder;
     // !!! 15-Feb-2012, tatu: Need to modify creator to use Builder!
     try {
-        bean = creator.build(ctxt, buffer);
+        builder = creator.build(ctxt, buffer);
     } catch (Exception e) {
         return wrapInstantiationProblem(e, ctxt);
     }
+    Object bean = finishBuild(ctxt, builder);
     return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
 }
+
