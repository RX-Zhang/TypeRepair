--- 
+++ 
@@ -4,7 +4,7 @@
     // 01-Dec-2016, tatu: Note: This IS legal to call, but only when unwrapped
     //    value itself is NOT passed via `CreatorProperty` (which isn't supported).
     //    Ok however to pass via setter or field.
-    
+
     final PropertyBasedCreator creator = _propertyBasedCreator;
     PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);
 
@@ -19,14 +19,18 @@
         SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);
         if (creatorProp != null) {
             // Last creator property to set?
-            if (buffer.assignParameter(creatorProp,
-                    _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {
+            Object value = _deserializeWithErrorWrapping(p, ctxt, creatorProp);
+            if (buffer.assignParameter(creatorProp, value)) {
                 t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT
                 Object bean;
                 try {
                     bean = creator.build(ctxt, buffer);
                 } catch (Exception e) {
                     bean = wrapInstantiationProblem(e, ctxt);
+                }
+                if (bean == null) {
+                    return ctxt.handleInstantiationProblem(handledType(), null,
+                            _creatorReturnedNullException());
                 }
                 // [databind#631]: Assign current value, to be accessible by custom serializers
                 p.setCurrentValue(bean);
@@ -97,5 +101,11 @@
         wrapInstantiationProblem(e, ctxt);
         return null; // never gets here
     }
+    if (bean == null) {
+        return ctxt.handleInstantiationProblem(handledType(), null,
+                _creatorReturnedNullException());
+    }
+    tokens.writeEndObject();
     return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
 }
+
