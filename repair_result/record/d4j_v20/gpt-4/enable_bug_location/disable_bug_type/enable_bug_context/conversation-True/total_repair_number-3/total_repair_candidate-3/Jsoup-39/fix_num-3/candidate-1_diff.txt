--- 
+++ 
@@ -6,30 +6,28 @@
         docData = Charset.forName(defaultCharset).decode(byteData).toString();
         doc = parser.parseInput(docData, baseUri);
         Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
+        String foundCharset = null;
         if (meta != null) { // if not found, will keep utf-8 as best attempt
-            String foundCharset;
             if (meta.hasAttr("http-equiv")) {
                 foundCharset = getCharsetFromContentType(meta.attr("content"));
-                if (foundCharset == null && meta.hasAttr("charset")) {
-                    try {
-                        if (Charset.isSupported(meta.attr("charset"))) {
-                            foundCharset = meta.attr("charset");
-                        }
-                    } catch (IllegalCharsetNameException e) {
-                        foundCharset = null;
+            }
+            if (foundCharset == null && meta.hasAttr("charset")) {
+                try {
+                    String attrCharset = meta.attr("charset");
+                    if (Charset.isSupported(attrCharset)) {
+                        foundCharset = attrCharset;
                     }
+                } catch (IllegalCharsetNameException e) {
+                    foundCharset = null;
                 }
-            } else {
-                foundCharset = meta.attr("charset");
             }
-
-            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
-                foundCharset = foundCharset.trim().replaceAll("[\"']", "");
-                charsetName = foundCharset;
-                byteData.rewind();
-                docData = Charset.forName(foundCharset).decode(byteData).toString();
-                doc = null;
-            }
+        }
+        if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode
+            foundCharset = foundCharset.trim().replaceAll("[\"']", "");
+            charsetName = foundCharset;
+            byteData.rewind();
+            docData = Charset.forName(foundCharset).decode(byteData).toString();
+            doc = null;
         }
     } else { // specified by content type header (or by user on file load)
         Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
@@ -48,3 +46,4 @@
     }
     return doc;
 }
+
