--- 
+++ 
@@ -17,12 +17,13 @@
         // [databind#125]: May have a content converter
         valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);
         if (valueDeser == null) {
-        // And we may also need to get deserializer for String
+            // And we may also need to get deserializer for String
             valueDeser = ctxt.findContextualValueDeserializer(valueType, property);
         }
     } else { // if directly assigned, probably not yet contextual, so:
         valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, valueType);
     }
+
     // 11-Dec-2015, tatu: Should we pass basic `Collection.class`, or more refined? Mostly
     //   comes down to "List vs Collection" I suppose... for now, pass Collection
     Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,
@@ -31,5 +32,14 @@
     if (isDefaultDeserializer(valueDeser)) {
         valueDeser = null;
     }
+
+    // Ensure ValueInstantiator has either delegate or default creator for instantiation
+    if (_valueInstantiator != null) {
+        if (!_valueInstantiator.canCreateUsingDelegate() && !_valueInstantiator.canCreateUsingDefault()) {
+            throw new JsonMappingException(ctxt.getParser(), "No suitable constructor found for StringCollectionDeserializer: missing default no-args constructor or delegate creator");
+        }
+    }
+
     return withResolved(delegate, valueDeser, nuller, unwrapSingle);
 }
+
