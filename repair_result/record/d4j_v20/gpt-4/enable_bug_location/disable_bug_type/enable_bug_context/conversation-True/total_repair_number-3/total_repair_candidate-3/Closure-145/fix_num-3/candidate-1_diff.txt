--- 
+++ 
@@ -1,8 +1,21 @@
 private boolean isOneExactlyFunctionOrDo(Node n) {
-      // For labels with block children, we need to ensure that a
-      // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
-      // are skipped. 
-        // Either a empty statement or an block with more than one child,
-        // way it isn't a FUNCTION or DO.
-    return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+    int type = n.getType();
+    if (type == Token.FUNCTION || type == Token.DO) {
+      return true;
+    }
+    
+    // Also allow labeled FUNCTION or DO statements,
+    // i.e., when the node is a LABEL and its first child is FUNCTION or DO.
+    if (type == Token.LABEL) {
+      Node firstChild = n.getFirstChild();
+      if (firstChild != null) {
+        int childType = firstChild.getType();
+        if (childType == Token.FUNCTION || childType == Token.DO) {
+          return true;
+        }
+      }
+    }
+    
+    return false;
 }
+
