--- 
+++ 
@@ -20,10 +20,15 @@
         return 0;
     }
 
-    if (depth1 == 1) {
+    if (p1.getRootNode() != p2.getRootNode()) {
         throw new JXPathException(
                 "Cannot compare pointers that do not belong to the same tree: '"
                         + p1 + "' and '" + p2 + "'");
+    }
+    if (depth1 == 1) {
+        // the pointers are different but the same root, so they are siblings
+        // continue comparison
+        return p1.parent.compareChildNodePointers(p1, p2);
     }
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
@@ -32,3 +37,4 @@
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
+
