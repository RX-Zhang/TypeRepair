--- 
+++ 
@@ -38,7 +38,7 @@
     JSType thisParamType = thisParam.getJSType();
     JSType thatParamType = thatParam.getJSType();
     if (thisParamType != null) {
-      if (thatParamType == null ||
+      if (thatParamType == null || 
           !thatParamType.isSubtype(thisParamType)) {
         return false;
       }
@@ -48,13 +48,7 @@
     boolean thatIsVarArgs = thatParam.isVarArgs();
 
     // "that" can't be a supertype, because it's missing a required argument.
-      // NOTE(nicksantos): In our type system, we use {function(...?)} and
-      // {function(...NoType)} to to indicate that arity should not be
-      // checked. Strictly speaking, this is not a correct formulation,
-      // because now a sub-function can required arguments that are var_args
-      // in the super-function. So we special-case this.
-
-    // don't advance if we have variable arguments
+    // Special case: var_args
     if (!thisIsVarArgs) {
       thisParam = thisParam.getNext();
     }
@@ -69,7 +63,14 @@
     }
   }
 
-  // "that" can't be a supertype, because it's missing a required arguement.
+  // If "that" has more required parameters than "this", it cannot be a supertype.
+  while (thatParam != null) {
+    if (!thatParam.isOptionalArg() && !thatParam.isVarArgs()) {
+      return false;
+    }
+    thatParam = thatParam.getNext();
+  }
 
   return true;
 }
+
