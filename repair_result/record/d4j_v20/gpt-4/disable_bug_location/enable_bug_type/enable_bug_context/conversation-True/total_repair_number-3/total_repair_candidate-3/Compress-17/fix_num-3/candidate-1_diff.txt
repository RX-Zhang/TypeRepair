--- 
+++ 
@@ -3,8 +3,11 @@
     int     end = offset + length;
     int     start = offset;
 
-    if (length < 2){
-        throw new IllegalArgumentException("Length "+length+" must be at least 2");
+    if (buffer == null) {
+        throw new IllegalArgumentException("Buffer is null");
+    }
+    if (offset < 0 || length < 2 || offset + length > buffer.length) {
+        throw new IllegalArgumentException("Invalid offset/length: offset=" + offset + ", length=" + length);
     }
 
     if (buffer[start] == 0) {
@@ -12,39 +15,45 @@
     }
 
     // Skip leading spaces
-    while (start < end){
-        if (buffer[start] == ' '){
+    while (start < end) {
+        if (buffer[start] == ' ') {
             start++;
         } else {
             break;
         }
     }
 
+    if (start == end) {
+        // Only spaces? Return 0 or throw error - assume zero here.
+        return 0L;
+    }
+
     // Must have trailing NUL or space
-    byte trailer;
-    trailer = buffer[end-1];
-    if (trailer == 0 || trailer == ' '){
+    byte trailer = buffer[end - 1];
+    if (trailer == 0 || trailer == ' ') {
         end--;
     } else {
         throw new IllegalArgumentException(
-                exceptionMessage(buffer, offset, length, end-1, trailer));
-    }
-    // May have additional NULs or spaces
-    trailer = buffer[end - 1];
-    if (trailer == 0 || trailer == ' '){
-        end--;
+                exceptionMessage(buffer, offset, length, end - 1, trailer));
     }
 
-    for ( ;start < end; start++) {
+    // May have additional NULs or spaces
+    if (end > offset) {
+        trailer = buffer[end - 1];
+        if (trailer == 0 || trailer == ' ') {
+            end--;
+        }
+    }
+
+    for (; start < end; start++) {
         final byte currentByte = buffer[start];
-        // CheckStyle:MagicNumber OFF
-        if (currentByte < '0' || currentByte > '7'){
+        if (currentByte < '0' || currentByte > '7') {
             throw new IllegalArgumentException(
                     exceptionMessage(buffer, offset, length, start, currentByte));
         }
         result = (result << 3) + (currentByte - '0'); // convert from ASCII
-        // CheckStyle:MagicNumber ON
     }
 
     return result;
 }
+
