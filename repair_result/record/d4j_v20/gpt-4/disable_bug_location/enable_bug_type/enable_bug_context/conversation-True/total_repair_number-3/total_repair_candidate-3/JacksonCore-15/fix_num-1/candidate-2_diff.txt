--- 
+++ 
@@ -1,11 +1,11 @@
 public JsonToken nextToken() throws IOException
 {
-	//Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken
-	// check for no buffered context _exposedContext - null
-	//If all the conditions matches then check for scalar / non-scalar property
-		//if not scalar and ended successfully, then return null
-		//else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once
-		// then return null 
+    // Check for _allowMultipleMatches - false and at least there is one token - which is _currToken
+    // check for no buffered context _exposedContext - null
+    // If all the conditions match then check for scalar / non-scalar property
+    //   if not scalar and ended successfully, then return null
+    //   else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once
+    //   then return null 
     // Anything buffered?
     TokenFilterContext ctxt = _exposedContext;
 
@@ -21,21 +21,22 @@
                 _exposedContext = null;
                 if (ctxt.inArray()) {
                     t = delegate.getCurrentToken();
-s this guaranteed to work without further checks?
-                      if (t != JsonToken.START_ARRAY) {
-                    _currToken = t;
-                    return t;
+                    // is this guaranteed to work without further checks?
+                    if (t != JsonToken.START_ARRAY) {
+                        _currToken = t;
+                        return t;
+                    }
+
+                    // Almost! Most likely still have the current token;
+                    // with the sole exception of 
+                    /*
+                    t = delegate.getCurrentToken();
+                    if (t != JsonToken.FIELD_NAME) {
+                        _currToken = t;
+                        return t;
+                    }
+                    */
                 }
-
-                // Almost! Most likely still have the current token;
-                // with the sole exception of 
-                /*
-                t = delegate.getCurrentToken();
-                if (t != JsonToken.FIELD_NAME) {
-                    _currToken = t;
-                    return t;
-                }
-                */
                 break;
             }
             // If not, traverse down the context chain
@@ -56,7 +57,7 @@
 
     // otherwise... to include or not?
     TokenFilter f;
-    
+
     switch (t.id()) {
     case ID_START_ARRAY:
         f = _itemFilter;
@@ -83,7 +84,7 @@
             return (_currToken = t);
         }
         _headContext = _headContext.createChildArrayContext(f, false);
-        
+
         // Also: only need buffering if parent path to be included
         if (_includePath) {
             t = _nextTokenWithBuffering(_headContext);
@@ -133,63 +134,63 @@
 
     case ID_END_ARRAY:
     case ID_END_OBJECT:
-        {
-            boolean returnEnd = _headContext.isStartHandled();
-            f = _headContext.getFilter();
-            if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {
-                f.filterFinishArray();
-            }
-            _headContext = _headContext.getParent();
-            _itemFilter = _headContext.getFilter();
-            if (returnEnd) {
+    {
+        boolean returnEnd = _headContext.isStartHandled();
+        f = _headContext.getFilter();
+        if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {
+            f.filterFinishArray();
+        }
+        _headContext = _headContext.getParent();
+        _itemFilter = _headContext.getFilter();
+        if (returnEnd) {
+            return (_currToken = t);
+        }
+    }
+    break;
+
+    case ID_FIELD_NAME:
+    {
+        final String name = delegate.getCurrentName();
+        // note: this will also set 'needToHandleName'
+        f = _headContext.setFieldName(name);
+        if (f == TokenFilter.INCLUDE_ALL) {
+            _itemFilter = f;
+            if (!_includePath) {
+                // Minor twist here: if parent NOT included, may need to induce output of
+                // surrounding START_OBJECT/END_OBJECT
+                if (_includeImmediateParent && !_headContext.isStartHandled()) {
+                    t = _headContext.nextTokenToRead(); // returns START_OBJECT but also marks it handled
+                    _exposedContext = _headContext;
+                }
+            }
+            return (_currToken = t);
+        }
+        if (f == null) {
+            delegate.nextToken();
+            delegate.skipChildren();
+            break;
+        }
+        f = f.includeProperty(name);
+        if (f == null) {
+            delegate.nextToken();
+            delegate.skipChildren();
+            break;
+        }
+        _itemFilter = f;
+        if (f == TokenFilter.INCLUDE_ALL) {
+            if (_includePath) {
                 return (_currToken = t);
             }
         }
-        break;
-
-    case ID_FIELD_NAME:
-        {
-            final String name = delegate.getCurrentName();
-            // note: this will also set 'needToHandleName'
-            f = _headContext.setFieldName(name);
-            if (f == TokenFilter.INCLUDE_ALL) {
-                _itemFilter = f;
-                if (!_includePath) {
-                    // Minor twist here: if parent NOT included, may need to induce output of
-                    // surrounding START_OBJECT/END_OBJECT
-                    if (_includeImmediateParent && !_headContext.isStartHandled()) {
-                        t = _headContext.nextTokenToRead(); // returns START_OBJECT but also marks it handled
-                        _exposedContext = _headContext;
-                    }
-                }
-                return (_currToken = t);
-            }
-            if (f == null) {
-                delegate.nextToken();
-                delegate.skipChildren();
-                break;
-            }
-            f = f.includeProperty(name);
-            if (f == null) {
-                delegate.nextToken();
-                delegate.skipChildren();
-                break;
-            }
-            _itemFilter = f;
-            if (f == TokenFilter.INCLUDE_ALL) {
-                if (_includePath) {
-                    return (_currToken = t);
-                }
-            }
-            if (_includePath) {
-                t = _nextTokenWithBuffering(_headContext);
-                if (t != null) {
-                    _currToken = t;
-                    return t;
-                }
-            }
-            break;
-        }
+        if (_includePath) {
+            t = _nextTokenWithBuffering(_headContext);
+            if (t != null) {
+                _currToken = t;
+                return t;
+            }
+        }
+    }
+    break;
 
     default: // scalar value
         f = _itemFilter;
@@ -210,3 +211,4 @@
     // We get here if token was not yet found; offlined handling
     return _nextToken2();
 }
+
