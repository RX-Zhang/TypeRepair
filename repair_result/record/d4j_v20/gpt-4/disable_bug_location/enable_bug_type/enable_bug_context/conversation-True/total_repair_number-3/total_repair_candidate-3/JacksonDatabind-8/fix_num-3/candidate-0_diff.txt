--- 
+++ 
@@ -6,28 +6,38 @@
     // already had an explicitly marked one?
     if (oldOne != null) {
 
-        if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-            // but skip, if new one not annotated
+        if ((_explicitCreators & mask) != 0) { // already had explicitly annotated
+            // skip, if new one not annotated
             if (!explicit) {
                 return;
             }
-            // both explicit: verify
-            // otherwise only verify if neither explicitly annotated.
+            // if both explicit, verify
+            // otherwise only verify if neither explicitly annotated
+        } else {
+            // if old one not explicit but new one is explicit, replace old one
+            if (explicit) {
+                // fall through and replace oldOne
+            } else {
+                // both non-explicit: allow replacement if different, else throw
+                if (oldOne.getClass() == newOne.getClass()) {
+                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                }
+                // else allow replacing
+                return;
+            }
         }
 
-        // one more thing: ok to override in sub-class
+        // one more thing: ok to override in sub-class only if same class
         if (oldOne.getClass() == newOne.getClass()) {
-            // [databind#667]: avoid one particular class of bogus problems
-
-                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                        +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-            // otherwise, which one to choose?
-                // new type more generic, use old
-            // new type more specific, use it
+            throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                    +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
         }
+        // otherwise which one to choose? use newOne (more specific)
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
+
