--- 
+++ 
@@ -1,6 +1,7 @@
 void resetInsertionMode() {
     boolean last = false;
-    for (int pos = stack.size() -1; pos >= 0; pos--) {
+    ArrayList<Element> stack = getStack();
+    for (int pos = stack.size() - 1; pos >= 0; pos--) {
         Element node = stack.get(pos);
         if (pos == 0) {
             last = true;
@@ -9,8 +10,8 @@
         String name = node.nodeName();
         if ("select".equals(name)) {
             transition(HtmlTreeBuilderState.InSelect);
-            break; // frag
-        } else if (("td".equals(name) || "td".equals(name) && !last)) {
+            break;
+        } else if (("td".equals(name) || "th".equals(name)) && !last) {
             transition(HtmlTreeBuilderState.InCell);
             break;
         } else if ("tr".equals(name)) {
@@ -24,25 +25,26 @@
             break;
         } else if ("colgroup".equals(name)) {
             transition(HtmlTreeBuilderState.InColumnGroup);
-            break; // frag
+            break;
         } else if ("table".equals(name)) {
             transition(HtmlTreeBuilderState.InTable);
             break;
         } else if ("head".equals(name)) {
             transition(HtmlTreeBuilderState.InBody);
-            break; // frag
+            break;
         } else if ("body".equals(name)) {
             transition(HtmlTreeBuilderState.InBody);
             break;
         } else if ("frameset".equals(name)) {
             transition(HtmlTreeBuilderState.InFrameset);
-            break; // frag
+            break;
         } else if ("html".equals(name)) {
             transition(HtmlTreeBuilderState.BeforeHead);
-            break; // frag
+            break;
         } else if (last) {
             transition(HtmlTreeBuilderState.InBody);
-            break; // frag
+            break;
         }
     }
 }
+
