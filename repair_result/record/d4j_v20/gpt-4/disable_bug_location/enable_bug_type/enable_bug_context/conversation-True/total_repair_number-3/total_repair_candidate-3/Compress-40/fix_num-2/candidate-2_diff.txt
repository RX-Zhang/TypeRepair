--- 
+++ 
@@ -15,15 +15,15 @@
         }
         bitsCachedSize += 8;
     }
-        // bitsCachedSize >= 57 and left-shifting it 8 bits would cause an overflow
-    
     final long bitsOut;
-        if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
-            bitsOut = (bitsCached & MASKS[count]);
-            bitsCached >>>= count;
-        } else {
-            bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
-        }
-        bitsCachedSize -= count;
+    if (byteOrder == ByteOrder.LITTLE_ENDIAN) {
+        bitsOut = (bitsCached & MASKS[count]);
+        bitsCached >>>= count;
+    } else {
+        bitsOut = (bitsCached >> (bitsCachedSize - count)) & MASKS[count];
+        bitsCached &= (1L << (bitsCachedSize - count)) - 1; // clear the bits that have been read
+    }
+    bitsCachedSize -= count;
     return bitsOut;
 }
+
