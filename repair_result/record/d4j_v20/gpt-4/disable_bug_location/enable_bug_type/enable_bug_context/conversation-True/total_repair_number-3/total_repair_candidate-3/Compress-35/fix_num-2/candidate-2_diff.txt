--- 
+++ 
@@ -1,21 +1,21 @@
 public static boolean verifyCheckSum(byte[] header) {
     long storedSum = 0;
-    long unsignedSum = 0;
-    long signedSum = 0;
 
-    int digits = 0;
+    // The CHKSUM field is 8 bytes long in tar headers
+    // parseOctal can be used to read the stored checksum value
+    storedSum = TarUtils.parseOctal(header, CHKSUM_OFFSET, CHKSUMLEN);
+
+    // Compute the checksum of the header with the checksum field treated as spaces
+    long computedSum = 0;
     for (int i = 0; i < header.length; i++) {
         byte b = header[i];
-        if (CHKSUM_OFFSET  <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {
-            if ('0' <= b && b <= '7' && digits++ < 6) {
-                storedSum = storedSum * 8 + b - '0';
-            } else if (digits > 0) {
-                digits = 6;
-            }
-            b = ' ';
+        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {
+            // The checksum field is treated as space characters (0x20)
+            b = 0x20;
         }
-        unsignedSum += 0xff & b;
-        signedSum += b;
+        computedSum += (b & 0xff);
     }
-    return storedSum == unsignedSum || storedSum == signedSum;
+
+    return storedSum == computedSum;
 }
+
