--- 
+++ 
@@ -19,7 +19,7 @@
 
     byte[] headerBuf = getRecord();
 
-    if (hasHitEOF) {
+    if (hasHitEOF || headerBuf == null) {
         currEntry = null;
         return null;
     }
@@ -30,24 +30,28 @@
 
     if (currEntry.isGNULongNameEntry()) {
         // read in the name
-        StringBuffer longName = new StringBuffer();
+        StringBuilder longName = new StringBuilder();
         byte[] buf = new byte[SMALL_BUFFER_SIZE];
-        int length = 0;
-        while ((length = read(buf)) >= 0) {
+        int length;
+        while ((length = read(buf, 0, SMALL_BUFFER_SIZE)) > 0) {
             longName.append(new String(buf, 0, length));
         }
-        getNextEntry();
-        if (currEntry == null) {
+        TarArchiveEntry nextEntry = getNextTarEntry();
+        if (nextEntry == null) {
             // Bugzilla: 40334
             // Malformed tar file - long entry name not followed by entry
+            currEntry = null;
             return null;
         }
+        currEntry = nextEntry;
         // remove trailing null terminator
         if (longName.length() > 0
             && longName.charAt(longName.length() - 1) == 0) {
             longName.deleteCharAt(longName.length() - 1);
         }
         currEntry.setName(longName.toString());
+        entryOffset = 0;
+        entrySize = currEntry.getSize();
     }
 
     if (currEntry.isPaxHeader()){ // Process Pax headers
@@ -65,3 +69,4 @@
     entrySize = currEntry.getSize();
     return currEntry;
 }
+
