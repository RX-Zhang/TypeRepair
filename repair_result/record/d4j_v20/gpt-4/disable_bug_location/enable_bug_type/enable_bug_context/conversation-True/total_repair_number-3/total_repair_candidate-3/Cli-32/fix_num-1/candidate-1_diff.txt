--- 
+++ 
@@ -3,8 +3,8 @@
     int pos;
     
     // the line ends before the max wrap pos or a new line char found
-    if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)
-            || ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))
+    if (((pos = text.indexOf('\n', startPos)) != -1 && pos - startPos <= width)
+            || ((pos = text.indexOf('\t', startPos)) != -1 && pos - startPos <= width))
     {
         return pos + 1;
     }
@@ -13,15 +13,18 @@
         return -1;
     }
 
-
     // look for the last whitespace character before startPos+width
     pos = startPos + width;
 
     char c;
 
-    while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
-            && (c != '\n') && (c != '\r'))
+    while (pos > startPos)
     {
+        c = text.charAt(pos);
+        if (c == ' ' || c == '\n' || c == '\r')
+        {
+            break;
+        }
         --pos;
     }
 
@@ -33,10 +36,18 @@
     
     // if we didn't find one, simply chop at startPos+width
     pos = startPos + width;
-    while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
-           && (c != '\n') && (c != '\r'))
+
+    // Prevent StringIndexOutOfBoundsException by checking pos < text.length()
+    while (pos < text.length())
     {
+        c = text.charAt(pos);
+        if (c == ' ' || c == '\n' || c == '\r')
+        {
+            break;
+        }
         ++pos;
-    }        
+    }
+
     return pos == text.length() ? -1 : pos;
 }
+
