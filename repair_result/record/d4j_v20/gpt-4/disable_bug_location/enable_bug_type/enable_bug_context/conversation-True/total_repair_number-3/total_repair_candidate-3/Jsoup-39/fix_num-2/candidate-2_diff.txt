--- 
+++ 
@@ -7,9 +7,10 @@
         doc = parser.parseInput(docData, baseUri);
         Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
         if (meta != null) { // if not found, will keep utf-8 as best attempt
-            String foundCharset;
+            String foundCharset = null;
             if (meta.hasAttr("http-equiv")) {
                 foundCharset = getCharsetFromContentType(meta.attr("content"));
+                // Check charset attribute if getCharsetFromContentType returns null
                 if (foundCharset == null && meta.hasAttr("charset")) {
                     try {
                         if (Charset.isSupported(meta.attr("charset"))) {
@@ -20,15 +21,16 @@
                     }
                 }
             } else {
+                // HTML5 charset attribute
                 foundCharset = meta.attr("charset");
             }
 
-            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
+            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode
                 foundCharset = foundCharset.trim().replaceAll("[\"']", "");
                 charsetName = foundCharset;
                 byteData.rewind();
                 docData = Charset.forName(foundCharset).decode(byteData).toString();
-                doc = null;
+                doc = parser.parseInput(docData, baseUri);
             }
         }
     } else { // specified by content type header (or by user on file load)
@@ -41,10 +43,14 @@
         docData = Charset.forName(defaultCharset).decode(byteData).toString();
         docData = docData.substring(1);
         charsetName = defaultCharset;
+        doc = parser.parseInput(docData, baseUri);
     }
     if (doc == null) {
         doc = parser.parseInput(docData, baseUri);
         doc.outputSettings().charset(charsetName);
+    } else {
+        doc.outputSettings().charset(charsetName);
     }
     return doc;
 }
+
