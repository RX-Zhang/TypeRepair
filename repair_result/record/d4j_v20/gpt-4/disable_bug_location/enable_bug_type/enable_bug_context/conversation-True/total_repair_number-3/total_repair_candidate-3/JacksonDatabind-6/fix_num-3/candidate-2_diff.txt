--- 
+++ 
@@ -1,7 +1,7 @@
 protected Date parseAsISO8601(String dateStr, ParsePosition pos)
 {
     /* 21-May-2009, tatu: DateFormat has very strict handling of
-     * timezone  modifiers for ISO-8601. So we need to do some scrubbing.
+     * timezone modifiers for ISO-8601. So we need to do some scrubbing.
      */
 
     /* First: do we have "zulu" format ('Z' == "GMT")? If yes, that's
@@ -38,12 +38,15 @@
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.delete(len-3, len-2);
                 dateStr = sb.toString();
-            } else if (c == '+' || c == '-') { // missing minutes
+                len = dateStr.length();  // update length after deletion
+            }
+            c = dateStr.charAt(len-3);
+            if (c == '+' || c == '-') { // missing minutes
                 // let's just append '00'
                 dateStr += "00";
+                len = dateStr.length();  // update length after append
             }
             // Milliseconds partial or missing; and even seconds are optional
-            len = dateStr.length();
             // remove 'T', '+'/'-' and 4-digit timezone-offset
             c = dateStr.charAt(len-9);
             if (Character.isDigit(c)) {
@@ -58,7 +61,7 @@
         } else {
             // If not, plain date. Easiest to just patch 'Z' in the end?
             StringBuilder sb = new StringBuilder(dateStr);
-            // And possible also millisecond part if missing
+            // And possibly also millisecond part if missing
             int timeLen = len - dateStr.lastIndexOf('T') - 1;
             if (timeLen <= 8) {
                     sb.append(".000");
@@ -74,3 +77,4 @@
     }
     return df.parse(dateStr, pos);
 }
+
