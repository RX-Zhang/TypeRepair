--- 
+++ 
@@ -13,16 +13,24 @@
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
+        } else {
+            // no explicit creator previously recorded, but new one is explicit: allow replacing oldOne
+            if (explicit) {
+                // continue to verify for conflict
+            } else {
+                // neither old nor new creator is explicit => conflict
+                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                    +" creators: already had "+oldOne+", encountered "+newOne);
+            }
         }
 
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
-
-                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                        +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+            throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                    +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
             // otherwise, which one to choose?
-                // new type more generic, use old
+            // new type more generic, use old
             // new type more specific, use it
         }
     }
@@ -31,3 +39,4 @@
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
+
