--- 
+++ 
@@ -1,19 +1,39 @@
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
+  if (annotation == null) {
+    throw new IllegalArgumentException("JsonAdapter annotation is null");
+  }
+  
   Class<?> value = annotation.value();
+  if (value == null) {
+    throw new IllegalArgumentException("JsonAdapter annotation value is null");
+  }
+  
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-    typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    Object constructed = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    if (constructed == null) {
+      throw new IllegalStateException("Failed to construct TypeAdapter instance");
+    }
+    typeAdapter = (TypeAdapter<?>) constructed;
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-    typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-        .construct()
-        .create(gson, fieldType);
+    Object constructed = constructorConstructor.get(TypeToken.get(typeAdapterFactory)).construct();
+    if (constructed == null) {
+      throw new IllegalStateException("Failed to construct TypeAdapterFactory instance");
+    }
+    TypeAdapterFactory factory = (TypeAdapterFactory) constructed;
+    typeAdapter = factory.create(gson, fieldType);
+    if (typeAdapter == null) {
+      throw new IllegalStateException("TypeAdapterFactory.create() returned null");
+    }
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-    typeAdapter = typeAdapter.nullSafe();
+  
+  typeAdapter = typeAdapter.nullSafe();
   return typeAdapter;
 }
+
