--- 
+++ 
@@ -13,14 +13,24 @@
             }
             // both explicit: verify
             // otherwise only verify if neither explicitly annotated.
+        } else { 
+            // If previously not explicit, but new is explicit, allow override
+            if (!explicit) {
+                // neither old nor new explicit: continue to verification below
+            } else {
+                // new is explicit, old is not, override allowed, so no conflict
+                _explicitCreators |= mask;
+                _creators[typeIndex] = _fixAccess(newOne);
+                return;
+            }
         }
 
         // one more thing: ok to override in sub-class
         if (oldOne.getClass() == newOne.getClass()) {
             // [databind#667]: avoid one particular class of bogus problems
 
-                throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                        +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+            throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                    +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
             // otherwise, which one to choose?
                 // new type more generic, use old
             // new type more specific, use it
@@ -31,3 +41,4 @@
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
+
