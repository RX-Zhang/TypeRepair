--- 
+++ 
@@ -25,7 +25,12 @@
                         buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                         buffer[pos++] = (byte) (x & MASK_8BITS);
                     }
+                } else {
+                    // Ignore characters outside base64 alphabet but not PAD
+                    // Optionally could throw an exception here if strict mode is desired
                 }
+            } else {
+                // Ignore invalid bytes or handle as needed
             }
         }
     }
@@ -34,17 +39,24 @@
     // EOF (-1) and first time '=' character is encountered in stream.
     // This approach makes the '=' padding characters completely optional.
     if (eof && modulus != 0) {
-        
+
         x = x << 6;
         switch (modulus) {
             case 2 :
                 x = x << 6;
+                if (buffer == null || buffer.length - pos < 1) {
+                    resizeBuffer();
+                }
                 buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                 break;
             case 3 :
+                if (buffer == null || buffer.length - pos < 2) {
+                    resizeBuffer();
+                }
                 buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);
                 buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);
                 break;
         }
     }
 }
+
