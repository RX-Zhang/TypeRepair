--- 
+++ 
@@ -19,7 +19,7 @@
 
     byte[] headerBuf = getRecord();
 
-    if (hasHitEOF) {
+    if (headerBuf == null) {
         currEntry = null;
         return null;
     }
@@ -36,18 +36,22 @@
         while ((length = read(buf)) >= 0) {
             longName.append(new String(buf, 0, length));
         }
-        getNextEntry();
-        if (currEntry == null) {
+        TarArchiveEntry nextEntry = getNextTarEntry();  // recursively get next entry after longname
+        if (nextEntry == null) {
             // Bugzilla: 40334
             // Malformed tar file - long entry name not followed by entry
+            currEntry = null;
             return null;
         }
+        currEntry = nextEntry;  // Replace currEntry to the actual entry after long name
         // remove trailing null terminator
         if (longName.length() > 0
             && longName.charAt(longName.length() - 1) == 0) {
             longName.deleteCharAt(longName.length() - 1);
         }
         currEntry.setName(longName.toString());
+        entrySize = currEntry.getSize();
+        entryOffset = 0;
     }
 
     if (currEntry.isPaxHeader()){ // Process Pax headers
@@ -65,3 +69,4 @@
     entrySize = currEntry.getSize();
     return currEntry;
 }
+
