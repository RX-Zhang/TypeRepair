--- 
+++ 
@@ -15,11 +15,14 @@
         in.reset();
         if (ZipArchiveInputStream.matches(signature, signatureLength)) {
             return new ZipArchiveInputStream(in);
-        } else if (JarArchiveInputStream.matches(signature, signatureLength)) {
+        } 
+        if (JarArchiveInputStream.matches(signature, signatureLength)) {
             return new JarArchiveInputStream(in);
-        } else if (ArArchiveInputStream.matches(signature, signatureLength)) {
+        } 
+        if (ArArchiveInputStream.matches(signature, signatureLength)) {
             return new ArArchiveInputStream(in);
-        } else if (CpioArchiveInputStream.matches(signature, signatureLength)) {
+        } 
+        if (CpioArchiveInputStream.matches(signature, signatureLength)) {
             return new CpioArchiveInputStream(in);
         }
 
@@ -45,8 +48,9 @@
             try {
                 TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader));
                 // COMPRESS-191 - verify the header checksum
-                tais.getNextEntry();
+                if (tais.getNextEntry() != null) {
                     return new TarArchiveInputStream(in);
+                }
             } catch (Exception e) { // NOPMD
                 // can generate IllegalArgumentException as well
                 // as IOException
@@ -60,3 +64,4 @@
 
     throw new ArchiveException("No Archiver found for the stream signature");
 }
+
