--- 
+++ 
@@ -14,8 +14,7 @@
          *    revisited if this causes problems.
          */
         if (serializationType == null) {
-              serializationType = TypeFactory.type(am.getGenericType(), _beanDesc.getType());
-            serializationType = declaredType;
+            serializationType = TypeFactory.type(am.getGenericType(), _beanDesc.getType());
         }
         JavaType ct = serializationType.getContentType();
         // Not exactly sure why, but this used to occur; better check explicitly:
@@ -26,7 +25,7 @@
         serializationType = serializationType.withContentTypeHandler(contentTypeSer);
         ct = serializationType.getContentType();
     }
-    
+
     Object valueToSuppress = null;
     boolean suppressNulls = false;
 
@@ -38,7 +37,7 @@
 
     // 12-Jul-2016, tatu: [databind#1256] Need to make sure we consider type refinement
     JavaType actualType = (serializationType == null) ? declaredType : serializationType;
-    
+
     switch (inclusion) {
     case NON_DEFAULT:
         // 11-Nov-2015, tatu: This is tricky because semantics differ between cases,
@@ -46,10 +45,10 @@
         //    whereas for global defaults OR per-property overrides, we have more
         //    static definition. Sigh.
         // First: case of class specifying it; try to find POJO property defaults
-        if (_defaultInclusion.getValueInclusion() == JsonInclude.Include.NON_DEFAULT) {
+        if (_defaultInclusion.getValueInclusion() != JsonInclude.Include.NON_DEFAULT) {
+            valueToSuppress = getDefaultValue(actualType);
+        } else {
             valueToSuppress = getPropertyDefaultValue(propDef.getName(), am, actualType);
-        } else {
-            valueToSuppress = getDefaultValue(actualType);
         }
         if (valueToSuppress == null) {
             suppressNulls = true;
@@ -58,7 +57,6 @@
                 valueToSuppress = ArrayBuilders.getArrayComparator(valueToSuppress);
             }
         }
-
         break;
     case NON_ABSENT: // new with 2.6, to support Guava/JDK8 Optionals
         // always suppress nulls
@@ -102,3 +100,4 @@
     }
     return bpw;
 }
+
