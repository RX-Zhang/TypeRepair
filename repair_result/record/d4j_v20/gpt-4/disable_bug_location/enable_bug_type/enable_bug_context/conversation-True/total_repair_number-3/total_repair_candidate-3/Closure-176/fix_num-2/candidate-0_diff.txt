--- 
+++ 
@@ -26,16 +26,6 @@
       boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();
           // Makes it easier to check for NPEs.
 
-      // TODO(nicksantos): This might be a better check once we have
-      // back-inference of object/array constraints.  It will probably
-      // introduce more type warnings.  It uses the result type iff it's
-      // strictly narrower than the declared var type.
-      //
-      //boolean isVarTypeBetter = isVarDeclaration &&
-      //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
-      //     || !resultType.isSubtype(varType));
-
-
       if (isVarTypeBetter) {
         redeclareSimpleVar(scope, left, resultType);
       }
@@ -57,7 +47,18 @@
       }
 
       left.setJSType(resultType);
-      ensurePropertyDefined(left, resultType);
+
+      // Add a safe check that left is a valid GETPROP node and right type is not null
+      if (left != null && resultType != null) {
+        ensurePropertyDefined(left, resultType);
+      }
+      break;
+    default:
+      // Safeguard: In case left node type is unexpected, avoid NPEs or invalid operations
+      if (left != null && resultType != null) {
+        left.setJSType(resultType);
+      }
       break;
   }
 }
+
