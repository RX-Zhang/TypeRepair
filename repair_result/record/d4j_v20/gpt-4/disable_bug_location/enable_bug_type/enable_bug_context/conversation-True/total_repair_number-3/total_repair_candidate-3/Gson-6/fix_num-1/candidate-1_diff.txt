--- 
+++ 
@@ -1,19 +1,27 @@
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
-  TypeAdapter<?> typeAdapter;
-  if (TypeAdapter.class.isAssignableFrom(value)) {
-    Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-    typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
-  } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-    Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-    typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-        .construct()
-        .create(gson, fieldType);
-  } else {
-    throw new IllegalArgumentException(
-        "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
+  TypeAdapter<?> typeAdapter = null;
+  try {
+    if (TypeAdapter.class.isAssignableFrom(value)) {
+      Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
+      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
+    } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
+      Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
+      TypeAdapterFactory factoryInstance = constructorConstructor.get(TypeToken.get(typeAdapterFactory)).construct();
+      typeAdapter = factoryInstance.create(gson, fieldType);
+    } else {
+      throw new IllegalArgumentException(
+          "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
+    }
+  } catch (Exception e) {
+    throw new RuntimeException("Failed to create TypeAdapter instance for " + value, e);
   }
-    typeAdapter = typeAdapter.nullSafe();
-  return typeAdapter;
+
+  if (typeAdapter == null) {
+    throw new NullPointerException("TypeAdapter instance is null for " + value);
+  }
+
+  return typeAdapter.nullSafe();
 }
+
