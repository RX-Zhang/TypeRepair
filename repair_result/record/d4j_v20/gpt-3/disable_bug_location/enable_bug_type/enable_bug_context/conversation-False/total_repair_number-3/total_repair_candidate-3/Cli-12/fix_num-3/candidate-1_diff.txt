--- 
+++ 
@@ -19,6 +19,33 @@
         }
         else if (arg.startsWith("-"))
         {
+            // Check for --foo=bar or -f=bar style arguments
+            int indexOfEqual = arg.indexOf('=');
+            if (indexOfEqual != -1)
+            {
+                String optPart = null;
+                if (arg.startsWith("--"))
+                {
+                    optPart = arg.substring(2, indexOfEqual);
+                    if (options.hasOption(optPart))
+                    {
+                        tokens.add("--" + optPart);
+                        tokens.add(arg.substring(indexOfEqual + 1));
+                        continue;
+                    }
+                }
+                else if (arg.startsWith("-"))
+                {
+                    optPart = arg.substring(1, indexOfEqual);
+                    if (options.hasOption(optPart))
+                    {
+                        tokens.add("-" + optPart);
+                        tokens.add(arg.substring(indexOfEqual + 1));
+                        continue;
+                    }
+                }
+            }
+
             String opt = Util.stripLeadingHyphens(arg);
 
             if (options.hasOption(opt))
@@ -27,11 +54,10 @@
             }
             else
             {
-                if (options.hasOption(arg.substring(0, 2)))
+                if (arg.length() > 2 && options.hasOption(arg.substring(0, 2)))
                 {
-                    // the format is --foo=value or -foo=value
                     // the format is a special properties option (-Dproperty=value)
-                    tokens.add(arg.substring(0, 2)); // -D
+                    tokens.add(arg.substring(0, 2)); // e.g. -D
                     tokens.add(arg.substring(2)); // property=value
                 }
                 else
@@ -57,3 +83,4 @@
 
     return (String[]) tokens.toArray(new String[tokens.size()]);
 }
+
