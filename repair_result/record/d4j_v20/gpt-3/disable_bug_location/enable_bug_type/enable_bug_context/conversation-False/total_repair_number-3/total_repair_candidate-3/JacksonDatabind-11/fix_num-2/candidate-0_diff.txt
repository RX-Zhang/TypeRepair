--- 
+++ 
@@ -24,19 +24,13 @@
      */
     Type[] bounds = type.getBounds();
 
-    // With type variables we must use bound information.
-    // Theoretically this gets tricky, as there may be multiple
-    // bounds ("... extends A & B"); and optimally we might
-    // want to choose the best match. Also, bounds are optional;
-    // but here we are lucky in that implicit "Object" is
-    // added as bounds if so.
-    // Either way let's just use the first bound, for now, and
-    // worry about better match later on if there is need.
+    // Add placeholder for recursion prevention
+    context._addPlaceholder(name);
 
-    /* 29-Jan-2010, tatu: One more problem are recursive types
-     *   (T extends Comparable<T>). Need to add "placeholder"
-     *   for resolution to catch those.
-     */
-    context._addPlaceholder(name);
+    // If bounds are not empty, use first bound; otherwise fallback to Object.class type
+    if (bounds.length == 0) {
+        return _constructType(Object.class, context);
+    }
     return _constructType(bounds[0], context);
 }
+
