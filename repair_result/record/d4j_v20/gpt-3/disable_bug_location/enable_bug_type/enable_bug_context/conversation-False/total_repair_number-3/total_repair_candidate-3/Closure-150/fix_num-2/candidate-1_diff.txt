--- 
+++ 
@@ -1,8 +1,16 @@
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
-  if (n.getType() == Token.LP && parent == scope.getRootNode()) {
-    handleFunctionInputs(parent);
+  // The 'if' should check for FUNCTION node with LP child as function params,
+  // but here it incorrectly checks n.getType() == Token.LP. Correcting this to:
+  // Actually, the original code checks if n is LP and parent is root, then handleFunctionInputs(parent).
+  // This seems incorrect: Function parameters node is LP node, child of FUNCTION.
+  // The intended behavior is likely:
+  //   If n is a FUNCTION node, and parent is root, handleFunctionInputs(n).
+  // So fix the if condition accordingly.
+
+  if (n.getType() == Token.FUNCTION && parent == scope.getRootNode()) {
+    handleFunctionInputs(n);  // pass the function node here
     return;
   }
 
@@ -22,3 +30,4 @@
       break;
   }
 }
+
