--- 
+++ 
@@ -19,17 +19,30 @@
         }
         else if (arg.startsWith("-"))
         {
-            String opt = Util.stripLeadingHyphens(arg);
+            // Handle arguments with '=' such as --foo=bar or -f=bar
+            int pos = arg.indexOf('=');
+            String opt;
+            if (pos != -1)
+            {
+                opt = Util.stripLeadingHyphens(arg.substring(0, pos));
+                if (options.hasOption(opt))
+                {
+                    tokens.add(arg.substring(0, pos));
+                    tokens.add(arg.substring(pos + 1));
+                    continue;
+                }
+            }
 
+            // No '=' or option not found with '=' format, proceed as usual
+            opt = Util.stripLeadingHyphens(arg);
             if (options.hasOption(opt))
             {
                 tokens.add(arg);
             }
             else
             {
-                if (options.hasOption(arg.substring(0, 2)))
+                if (arg.length() > 2 && options.hasOption(arg.substring(0, 2)))
                 {
-                    // the format is --foo=value or -foo=value
                     // the format is a special properties option (-Dproperty=value)
                     tokens.add(arg.substring(0, 2)); // -D
                     tokens.add(arg.substring(2)); // property=value
@@ -57,3 +70,4 @@
 
     return (String[]) tokens.toArray(new String[tokens.size()]);
 }
+
