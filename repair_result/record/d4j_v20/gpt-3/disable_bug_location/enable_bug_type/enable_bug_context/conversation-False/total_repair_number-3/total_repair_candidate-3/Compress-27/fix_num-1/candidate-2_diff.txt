--- 
+++ 
@@ -7,17 +7,13 @@
         throw new IllegalArgumentException("Length "+length+" must be at least 2");
     }
 
-    if (buffer[start] == 0) {
-        return 0L;
+    // Skip leading NULs and spaces
+    while (start < end && (buffer[start] == 0 || buffer[start] == ' ')) {
+        start++;
     }
 
-    // Skip leading spaces
-    while (start < end){
-        if (buffer[start] == ' '){
-            start++;
-        } else {
-            break;
-        }
+    if (start == end) {
+        return 0L;
     }
 
     // Trim all trailing NULs and spaces.
@@ -27,23 +23,29 @@
     byte trailer = buffer[end - 1];
     while (start < end && (trailer == 0 || trailer == ' ')) {
         end--;
+        if (end == 0) {
+            break;
+        }
         trailer = buffer[end - 1];
     }
     if (start == end) {
-        throw new IllegalArgumentException(
-                exceptionMessage(buffer, offset, length, start, trailer));
+        return 0L;
     }
 
-    for ( ;start < end; start++) {
+    for (; start < end; start++) {
         final byte currentByte = buffer[start];
-        // CheckStyle:MagicNumber OFF
+        // Accept NUL or space ONLY if at the end (trailer).
+        if (currentByte == 0 || currentByte == ' ') {
+            // ignore trailing spaces or NULs within loop
+            continue;
+        }
         if (currentByte < '0' || currentByte > '7'){
             throw new IllegalArgumentException(
                     exceptionMessage(buffer, offset, length, start, currentByte));
         }
         result = (result << 3) + (currentByte - '0'); // convert from ASCII
-        // CheckStyle:MagicNumber ON
     }
 
     return result;
 }
+
