--- 
+++ 
@@ -38,18 +38,51 @@
                 StringBuilder sb = new StringBuilder(dateStr);
                 sb.delete(len-3, len-2);
                 dateStr = sb.toString();
+                len = dateStr.length(); // update length after modification
             } else if (c == '+' || c == '-') { // missing minutes
                 // let's just append '00'
                 dateStr += "00";
+                len = dateStr.length(); // update length after modification
             }
             // Milliseconds partial or missing; and even seconds are optional
-            len = dateStr.length();
+            // adjust parsing to correctly insert milliseconds if missing
             // remove 'T', '+'/'-' and 4-digit timezone-offset
-            c = dateStr.charAt(len-9);
-            if (Character.isDigit(c)) {
-                StringBuilder sb = new StringBuilder(dateStr);
-                sb.insert(len-5, ".000");
-                dateStr = sb.toString();
+            int timeStart = dateStr.indexOf('T');
+            if (timeStart < 0) {
+                timeStart = 0; // precaution; should not occur
+            }
+            // The position from which the timezone offset starts is (len - 5)
+            // Check if milliseconds are missing (no '.' before timezone offset)
+            int tzOffsetStart = len - 5;
+            if (tzOffsetStart > timeStart + 8) {
+                // There is at least seconds, check if dot present before tz offset
+                if (dateStr.charAt(tzOffsetStart - 4) != '.') {
+                    StringBuilder sb = new StringBuilder(dateStr);
+                    sb.insert(tzOffsetStart, ".000");
+                    dateStr = sb.toString();
+                    len = dateStr.length();
+                }
+            } else {
+                // may be missing seconds and milliseconds, insert ".000" after seconds if missing
+                int firstColonAfterT = dateStr.indexOf(':', timeStart + 1);
+                if (firstColonAfterT > 0) {
+                    int secondColonAfterT = dateStr.indexOf(':', firstColonAfterT + 1);
+                    if (secondColonAfterT < 0) {
+                        // seconds missing, insert ":00"
+                        StringBuilder sb = new StringBuilder(dateStr);
+                        sb.insert(len - 5, ":00");
+                        dateStr = sb.toString();
+                        len = dateStr.length();
+                    }
+                }
+                // Insert milliseconds after seconds if missing
+                int secondsEnd = len - 5;
+                if (secondsEnd > 0 && dateStr.charAt(secondsEnd - 4) != '.') {
+                    StringBuilder sb = new StringBuilder(dateStr);
+                    sb.insert(len - 5, ".000");
+                    dateStr = sb.toString();
+                    len = dateStr.length();
+                }
             }
             df = _formatISO8601;
             if (_formatISO8601 == null) {
@@ -59,9 +92,10 @@
             // If not, plain date. Easiest to just patch 'Z' in the end?
             StringBuilder sb = new StringBuilder(dateStr);
             // And possible also millisecond part if missing
-            int timeLen = len - dateStr.lastIndexOf('T') - 1;
-            if (timeLen <= 8) {
-                    sb.append(".000");
+            int timeIndex = dateStr.indexOf('T');
+            int timeLen = (timeIndex < 0) ? 0 : len - timeIndex - 1;
+            if (timeLen > 0 && timeLen <= 8 && dateStr.indexOf('.') < 0) {
+                sb.append(".000");
             }
             sb.append('Z');
             dateStr = sb.toString();
@@ -74,3 +108,4 @@
     }
     return df.parse(dateStr, pos);
 }
+
