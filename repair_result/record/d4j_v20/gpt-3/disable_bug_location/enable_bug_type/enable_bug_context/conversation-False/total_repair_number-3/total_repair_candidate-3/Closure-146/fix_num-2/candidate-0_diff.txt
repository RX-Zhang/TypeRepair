--- 
+++ 
@@ -1,20 +1,25 @@
 public TypePair getTypesUnderInequality(JSType that) {
-  // unions types
+  // union types
   if (that instanceof UnionType) {
     TypePair p = that.getTypesUnderInequality(this);
     return new TypePair(p.typeB, p.typeA);
   }
 
   // other types
-  switch (this.testForEquality(that)) {
+  TernaryValue result = this.testForEquality(that);
+  switch (result) {
     case TRUE:
       return new TypePair(null, null);
 
     case FALSE:
+      return new TypePair(this, that);
+
     case UNKNOWN:
-      return new TypePair(this, that);
+      // For unknown equality result, return (null, null) indicating None
+      return new TypePair(null, null);
+
+    default:
+      throw new IllegalStateException("Unexpected TernaryValue: " + result);
   }
+}
 
-  // switch case is exhaustive
-  throw new IllegalStateException();
-}
