--- 
+++ 
@@ -3,7 +3,7 @@
     _textBuffer.resetWithShared(_inputBuffer, startPtr, (_inputPtr - startPtr));
     char[] outBuf = _textBuffer.getCurrentSegment();
     int outPtr = _textBuffer.getCurrentSegmentSize();
-    final int maxCode = codes.length;
+    final int maxCode = codes.length - 1; // changed to (length - 1) for proper boundary check
 
     while (true) {
         if (_inputPtr >= _inputEnd) {
@@ -23,13 +23,11 @@
         ++_inputPtr;
         hash = (hash * CharsToNameCanonicalizer.HASH_MULT) + i;
         // Ok, let's add char to output:
-        outBuf[outPtr++] = c;
-
-        // Need more room?
-        if (outPtr >= outBuf.length) {
+        if (outPtr >= outBuf.length) { // check before adding char
             outBuf = _textBuffer.finishCurrentSegment();
             outPtr = 0;
         }
+        outBuf[outPtr++] = c;
     }
     _textBuffer.setCurrentLength(outPtr);
     {
@@ -41,3 +39,4 @@
         return _symbols.findSymbol(buf, start, len, hash);
     }
 }
+
