--- 
+++ 
@@ -19,20 +19,52 @@
         }
         else if (arg.startsWith("-"))
         {
-            String opt = Util.stripLeadingHyphens(arg);
+            // Check for tokens with '=' sign, e.g. --foo=bar or -f=bar
+            int equalsIndex = arg.indexOf('=');
 
-            if (options.hasOption(opt))
+            if (equalsIndex != -1)
             {
-                tokens.add(arg);
+                String opt = arg.substring(0, equalsIndex);
+                String value = arg.substring(equalsIndex + 1);
+
+                String optClean = Util.stripLeadingHyphens(opt);
+
+                if (options.hasOption(optClean))
+                {
+                    // Add the option and separate the value as the next token
+                    tokens.add(opt);
+                    tokens.add(value);
+                }
+                else if (options.hasOption(opt))
+                {
+                    // Defensive fallback, if the option with hyphens exists
+                    tokens.add(opt);
+                    tokens.add(value);
+                }
+                else if (opt.length() == 2 && options.hasOption(opt))
+                {
+                    // For special case like -Dproperty=value
+                    tokens.add(opt);
+                    tokens.add(value);
+                }
+                else
+                {
+                    eatTheRest = stopAtNonOption;
+                    tokens.add(arg);
+                }
             }
             else
             {
-                if (options.hasOption(arg.substring(0, 2)))
+                String opt = Util.stripLeadingHyphens(arg);
+
+                if (options.hasOption(opt))
                 {
-                    // the format is --foo=value or -foo=value
-                    // the format is a special properties option (-Dproperty=value)
-                    tokens.add(arg.substring(0, 2)); // -D
-                    tokens.add(arg.substring(2)); // property=value
+                    tokens.add(arg);
+                }
+                else if (arg.length() >= 2 && options.hasOption(arg.substring(0, 2)))
+                {
+                    tokens.add(arg.substring(0, 2)); // e.g. -D
+                    tokens.add(arg.substring(2));    // rest
                 }
                 else
                 {
@@ -57,3 +89,4 @@
 
     return (String[]) tokens.toArray(new String[tokens.size()]);
 }
+
