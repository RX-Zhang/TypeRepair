--- 
+++ 
@@ -12,17 +12,19 @@
         return BACKSPACE;
     case 'f':
         return FF;
-    case CR:
-    case LF:
-    case FF: // TODO is this correct?
-    case TAB: // TODO is this correct? Do tabs need to be escaped?
-    case BACKSPACE: // TODO is this correct?
-        return c;
     case END_OF_STREAM:
         throw new IOException("EOF whilst processing escape sequence");
     default:
-        // Now check for meta-characters
-            return c;
-        // indicate unexpected char - available from in.getLastChar()
+        // For any other character, return the original escape character
+        // followed by the character read. This preserves sequences like \N or \a as is.
+        // The caller must handle appending the original escape character if needed.
+
+        // However, since this method returns an int, we can't return two characters here.
+        // The fix is to NOT interpret unknown escape sequences by converting them.
+        // We return the character as is and let the caller prepend the escape char.
+
+        // So instead of interpreting unknown escape chars, return the char as is.
+        return c;
     }
 }
+
