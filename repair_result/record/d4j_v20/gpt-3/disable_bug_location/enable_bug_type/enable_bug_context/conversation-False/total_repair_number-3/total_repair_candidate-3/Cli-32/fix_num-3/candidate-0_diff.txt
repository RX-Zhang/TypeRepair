--- 
+++ 
@@ -3,23 +3,27 @@
     int pos;
     
     // the line ends before the max wrap pos or a new line char found
-    if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)
-            || ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))
-    {
+    // note: pos must be compared with (startPos + width), not width alone
+    pos = text.indexOf('\n', startPos);
+    if (pos != -1 && pos <= startPos + width) {
         return pos + 1;
     }
-    else if (startPos + width >= text.length())
-    {
+    pos = text.indexOf('\t', startPos);
+    if (pos != -1 && pos <= startPos + width) {
+        return pos + 1;
+    }
+    
+    if (startPos + width >= text.length()) {
         return -1;
     }
-
-
+    
     // look for the last whitespace character before startPos+width
     pos = startPos + width;
 
     char c;
 
-    while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
+    while (pos > startPos && pos < text.length()
+            && ((c = text.charAt(pos)) != ' ')
             && (c != '\n') && (c != '\r'))
     {
         --pos;
@@ -33,10 +37,20 @@
     
     // if we didn't find one, simply chop at startPos+width
     pos = startPos + width;
-    while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
-           && (c != '\n') && (c != '\r'))
-    {
+
+    // make sure pos is within bounds before accessing charAt
+    while (pos < text.length()) {
+        c = text.charAt(pos);
+        if (c == ' ' || c == '\n' || c == '\r') {
+            break;
+        }
         ++pos;
-    }        
+
+        // Extra safety: break if pos reaches text.length()
+        if (pos >= text.length()) {
+            break;
+        }
+    }
     return pos == text.length() ? -1 : pos;
 }
+
