--- 
+++ 
@@ -8,11 +8,14 @@
         throw new IllegalArgumentException("Mark is not supported.");
     }
 
-    final byte[] signature = new byte[12];
-    in.mark(signature.length);
     try {
+        final byte[] signature = new byte[12];
+        in.mark(signature.length);
         int signatureLength = in.read(signature);
         in.reset();
+        if (signatureLength == -1) {
+            throw new ArchiveException("No Archiver found for the stream signature");
+        }
         if (ZipArchiveInputStream.matches(signature, signatureLength)) {
             return new ZipArchiveInputStream(in);
         } else if (JarArchiveInputStream.matches(signature, signatureLength)) {
@@ -28,6 +31,9 @@
         in.mark(dumpsig.length);
         signatureLength = in.read(dumpsig);
         in.reset();
+        if (signatureLength == -1) {
+            throw new ArchiveException("No Archiver found for the stream signature");
+        }
         if (DumpArchiveInputStream.matches(dumpsig, signatureLength)) {
             return new DumpArchiveInputStream(in);
         }
@@ -37,6 +43,9 @@
         in.mark(tarheader.length);
         signatureLength = in.read(tarheader);
         in.reset();
+        if (signatureLength == -1) {
+            throw new ArchiveException("No Archiver found for the stream signature");
+        }
         if (TarArchiveInputStream.matches(tarheader, signatureLength)) {
             return new TarArchiveInputStream(in);
         }
@@ -45,8 +54,9 @@
             try {
                 TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader));
                 // COMPRESS-191 - verify the header checksum
-                tais.getNextEntry();
+                if (tais.getNextEntry() != null) {
                     return new TarArchiveInputStream(in);
+                }
             } catch (Exception e) { // NOPMD
                 // can generate IllegalArgumentException as well
                 // as IOException
@@ -60,3 +70,4 @@
 
     throw new ArchiveException("No Archiver found for the stream signature");
 }
+
