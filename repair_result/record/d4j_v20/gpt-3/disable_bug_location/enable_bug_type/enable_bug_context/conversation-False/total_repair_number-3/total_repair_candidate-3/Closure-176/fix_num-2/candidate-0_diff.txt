--- 
+++ 
@@ -26,15 +26,11 @@
       boolean isVarTypeBetter = !isVarDeclaration || var == null || var.isTypeInferred();
           // Makes it easier to check for NPEs.
 
-      // TODO(nicksantos): This might be a better check once we have
-      // back-inference of object/array constraints.  It will probably
-      // introduce more type warnings.  It uses the result type iff it's
-      // strictly narrower than the declared var type.
-      //
-      //boolean isVarTypeBetter = isVarDeclaration &&
-      //    (varType.restrictByNotNullOrUndefined().isSubtype(resultType)
-      //     || !resultType.isSubtype(varType));
-
+      // Ensure that the resultType is compatible with var's declared type.
+      if (var != null && var.getType() != null && !resultType.isSubtype(var.getType())) {
+        // If not compatible, use the declared type (var.getType) instead of resultType.
+        resultType = var.getType();
+      }
 
       if (isVarTypeBetter) {
         redeclareSimpleVar(scope, left, resultType);
@@ -61,3 +57,4 @@
       break;
   }
 }
+
