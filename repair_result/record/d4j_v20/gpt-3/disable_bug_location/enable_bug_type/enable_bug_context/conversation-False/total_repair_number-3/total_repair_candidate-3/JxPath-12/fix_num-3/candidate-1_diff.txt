--- 
+++ 
@@ -12,29 +12,34 @@
         String namespaceURI = nodeNameTest.getNamespaceURI();
         boolean wildcard = nodeNameTest.isWildcard();
         String testPrefix = testName.getPrefix();
-        if (wildcard && testPrefix == null) {
-            return true;
-        }
-        if (wildcard
-            || testName.getName()
-                    .equals(DOMNodePointer.getLocalName(node))) {
+
+        // Fix logical error: wildcard with a null prefix should check namespaceUri matching rather than always returning true
+        if (wildcard) {
+            // If wildcard node name, check namespace match
             String nodeNS = DOMNodePointer.getNamespaceURI(node);
             return equalStrings(namespaceURI, nodeNS);
         }
+
+        // Check name equality and namespace equality when not a wildcard
+        if (testName.getName().equals(DOMNodePointer.getLocalName(node))) {
+            String nodeNS = DOMNodePointer.getNamespaceURI(node);
+            return equalStrings(namespaceURI, nodeNS);
+        }
+
         return false;
     }
     if (test instanceof NodeTypeTest) {
         int nodeType = node.getNodeType();
         switch (((NodeTypeTest) test).getNodeType()) {
-            case Compiler.NODE_TYPE_NODE :
+            case Compiler.NODE_TYPE_NODE:
                 return nodeType == Node.ELEMENT_NODE
                         || nodeType == Node.DOCUMENT_NODE;
-            case Compiler.NODE_TYPE_TEXT :
+            case Compiler.NODE_TYPE_TEXT:
                 return nodeType == Node.CDATA_SECTION_NODE
                     || nodeType == Node.TEXT_NODE;
-            case Compiler.NODE_TYPE_COMMENT :
+            case Compiler.NODE_TYPE_COMMENT:
                 return nodeType == Node.COMMENT_NODE;
-            case Compiler.NODE_TYPE_PI :
+            case Compiler.NODE_TYPE_PI:
                 return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
         }
         return false;
@@ -48,3 +53,4 @@
     }
     return false;
 }
+
