--- 
+++ 
@@ -7,43 +7,35 @@
         throw new IllegalArgumentException("Length "+length+" must be at least 2");
     }
 
-    if (buffer[start] == 0) {
+    // Skip leading NULs and spaces
+    while (start < end && (buffer[start] == 0 || buffer[start] == ' ')) {
+        start++;
+    }
+
+    if (start == end) {
         return 0L;
     }
 
-    // Skip leading spaces
-    while (start < end){
-        if (buffer[start] == ' '){
-            start++;
-        } else {
-            break;
-        }
-    }
-
     // Trim all trailing NULs and spaces.
-    // The ustar and POSIX tar specs require a trailing NUL or
-    // space but some implementations use the extra digit for big
-    // sizes/uids/gids ...
     byte trailer = buffer[end - 1];
     while (start < end && (trailer == 0 || trailer == ' ')) {
         end--;
         trailer = buffer[end - 1];
     }
+
     if (start == end) {
-        throw new IllegalArgumentException(
-                exceptionMessage(buffer, offset, length, start, trailer));
+        return 0L;
     }
 
-    for ( ;start < end; start++) {
+    for (; start < end; start++) {
         final byte currentByte = buffer[start];
-        // CheckStyle:MagicNumber OFF
-        if (currentByte < '0' || currentByte > '7'){
+        if (currentByte < '0' || currentByte > '7') {
             throw new IllegalArgumentException(
                     exceptionMessage(buffer, offset, length, start, currentByte));
         }
         result = (result << 3) + (currentByte - '0'); // convert from ASCII
-        // CheckStyle:MagicNumber ON
     }
 
     return result;
 }
+
