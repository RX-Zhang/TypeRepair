--- 
+++ 
@@ -3,7 +3,11 @@
         return binaryData;
     }
 
-    long len = getEncodeLength(binaryData, MIME_CHUNK_SIZE, CHUNK_SEPARATOR);
+    // Determine chunk size and chunk separator based on isChunked flag
+    int chunkSize = isChunked ? MIME_CHUNK_SIZE : 0;
+    byte[] chunkSeparator = isChunked ? CHUNK_SEPARATOR : new byte[0];
+
+    long len = getEncodeLength(binaryData, chunkSize, chunkSeparator);
     if (len > maxResultSize) {
         throw new IllegalArgumentException("Input array too big, the output array would be bigger (" +
             len +
@@ -11,6 +15,7 @@
             maxResultSize);
     }
             
-    Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);
+    Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, chunkSeparator, urlSafe);
     return b64.encode(binaryData);
 }
+
