--- 
+++ 
@@ -72,8 +72,9 @@
         value = -(c - '0');
         last = NUMBER_CHAR_DIGIT;
       } else if (last == NUMBER_CHAR_DIGIT) {
+        // Allow leading zero if it is the only digit before decimal point or exponent
         if (value == 0) {
-          return PEEKED_NONE; // Leading '0' prefix is not allowed (since it could be octal).
+          return PEEKED_NONE; // Leading '0' prefix is not allowed.
         }
         long newValue = value * 10 - (c - '0');
         fitsInLong &= value > MIN_INCOMPLETE_INTEGER
@@ -89,6 +90,7 @@
 
   // We've read a complete number. Decide if it's a PEEKED_LONG or a PEEKED_NUMBER.
   if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) {
+    // Fix: The original line had the sign wrong for peekedLong assignment, causing "-0" to become "0".
     peekedLong = negative ? value : -value;
     pos += i;
     return peeked = PEEKED_LONG;
@@ -100,3 +102,4 @@
     return PEEKED_NONE;
   }
 }
+
