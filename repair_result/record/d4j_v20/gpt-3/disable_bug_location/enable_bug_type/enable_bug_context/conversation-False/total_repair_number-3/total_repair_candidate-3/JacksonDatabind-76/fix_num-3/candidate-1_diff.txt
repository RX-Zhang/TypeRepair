--- 
+++ 
@@ -1,5 +1,5 @@
 protected Object deserializeUsingPropertyBasedWithUnwrapped(JsonParser p,
-		DeserializationContext ctxt)
+        DeserializationContext ctxt)
     throws IOException, JsonProcessingException
 {
     final PropertyBasedCreator creator = _propertyBasedCreator;
@@ -24,7 +24,10 @@
                     wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
                     continue;
                 }
+                // Now that builder is constructed, process any remaining tokens
+                // as unwrapped properties
                 while (t == JsonToken.FIELD_NAME) {
+                    tokens.writeFieldName(p.getCurrentName());
                     p.nextToken();
                     tokens.copyCurrentStructure(p);
                     t = p.nextToken();
@@ -34,7 +37,7 @@
                     ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
                     return null;
                 }
-                return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
+                return _unwrappedPropertyHandler.processUnwrapped(null, ctxt, bean, tokens);
             }
             continue;
         }
@@ -68,5 +71,7 @@
     } catch (Exception e) {
         return wrapInstantiationProblem(e, ctxt);
     }
-    return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
+    tokens.writeEndObject();
+    return _unwrappedPropertyHandler.processUnwrapped(null, ctxt, bean, tokens);
 }
+
