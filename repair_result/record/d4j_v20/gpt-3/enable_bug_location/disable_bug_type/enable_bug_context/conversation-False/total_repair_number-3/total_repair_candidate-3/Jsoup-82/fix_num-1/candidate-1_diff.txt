--- 
+++ 
@@ -52,13 +52,22 @@
         foundCharset = validateCharset(foundCharset);
         if (foundCharset != null && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode. (case insensitive check here to match how validate works)
             foundCharset = foundCharset.trim().replaceAll("[\"']", "");
-            charsetName = foundCharset;
+            // test if charset is encodable, fallback to UTF-8 if not
+            if (!Charset.forName(foundCharset).newEncoder().canEncode('\u00FF')) {
+                charsetName = "UTF-8";
+            } else {
+                charsetName = foundCharset;
+            }
             doc = null;
         } else if (!fullyRead) {
             doc = null;
         }
     } else { // specified by content type header (or by user on file load)
         Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
+        // test if charset is encodable, fallback to UTF-8 if not
+        if (!Charset.forName(charsetName).newEncoder().canEncode('\u00FF')) {
+            charsetName = "UTF-8";
+        }
     }
     if (doc == null) {
         if (charsetName == null)
@@ -74,8 +83,8 @@
         }
         Charset charset = Charset.forName(charsetName);
         doc.outputSettings().charset(charset);
-            // some charsets can read but not encode; switch to an encodable charset and update the meta el
     }
     input.close();
     return doc;
 }
+
