--- 
+++ 
@@ -3,6 +3,33 @@
     Document doc = null;
 
     // look for BOM - overrides any other header or input
+    byteData.mark();
+    if (byteData.remaining() >= 3) {
+        byte b0 = byteData.get();
+        byte b1 = byteData.get();
+        byte b2 = byteData.get();
+        byteData.reset();
+
+        // UTF-8 BOM  EF BB BF
+        if ((b0 & 0xFF) == 0xEF && (b1 & 0xFF) == 0xBB && (b2 & 0xFF) == 0xBF) {
+            // skip BOM bytes
+            byteData.position(byteData.position() + 3);
+            charsetName = "UTF-8";
+        } else if (byteData.remaining() >= 2) {
+            // Check UTF-16 BOM
+            byteData.mark();
+            b0 = byteData.get();
+            b1 = byteData.get();
+            byteData.reset();
+
+            if ((b0 & 0xFF) == 0xFE && (b1 & 0xFF) == 0xFF) { // UTF-16BE
+                charsetName = "UTF-16BE";
+            } else if ((b0 & 0xFF) == 0xFF && (b1 & 0xFF) == 0xFE) { // UTF-16LE
+                charsetName = "UTF-16LE";
+            }
+            // Could add UTF-32 BOM detection here if desired
+        }
+    }
 
     if (charsetName == null) { // determine from meta. safe parse as UTF-8
         // look for <meta http-equiv="Content-Type" content="text/html;charset=gb2312"> or HTML5 <meta charset="gb2312">
@@ -24,7 +51,7 @@
                 }
             }
 
-            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
+            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode
                 foundCharset = foundCharset.trim().replaceAll("[\"']", "");
                 charsetName = foundCharset;
                 byteData.rewind();
@@ -36,16 +63,18 @@
         Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
         docData = Charset.forName(charsetName).decode(byteData).toString();
     }
+
     if (docData.length() > 0 && docData.charAt(0) == UNICODE_BOM) {
-        byteData.rewind();
-        docData = Charset.forName(defaultCharset).decode(byteData).toString();
         docData = docData.substring(1);
         charsetName = defaultCharset;
         doc = null;
     }
+
     if (doc == null) {
         doc = parser.parseInput(docData, baseUri);
         doc.outputSettings().charset(charsetName);
     }
+
     return doc;
 }
+
