--- 
+++ 
@@ -1,16 +1,23 @@
 private InputStream getCurrentStream() throws IOException {
+    // Added exception handling to prevent IllegalStateException
     if (deferredBlockStreams.isEmpty()) {
         throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
     }
-    
-    while (deferredBlockStreams.size() > 1) {
-        // In solid compression mode we need to decompress all leading folder'
-        // streams to get access to an entry. We defer this until really needed
-        // so that entire blocks can be skipped without wasting time for decompression.
-        final InputStream stream = deferredBlockStreams.remove(0);
-        IOUtils.skip(stream, Long.MAX_VALUE);
-        stream.close();
+
+    // Ensure there's at least one stream available
+    try {
+        while (deferredBlockStreams.size() > 1) {
+            // In solid compression mode we need to decompress all leading folder'
+            // streams to get access to an entry. We defer this until really needed
+            // so that entire blocks can be skipped without wasting time for decompression.
+            final InputStream stream = deferredBlockStreams.remove(0);
+            IOUtils.skip(stream, Long.MAX_VALUE);
+            stream.close();
+        }
+    } catch (IOException e) {
+        throw new IOException("Error while processing deferred block streams.", e);
     }
 
     return deferredBlockStreams.get(0);
 }
+
