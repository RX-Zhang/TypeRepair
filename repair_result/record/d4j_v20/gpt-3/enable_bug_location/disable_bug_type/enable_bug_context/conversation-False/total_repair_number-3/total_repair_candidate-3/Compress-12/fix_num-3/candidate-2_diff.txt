--- 
+++ 
@@ -24,6 +24,11 @@
         return null;
     }
 
+    // Validate the header buffer before creating a new TarArchiveEntry
+    if (headerBuf == null || headerBuf.length == 0) {
+        throw new IllegalArgumentException("Header buffer is invalid or empty");
+    }
+
     currEntry = new TarArchiveEntry(headerBuf);
     entryOffset = 0;
     entrySize = currEntry.getSize();
@@ -34,7 +39,7 @@
         byte[] buf = new byte[SMALL_BUFFER_SIZE];
         int length = 0;
         while ((length = read(buf)) >= 0) {
-            longName.append(new String(buf, 0, length));
+            longName.append(new String(buf, 0, length, StandardCharsets.UTF_8));
         }
         getNextEntry();
         if (currEntry == null) {
@@ -43,8 +48,7 @@
             return null;
         }
         // remove trailing null terminator
-        if (longName.length() > 0
-            && longName.charAt(longName.length() - 1) == 0) {
+        if (longName.length() > 0 && longName.charAt(longName.length() - 1) == 0) {
             longName.deleteCharAt(longName.length() - 1);
         }
         currEntry.setName(longName.toString());
@@ -65,3 +69,4 @@
     entrySize = currEntry.getSize();
     return currEntry;
 }
+
