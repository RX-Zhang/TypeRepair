--- 
+++ 
@@ -7,7 +7,7 @@
             ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())
             : null;
     final boolean hasCreatorProps = (creatorProps != null);
-    
+
     // 01-May-2016, tatu: Which base type to use here gets tricky, since
     //   it may often make most sense to use general type for overrides,
     //   but what we have here may be more specific impl type. But for now
@@ -36,10 +36,10 @@
         builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterMethod));
     }
     else {
-    	anySetterField = beanDesc.findAnySetterField();
-    	if(anySetterField != null) {
-    		builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));
-    	}
+        anySetterField = beanDesc.findAnySetterField();
+        if (anySetterField != null) {
+            builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));
+        }
     }
     // NOTE: we do NOT add @JsonIgnore'd properties into blocked ones if there's any-setter
     // Implicit ones via @JsonIgnore and equivalent?
@@ -66,7 +66,7 @@
             propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);
         }
     }
-    
+
     // At which point we still have all kinds of properties; not all with mutators:
     for (BeanPropertyDefinition propDef : propDefs) {
         SettableBeanProperty prop = null;
@@ -75,31 +75,31 @@
          *   other types, and only then create constructor parameter, if any.
          */
         if (propDef.hasSetter()) {
-            JavaType propertyType = propDef.getSetter().getParameterType(0);
-            prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);
+            // FIX: Check that the setter is not ignored - this was likely missed
+            if (!propDef.isIgnorable()) {
+                JavaType propertyType = propDef.getSetter().getParameterType(0);
+                prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);
+            }
         } else if (propDef.hasField()) {
-            JavaType propertyType = propDef.getField().getType();
-            prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);
+            if (!propDef.isIgnorable()) {
+                JavaType propertyType = propDef.getField().getType();
+                prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);
+            }
         } else if (useGettersAsSetters && propDef.hasGetter()) {
-            /* May also need to consider getters
-             * for Map/Collection properties; but with lowest precedence
-             */
+            // May also need to consider getters for Map/Collection properties; but lowest precedence
             AnnotatedMethod getter = propDef.getGetter();
             // should only consider Collections and Maps, for now?
             Class<?> rawPropertyType = getter.getRawType();
-            if (Collection.class.isAssignableFrom(rawPropertyType)
-                    || Map.class.isAssignableFrom(rawPropertyType)) {
+            if ((Collection.class.isAssignableFrom(rawPropertyType)
+                    || Map.class.isAssignableFrom(rawPropertyType))
+                    && !propDef.isIgnorable()) {
                 prop = constructSetterlessProperty(ctxt, beanDesc, propDef);
             }
         }
         // 25-Sep-2014, tatu: No point in finding constructor parameters for abstract types
         //   (since they are never used anyway)
         if (hasCreatorProps && propDef.hasConstructorParameter()) {
-            /* If property is passed via constructor parameter, we must
-             * handle things in special way. Not sure what is the most optimal way...
-             * for now, let's just call a (new) method in builder, which does nothing.
-             */
-            // but let's call a method just to allow custom builders to be aware...
+            // If property is passed via constructor parameter, handle specially
             final String name = propDef.getName();
             CreatorProperty cprop = null;
             if (creatorProps != null) {
@@ -142,3 +142,4 @@
         }
     }
 }
+
