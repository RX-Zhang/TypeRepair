--- 
+++ 
@@ -7,37 +7,37 @@
         throw new IllegalArgumentException("Length "+length+" must be at least 2");
     }
 
+    // If the first byte is 0, return 0 immediately
     if (buffer[start] == 0) {
         return 0L;
     }
 
     // Skip leading spaces
-    while (start < end){
-        if (buffer[start] == ' '){
-            start++;
-        } else {
-            break;
-        }
+    while (start < end && buffer[start] == ' ') {
+        start++;
     }
 
     // Trim all trailing NULs and spaces.
     // The ustar and POSIX tar specs require a trailing NUL or
     // space but some implementations use the extra digit for big
     // sizes/uids/gids ...
-    byte trailer = buffer[end - 1];
-    if (trailer == 0 || trailer == ' '){
-        end--;
-    } else {
-        throw new IllegalArgumentException(
-                exceptionMessage(buffer, offset, length, end-1, trailer));
-    }
-    trailer = buffer[end - 1];
-    while (start < end - 1 && (trailer == 0 || trailer == ' ')) {
-        end--;
-        trailer = buffer[end - 1];
+
+    // Move end backwards to skip trailing NULs and spaces
+    while (end > start) {
+        byte trailer = buffer[end - 1];
+        if (trailer == 0 || trailer == ' ') {
+            end--;
+        } else {
+            break;
+        }
     }
 
-    for ( ;start < end; start++) {
+    // If nothing left after trimming, return 0
+    if (start >= end) {
+        return 0L;
+    }
+
+    for ( ; start < end; start++) {
         final byte currentByte = buffer[start];
         // CheckStyle:MagicNumber OFF
         if (currentByte < '0' || currentByte > '7'){
@@ -50,3 +50,4 @@
 
     return result;
 }
+
