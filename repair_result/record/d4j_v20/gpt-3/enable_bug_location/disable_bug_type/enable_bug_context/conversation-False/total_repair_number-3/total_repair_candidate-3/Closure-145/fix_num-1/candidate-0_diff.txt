--- 
+++ 
@@ -2,7 +2,16 @@
       // For labels with block children, we need to ensure that a
       // labeled FUNCTION or DO isn't generated when extraneous BLOCKs 
       // are skipped. 
-        // Either a empty statement or an block with more than one child,
-        // way it isn't a FUNCTION or DO.
-    return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);
+      // An empty statement or a block with more than one child
+      // means it isn't a FUNCTION or DO.
+    if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {
+      return true;
+    }
+    if (n.getType() == Token.LABEL) {
+      Node child = getFirstNonEmptyChild(n);
+      // Only if the label's single child is FUNCTION or DO do we wrap.
+      return child != null && (child.getType() == Token.FUNCTION || child.getType() == Token.DO);
+    }
+    return false;
 }
+
