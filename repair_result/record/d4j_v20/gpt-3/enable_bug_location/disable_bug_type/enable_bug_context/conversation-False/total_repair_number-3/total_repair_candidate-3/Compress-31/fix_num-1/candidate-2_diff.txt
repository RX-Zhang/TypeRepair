--- 
+++ 
@@ -5,6 +5,9 @@
 
     if (length < 2){
         throw new IllegalArgumentException("Length "+length+" must be at least 2");
+    }
+    if (buffer.length < offset + length) {
+        throw new IllegalArgumentException("Buffer too short for offset + length");
     }
 
     if (buffer[start] == 0) {
@@ -24,16 +27,22 @@
     // The ustar and POSIX tar specs require a trailing NUL or
     // space but some implementations use the extra digit for big
     // sizes/uids/gids ...
+    // Protect against end becoming less than start
     byte trailer = buffer[end - 1];
     while (start < end && (trailer == 0 || trailer == ' ')) {
         end--;
+        if (end <= start) {
+            break;
+        }
         trailer = buffer[end - 1];
     }
 
-    for ( ;start < end; start++) {
+    for (; start < end; start++) {
         final byte currentByte = buffer[start];
-        if (currentByte == 0) {
-            break;
+        if (currentByte == 0 || currentByte == ' ') {
+            // Embedded NUL or space is invalid
+            throw new IllegalArgumentException(
+                    exceptionMessage(buffer, offset, length, start, currentByte));
         }
         // CheckStyle:MagicNumber OFF
         if (currentByte < '0' || currentByte > '7'){
@@ -46,3 +55,4 @@
 
     return result;
 }
+
