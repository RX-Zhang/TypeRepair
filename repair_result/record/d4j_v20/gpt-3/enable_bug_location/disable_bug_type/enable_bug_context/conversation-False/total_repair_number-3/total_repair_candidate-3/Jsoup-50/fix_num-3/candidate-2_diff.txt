--- 
+++ 
@@ -3,6 +3,42 @@
     Document doc = null;
 
     // look for BOM - overrides any other header or input
+    byteData.mark();
+    if (byteData.remaining() >= 3) {
+        int b1 = byteData.get() & 0xFF;
+        int b2 = byteData.get() & 0xFF;
+        int b3 = byteData.get() & 0xFF;
+        byteData.reset();
+
+        // UTF-8 BOM  EF BB BF
+        if (b1 == 0xEF && b2 == 0xBB && b3 == 0xBF) {
+            charsetName = "UTF-8";
+            byteData.position(byteData.position() + 3);
+        } 
+        // UTF-16 BE BOM FE FF
+        else if (b1 == 0xFE && b2 == 0xFF) {
+            charsetName = "UTF-16BE";
+            byteData.position(byteData.position() + 2);
+        }
+        // UTF-16 LE BOM FF FE
+        else if (b1 == 0xFF && b2 == 0xFE) {
+            charsetName = "UTF-16LE";
+            byteData.position(byteData.position() + 2);
+        }
+        // UTF-32 BE BOM 00 00 FE FF
+        else if (byteData.remaining() >= 4) {
+            int b4 = byteData.get(3) & 0xFF;
+            if (b1 == 0x00 && b2 == 0x00 && b3 == 0xFE && b4 == 0xFF) {
+                charsetName = "UTF-32BE";
+                byteData.position(byteData.position() + 4);
+            } 
+            // UTF-32 LE BOM FF FE 00 00
+            else if (b1 == 0xFF && b2 == 0xFE && b3 == 0x00 && b4 == 0x00) {
+                charsetName = "UTF-32LE";
+                byteData.position(byteData.position() + 4);
+            }
+        }
+    }
 
     if (charsetName == null) { // determine from meta. safe parse as UTF-8
         // look for <meta http-equiv="Content-Type" content="text/html;charset=gb2312"> or HTML5 <meta charset="gb2312">
@@ -24,7 +60,7 @@
                 }
             }
 
-            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
+            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equalsIgnoreCase(defaultCharset)) { // need to re-decode
                 foundCharset = foundCharset.trim().replaceAll("[\"']", "");
                 charsetName = foundCharset;
                 byteData.rewind();
@@ -36,16 +72,17 @@
         Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
         docData = Charset.forName(charsetName).decode(byteData).toString();
     }
+
     if (docData.length() > 0 && docData.charAt(0) == UNICODE_BOM) {
-        byteData.rewind();
-        docData = Charset.forName(defaultCharset).decode(byteData).toString();
         docData = docData.substring(1);
         charsetName = defaultCharset;
         doc = null;
     }
+
     if (doc == null) {
         doc = parser.parseInput(docData, baseUri);
         doc.outputSettings().charset(charsetName);
     }
     return doc;
 }
+
