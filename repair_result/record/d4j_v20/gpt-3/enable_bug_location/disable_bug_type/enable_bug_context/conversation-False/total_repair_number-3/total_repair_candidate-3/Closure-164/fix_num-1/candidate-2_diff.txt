--- 
+++ 
@@ -48,11 +48,18 @@
     boolean thatIsVarArgs = thatParam.isVarArgs();
 
     // "that" can't be a supertype, because it's missing a required argument.
-      // NOTE(nicksantos): In our type system, we use {function(...?)} and
-      // {function(...NoType)} to to indicate that arity should not be
-      // checked. Strictly speaking, this is not a correct formulation,
-      // because now a sub-function can required arguments that are var_args
-      // in the super-function. So we special-case this.
+    // NOTE(nicksantos): In our type system, we use {function(...?)} and
+    // {function(...NoType)} to to indicate that arity should not be
+    // checked. Strictly speaking, this is not a correct formulation,
+    // because now a sub-function can required arguments that are var_args
+    // in the super-function. So we special-case this.
+
+    // both var_args indicates the end
+    if (thisIsVarArgs && thatIsVarArgs) {
+      thisParam = null;
+      thatParam = null;
+      continue;
+    }
 
     // don't advance if we have variable arguments
     if (!thisIsVarArgs) {
@@ -61,15 +68,14 @@
     if (!thatIsVarArgs) {
       thatParam = thatParam.getNext();
     }
-
-    // both var_args indicates the end
-    if (thisIsVarArgs && thatIsVarArgs) {
-      thisParam = null;
-      thatParam = null;
-    }
   }
 
-  // "that" can't be a supertype, because it's missing a required arguement.
+  // If "that" still has a parameter but "this" has none, then "that" expects more args,
+  // so "that" cannot be a supertype.
+  if (thatParam != null) {
+    return false;
+  }
 
   return true;
 }
+
