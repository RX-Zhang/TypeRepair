--- 
+++ 
@@ -7,34 +7,28 @@
         throw new IllegalArgumentException("Length "+length+" must be at least 2");
     }
 
-    if (buffer[start] == 0) {
-        return 0L;
+    // Skip leading NULs and spaces
+    while (start < end && (buffer[start] == 0 || buffer[start] == ' ')) {
+        start++;
     }
 
-    // Skip leading spaces
-    while (start < end){
-        if (buffer[start] == ' '){
-            start++;
-        } else {
-            break;
-        }
+    if (start == end) {
+        return 0L;
     }
 
     // Trim all trailing NULs and spaces.
     // The ustar and POSIX tar specs require a trailing NUL or
     // space but some implementations use the extra digit for big
     // sizes/uids/gids ...
-    byte trailer = buffer[end - 1];
-    while (start < end && (trailer == 0 || trailer == ' ')) {
+    while (end > start && (buffer[end - 1] == 0 || buffer[end - 1] == ' ')) {
         end--;
-        trailer = buffer[end - 1];
-    }
-    if (start == end) {
-        throw new IllegalArgumentException(
-                exceptionMessage(buffer, offset, length, start, trailer));
     }
 
-    for ( ;start < end; start++) {
+    if (start == end) {
+        return 0L;
+    }
+
+    for (; start < end; start++) {
         final byte currentByte = buffer[start];
         // CheckStyle:MagicNumber OFF
         if (currentByte < '0' || currentByte > '7'){
@@ -47,3 +41,4 @@
 
     return result;
 }
+
