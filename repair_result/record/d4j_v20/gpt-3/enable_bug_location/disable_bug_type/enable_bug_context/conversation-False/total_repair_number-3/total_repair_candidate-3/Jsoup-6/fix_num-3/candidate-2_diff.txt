--- 
+++ 
@@ -4,7 +4,6 @@
 
     Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
     StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
-    // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
 
     while (m.find()) {
         int charval = -1;
@@ -14,20 +13,23 @@
                 int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                 charval = Integer.valueOf(num, base);
             } catch (NumberFormatException e) {
-            } // skip
+                // skip if number format is invalid
+            }
         } else {
             String name = m.group(1);
-            if (full.containsKey(name))
-                charval = full.get(name);
+            if (name != null && full.containsKey(name)) {
+                charval = (int) full.get(name); // assuming full map returns Integer
+            }
         }
 
-        if (charval != -1 || charval > 0xFFFF) { // out of range
+        if (charval != -1 && charval <= 0xFFFF) { // fixed out of range condition
             String c = Character.toString((char) charval);
             m.appendReplacement(accum, c);
         } else {
-            m.appendReplacement(accum, m.group(0));
+            m.appendReplacement(accum, m.group(0)); // fallback to original if charval is out of range
         }
     }
     m.appendTail(accum);
     return accum.toString();
 }
+
