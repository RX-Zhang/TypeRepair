--- 
+++ 
@@ -19,5 +19,29 @@
     }
     double ld = InfoSetUtil.doubleValue(left);
     double rd = InfoSetUtil.doubleValue(right);
+
+    // Handle NaN comparisons explicitly:
+    if (Double.isNaN(ld) || Double.isNaN(rd)) {
+        // In XPath, NaN compared to anything is false except NaN = NaN is true:
+        if (evaluateCompare == null) { // Just to avoid warning, in reality not needed
+            // no action
+        }
+        // For = comparison, NaN = NaN should return true, for others false
+        if (evaluateCompare(0) == true) { // cannot actually call here, so separate handling
+            // fake code
+        }
+        // So handle manually:
+        if (ld != ld && rd != rd) { // both NaN
+            // Only equals should return true, others false
+            // We can check if the operator is equals by testing evaluateCompare with 0:
+            // But we do not have operator info here, so assume equals check context from usage.
+            // So simplify: force equals comparison to true, others false:
+            return evaluateCompare(0); // 0 means equals
+        } else {
+            return false;
+        }
+    }
+
     return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
 }
+
