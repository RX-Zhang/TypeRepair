--- 
+++ 
@@ -5,7 +5,7 @@
     // first things first: deserialize all data buffered:
     final int len = _properties.length;
     Object[] values = new Object[len];
-    for (int i = 0; i < len; ++i) {
+    for (int i = ; i < len; ++i) {
         String typeId = _typeIds[i];
         final ExtTypedProperty extProp = _properties[i];
         if (typeId == null) {
@@ -26,7 +26,7 @@
             SettableBeanProperty prop = extProp.getProperty();
             ctxt.reportInputMismatch(_beanType,
                     "Missing property '%s' for external type id '%s'",
-                    prop.getName(), _properties[i].getTypePropertyName());
+                    prop.getName(), extProp.getTypePropertyName());
         }
         values[i] = _deserialize(p, ctxt, i, typeId);
 
@@ -41,7 +41,13 @@
             if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {
                 // 31-May-2018, tatu: [databind#1328] if id is NOT plain `String`, need to
                 //    apply deserializer... fun fun.
-                buffer.assignParameter(typeProp, typeId);
+                Object typeIdValue = typeId;
+                JavaType typeIdType = typeProp.getType();
+                if (!typeIdType.hasRawClass(String.class)) {
+                    JsonParser jp = ctxt.getParser().getCodec().treeAsTokens(ctxt.getParser().getCodec().getNodeFactory().textNode(typeId));
+                    typeIdValue = typeProp.deserialize(jp, ctxt);
+                }
+                buffer.assignParameter(typeProp, typeIdValue);
             }
         }
     }
@@ -55,3 +61,4 @@
     }
     return bean;
 }
+
