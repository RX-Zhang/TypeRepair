--- 
+++ 
@@ -87,7 +87,10 @@
             offset += 1;
         } else if (timezoneIndicator == '+' || timezoneIndicator == '-') {
             String timezoneOffset = date.substring(offset);
-
+            // Validate timezoneOffset format
+            if (timezoneOffset.length() < 3) {
+                throw new IllegalArgumentException("Invalid time zone offset format");
+            }
             // When timezone has no minutes, we should append it, valid timezones are, for example: +00:00, +0000 and +00
 
             offset += timezoneOffset.length();
@@ -100,26 +103,20 @@
                 //    `java.util.TimeZone` specifically instruct use of GMT as base for
                 //    custom timezones... odd.
                 String timezoneId = "GMT" + timezoneOffset;
-                  String timezoneId = "UTC" + timezoneOffset;
 
                 timezone = TimeZone.getTimeZone(timezoneId);
 
                 String act = timezone.getID();
                 if (!act.equals(timezoneId)) {
-                    /* 22-Jan-2015, tatu: Looks like canonical version has colons, but we may be given
-                     *    one without. If so, don't sweat.
-                     *   Yes, very inefficient. Hopefully not hit often.
-                     *   If it becomes a perf problem, add 'loose' comparison instead.
-                     */
                     String cleaned = act.replace(":", "");
                     if (!cleaned.equals(timezoneId)) {
-                        throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to "
-                                +timezone.getID());
+                        throw new IndexOutOfBoundsException("Mismatching time zone indicator: " + timezoneId + " given, resolves to "
+                                + timezone.getID());
                     }
                 }
             }
         } else {
-            throw new IndexOutOfBoundsException("Invalid time zone indicator '" + timezoneIndicator+"'");
+            throw new IndexOutOfBoundsException("Invalid time zone indicator '" + timezoneIndicator + "'");
         }
 
         Calendar calendar = new GregorianCalendar(timezone);
@@ -144,11 +141,12 @@
         fail = e;
     }
     String input = (date == null) ? null : ('"' + date + "'");
-    String msg = fail.getMessage();
+    String msg = (fail != null) ? fail.getMessage() : "Unknown error";
     if (msg == null || msg.isEmpty()) {
-        msg = "("+fail.getClass().getName()+")";
+        msg = "(" + (fail != null ? fail.getClass().getName() : "UnknownException") + ")";
     }
     ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex());
     ex.initCause(fail);
     throw ex;
 }
+
