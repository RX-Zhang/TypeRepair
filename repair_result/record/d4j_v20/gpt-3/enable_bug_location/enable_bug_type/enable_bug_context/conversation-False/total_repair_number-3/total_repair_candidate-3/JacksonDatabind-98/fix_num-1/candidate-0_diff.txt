--- 
+++ 
@@ -26,22 +26,36 @@
             SettableBeanProperty prop = extProp.getProperty();
             ctxt.reportInputMismatch(_beanType,
                     "Missing property '%s' for external type id '%s'",
-                    prop.getName(), _properties[i].getTypePropertyName());
+                    prop.getName(), extProp.getTypePropertyName());
         }
         values[i] = _deserialize(p, ctxt, i, typeId);
 
         final SettableBeanProperty prop = extProp.getProperty();
-        // also: if it's creator prop, fill in
+
+        // [databind#1328]: If type id property is not String, convert accordingly
+        SettableBeanProperty typeProp = extProp.getTypeProperty();
+
         if (prop.getCreatorIndex() >= 0) {
             buffer.assignParameter(prop, values[i]);
 
-            // [databind#999] And maybe there's creator property for type id too?
-            SettableBeanProperty typeProp = extProp.getTypeProperty();
-            // for now, should only be needed for creator properties, too
-            if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {
-                // 31-May-2018, tatu: [databind#1328] if id is NOT plain `String`, need to
-                //    apply deserializer... fun fun.
-                buffer.assignParameter(typeProp, typeId);
+            if (typeProp != null && typeProp.getCreatorIndex() >= 0) {
+                Object typedIdValue = typeId;
+                JavaType typeIdType = typeProp.getType();
+
+                // Convert typeId String to expected type if necessary
+                if (!typeIdType.hasRawClass(String.class)) {
+                    try {
+                        // Use the deserializer to convert type id String to expected type
+                        JsonParser typeIdParser = ctxt.getParser().getCodec()
+                                .getFactory().createParser("\""+typeId+"\"");
+                        typeIdParser.nextToken(); // move to VALUE_STRING
+                        typedIdValue = typeProp.deserialize(typeIdParser, ctxt);
+                    } catch (Exception e) {
+                        // fallback to typeId string if conversion fails
+                        typedIdValue = typeId;
+                    }
+                }
+                buffer.assignParameter(typeProp, typedIdValue);
             }
         }
     }
@@ -55,3 +69,4 @@
     }
     return bean;
 }
+
