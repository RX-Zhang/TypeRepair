--- 
+++ 
@@ -1,36 +1,42 @@
 private Map<String, Integer> initializeHeader() throws IOException {
-    Map<String, Integer> hdrMap = null;
+    Map<String, Integer> hdrMap = new LinkedHashMap<>(); // Initialize hdrMap to avoid NullPointerException
     final String[] formatHeader = this.format.getHeader();
-    if (formatHeader != null) {
-        hdrMap = new LinkedHashMap<String, Integer>();
-
-        String[] headerRecord = null;
-        if (formatHeader.length == 0) {
-            // read the header from the first line of the file
-            final CSVRecord nextRecord = this.nextRecord();
-            if (nextRecord != null) {
-                headerRecord = nextRecord.values();
+    
+    if (formatHeader == null || formatHeader.length == 0) { // Check for null and handle accordingly
+        // read the header from the first line of the file
+        final CSVRecord nextRecord = this.nextRecord();
+        if (nextRecord != null) {
+            String[] headerRecord = nextRecord.values();
+            if (headerRecord != null) { // Ensure headerRecord is not null before processing
+                for (int i = 0; i < headerRecord.length; i++) {
+                    final String header = headerRecord[i];
+                    final boolean containsHeader = hdrMap.containsKey(header);
+                    final boolean emptyHeader = header.trim().isEmpty();
+                    if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
+                        throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
+                                "\" in " + Arrays.toString(headerRecord));
+                    }
+                    hdrMap.put(header, Integer.valueOf(i));
+                }
             }
-        } else {
-            if (this.format.getSkipHeaderRecord()) {
-                this.nextRecord();
+        }
+    } else {
+        if (this.format.getSkipHeaderRecord()) {
+            this.nextRecord();
+        }
+        
+        // build the name to index mappings
+        for (int i = 0; i < formatHeader.length; i++) {
+            final String header = formatHeader[i];
+            final boolean containsHeader = hdrMap.containsKey(header);
+            final boolean emptyHeader = header.trim().isEmpty();
+            if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
+                throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
+                        "\" in " + Arrays.toString(formatHeader));
             }
-            headerRecord = formatHeader;
-        }
-
-        // build the name to index mappings
-        if (headerRecord != null) {
-            for (int i = 0; i < headerRecord.length; i++) {
-                final String header = headerRecord[i];
-                final boolean containsHeader = hdrMap.containsKey(header);
-                final boolean emptyHeader = header.trim().isEmpty();
-                if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
-                    throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
-                            "\" in " + Arrays.toString(headerRecord));
-                }
-                hdrMap.put(header, Integer.valueOf(i));
-            }
+            hdrMap.put(header, Integer.valueOf(i));
         }
     }
     return hdrMap;
 }
+
