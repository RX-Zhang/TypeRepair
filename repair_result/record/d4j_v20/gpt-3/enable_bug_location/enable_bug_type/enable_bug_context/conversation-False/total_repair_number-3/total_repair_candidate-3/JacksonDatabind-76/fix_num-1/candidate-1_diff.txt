--- 
+++ 
@@ -31,7 +31,7 @@
                 }
                 tokens.writeEndObject();
                 if (bean.getClass() != _beanType.getRawClass()) {
-                    ctxt.reportMappingException("Can not create polymorphic instances with unwrapped values");
+                    ctxt.reportMappingException("Cannot create polymorphic instances with unwrapped values");
                     return null;
                 }
                 return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
@@ -45,7 +45,11 @@
         // regular property? needs buffering
         SettableBeanProperty prop = _beanProperties.find(propName);
         if (prop != null) {
-            buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
+            try {
+                buffer.bufferProperty(prop, prop.deserialize(p, ctxt));
+            } catch (Exception e) {
+                wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);
+            }
             continue;
         }
         if (_ignorableProps != null && _ignorableProps.contains(propName)) {
@@ -70,3 +74,4 @@
     }
     return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
 }
+
