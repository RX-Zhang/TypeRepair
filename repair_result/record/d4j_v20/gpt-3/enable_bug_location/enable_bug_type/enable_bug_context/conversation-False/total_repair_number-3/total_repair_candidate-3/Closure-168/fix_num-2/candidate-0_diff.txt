--- 
+++ 
@@ -7,7 +7,7 @@
     data.get(t.getScopeRoot()).recordNonEmptyReturn();
   }
 
-  if (t.getScopeDepth() <= 2) {
+  if (t.getScopeDepth() < 2) {
     // The first-order function analyzer looks at two types of variables:
     //
     // 1) Local variables that are assigned in inner scopes ("escaped vars")
@@ -36,17 +36,21 @@
         data.get(ownerScope.getRootNode()).recordEscapedVarName(name);
       }
     }
-  } else if (n.isGetProp() && n.isUnscopedQualifiedName() &&
+  } else if (n.isGetProp() && NodeUtil.isUnscopedQualifiedName(n) &&
       NodeUtil.isLValue(n)) {
-    String name = NodeUtil.getRootOfQualifiedName(n).getString();
-    Scope scope = t.getScope();
-    Var var = scope.getVar(name);
-    if (var != null) {
-      Scope ownerScope = var.getScope();
-      if (scope != ownerScope && ownerScope.isLocal()) {
-        data.get(ownerScope.getRootNode())
-            .recordEscapedQualifiedName(n.getQualifiedName());
+    Node root = NodeUtil.getRootOfQualifiedName(n);
+    if (root != null && root.isName()) {
+      String name = root.getString();
+      Scope scope = t.getScope();
+      Var var = scope.getVar(name);
+      if (var != null) {
+        Scope ownerScope = var.getScope();
+        if (scope != ownerScope && ownerScope.isLocal()) {
+          data.get(ownerScope.getRootNode())
+              .recordEscapedQualifiedName(n.getQualifiedName());
+        }
       }
     }
   }
 }
+
