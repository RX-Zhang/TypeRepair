--- 
+++ 
@@ -1,10 +1,6 @@
 protected Object deserializeUsingPropertyBasedWithUnwrapped(JsonParser p, DeserializationContext ctxt)
     throws IOException
 {
-    // 01-Dec-2016, tatu: Note: This IS legal to call, but only when unwrapped
-    //    value itself is NOT passed via `CreatorProperty` (which isn't supported).
-    //    Ok however to pass via setter or field.
-    
     final PropertyBasedCreator creator = _propertyBasedCreator;
     PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);
 
@@ -28,21 +24,15 @@
                 } catch (Exception e) {
                     bean = wrapInstantiationProblem(e, ctxt);
                 }
-                // [databind#631]: Assign current value, to be accessible by custom serializers
                 p.setCurrentValue(bean);
                 // if so, need to copy all remaining tokens into buffer
                 while (t == JsonToken.FIELD_NAME) {
-                    // NOTE: do NOT skip name as it needs to be copied; `copyCurrentStructure` does that
                     p.nextToken();
                     tokens.copyCurrentStructure(p);
                     t = p.nextToken();
                 }
-                // 28-Aug-2018, tatu: Let's add sanity check here, easier to catch off-by-some
-                //    problems if we maintain invariants
                 tokens.writeEndObject();
                 if (bean.getClass() != _beanType.getRawClass()) {
-                    // !!! 08-Jul-2011, tatu: Could probably support; but for now
-                    //   it's too complicated, so bail out
                     ctxt.reportInputMismatch(creatorProp,
                             "Cannot create polymorphic instances with unwrapped values");
                     return null;
@@ -66,16 +56,10 @@
             handleIgnoredProperty(p, ctxt, handledType(), propName);
             continue;
         }
-        // 29-Nov-2016, tatu: probably should try to avoid sending content
-        //    both to any setter AND buffer... but, for now, the only thing
-        //    we can do.
-        // how about any setter? We'll get copies but...
         if (_anySetter == null) {
-            // but... others should be passed to unwrapped property deserializers
             tokens.writeFieldName(propName);
             tokens.copyCurrentStructure(p);
         } else {
-            // Need to copy to a separate buffer first
             TokenBuffer b2 = TokenBuffer.asCopyOfValue(p);
             tokens.writeFieldName(propName);
             tokens.append(b2);
@@ -89,7 +73,6 @@
         }
     }
 
-    // We hit END_OBJECT, so:
     Object bean;
     try {
         bean = creator.build(ctxt, buffer);
@@ -99,3 +82,4 @@
     }
     return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);
 }
+
