--- 
+++ 
@@ -13,6 +13,9 @@
     try {
         int signatureLength = in.read(signature);
         in.reset();
+        if (signatureLength == -1) {
+            throw new ArchiveException("No data was read from the stream.");
+        }
         if (ZipArchiveInputStream.matches(signature, signatureLength)) {
             return new ZipArchiveInputStream(in);
         } else if (JarArchiveInputStream.matches(signature, signatureLength)) {
@@ -28,6 +31,9 @@
         in.mark(dumpsig.length);
         signatureLength = in.read(dumpsig);
         in.reset();
+        if (signatureLength == -1) {
+            throw new ArchiveException("No data was read from the stream.");
+        }
         if (DumpArchiveInputStream.matches(dumpsig, signatureLength)) {
             return new DumpArchiveInputStream(in);
         }
@@ -37,6 +43,9 @@
         in.mark(tarheader.length);
         signatureLength = in.read(tarheader);
         in.reset();
+        if (signatureLength == -1) {
+            throw new ArchiveException("No data was read from the stream.");
+        }
         if (TarArchiveInputStream.matches(tarheader, signatureLength)) {
             return new TarArchiveInputStream(in);
         }
@@ -46,7 +55,7 @@
                 TarArchiveInputStream tais = new TarArchiveInputStream(new ByteArrayInputStream(tarheader));
                 // COMPRESS-191 - verify the header checksum
                 tais.getNextEntry();
-                    return new TarArchiveInputStream(in);
+                return new TarArchiveInputStream(in);
             } catch (Exception e) { // NOPMD
                 // can generate IllegalArgumentException as well
                 // as IOException
@@ -60,3 +69,4 @@
 
     throw new ArchiveException("No Archiver found for the stream signature");
 }
+
