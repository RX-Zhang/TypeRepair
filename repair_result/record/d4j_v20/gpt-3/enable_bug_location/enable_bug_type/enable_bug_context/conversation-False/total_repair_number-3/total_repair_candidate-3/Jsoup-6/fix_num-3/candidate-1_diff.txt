--- 
+++ 
@@ -1,10 +1,9 @@
 static String unescape(String string) {
-    if (!string.contains("&"))
+    if (string == null || !string.contains("&")) // Added null check
         return string;
 
     Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
     StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
-    // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
 
     while (m.find()) {
         int charval = -1;
@@ -14,14 +13,19 @@
                 int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                 charval = Integer.valueOf(num, base);
             } catch (NumberFormatException e) {
-            } // skip
+                // Log or handle the error appropriately
+            }
         } else {
             String name = m.group(1);
-            if (full.containsKey(name))
-                charval = full.get(name);
+            if (full.containsKey(name)) {
+                Object value = full.get(name);
+                if (value instanceof Integer) { // Ensure proper type
+                    charval = (Integer) value;
+                }
+            }
         }
 
-        if (charval != -1 || charval > 0xFFFF) { // out of range
+        if (charval != -1 && charval <= 0xFFFF) { // Corrected condition to check range
             String c = Character.toString((char) charval);
             m.appendReplacement(accum, c);
         } else {
@@ -31,3 +35,4 @@
     m.appendTail(accum);
     return accum.toString();
 }
+
