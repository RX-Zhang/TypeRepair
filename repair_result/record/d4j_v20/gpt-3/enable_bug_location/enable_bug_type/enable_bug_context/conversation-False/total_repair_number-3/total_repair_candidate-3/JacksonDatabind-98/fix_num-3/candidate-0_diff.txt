--- 
+++ 
@@ -14,21 +14,56 @@
                 continue;
             }
             // but not just one
-            // 26-Oct-2012, tatu: As per [databind#94], must allow use of 'defaultImpl'
-            if (!extProp.hasDefaultType()) {
-                ctxt.reportInputMismatch(_beanType,
-                        "Missing external type id property '%s'",
-                        extProp.getTypePropertyName());
+            // [databind#118]: Need to mind natural types, for which no type id
+            // will be included.
+            JsonToken t = _tokens[i].firstToken();
+            if (t.isScalarValue()) { // can't be null as we never store empty buffers
+                JsonParser buffered = _tokens[i].asParser(p);
+                buffered.nextToken();
+                SettableBeanProperty extProperty = extProp.getProperty();
+                Object result = TypeDeserializer.deserializeIfNatural(buffered, ctxt, extProperty.getType());
+                if (result != null) {
+                    values[i] = result;
+                    // If property is creator property, assign it to buffer
+                    if (extProperty.getCreatorIndex() >= 0) {
+                        buffer.assignParameter(extProperty, result);
+
+                        SettableBeanProperty typeProp = extProp.getTypeProperty();
+                        if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {
+                            buffer.assignParameter(typeProp, null);
+                        }
+                    }
+                    continue;
+                }
+                // 26-Oct-2012, tatu: As per [databind#94], must allow use of 'defaultImpl'
+                if (!extProp.hasDefaultType()) {
+                    ctxt.reportInputMismatch(_beanType,
+                            "Missing external type id property '%s'",
+                            extProp.getTypePropertyName());
+                } else {
+                    typeId = extProp.getDefaultTypeId();
+                }
             } else {
-                typeId = extProp.getDefaultTypeId();
+                // If the token is not scalar, we cannot handle without typeId
+                // Must report missing external type id
+                if (!extProp.hasDefaultType()) {
+                    ctxt.reportInputMismatch(_beanType,
+                            "Missing external type id property '%s'",
+                            extProp.getTypePropertyName());
+                } else {
+                    typeId = extProp.getDefaultTypeId();
+                }
             }
         } else if (_tokens[i] == null) {
             SettableBeanProperty prop = extProp.getProperty();
             ctxt.reportInputMismatch(_beanType,
                     "Missing property '%s' for external type id '%s'",
-                    prop.getName(), _properties[i].getTypePropertyName());
+                    prop.getName(), extProp.getTypePropertyName());
         }
-        values[i] = _deserialize(p, ctxt, i, typeId);
+        // If value not set in values[i] from natural, deserialize here
+        if (values[i] == null) {
+            values[i] = _deserialize(p, ctxt, i, typeId);
+        }
 
         final SettableBeanProperty prop = extProp.getProperty();
         // also: if it's creator prop, fill in
@@ -55,3 +90,4 @@
     }
     return bean;
 }
+
