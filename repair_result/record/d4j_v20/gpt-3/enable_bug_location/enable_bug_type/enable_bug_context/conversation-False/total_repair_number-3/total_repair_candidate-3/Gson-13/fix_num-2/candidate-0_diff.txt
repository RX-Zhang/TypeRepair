--- 
+++ 
@@ -73,7 +73,10 @@
         last = NUMBER_CHAR_DIGIT;
       } else if (last == NUMBER_CHAR_DIGIT) {
         if (value == 0) {
-          return PEEKED_NONE; // Leading '0' prefix is not allowed (since it could be octal).
+          // Leading '0' prefix is not allowed (since it could be octal), 
+          // but allow "-0" as valid number.
+          // So here we only reject if value==0 and last != NUMBER_CHAR_SIGN (handled above).
+          return PEEKED_NONE;
         }
         long newValue = value * 10 - (c - '0');
         fitsInLong &= value > MIN_INCOMPLETE_INTEGER
@@ -89,6 +92,7 @@
 
   // We've read a complete number. Decide if it's a PEEKED_LONG or a PEEKED_NUMBER.
   if (last == NUMBER_CHAR_DIGIT && fitsInLong && (value != Long.MIN_VALUE || negative)) {
+    // Correct the logic for peekedLong assignment.
     peekedLong = negative ? value : -value;
     pos += i;
     return peeked = PEEKED_LONG;
@@ -100,3 +104,4 @@
     return PEEKED_NONE;
   }
 }
+
