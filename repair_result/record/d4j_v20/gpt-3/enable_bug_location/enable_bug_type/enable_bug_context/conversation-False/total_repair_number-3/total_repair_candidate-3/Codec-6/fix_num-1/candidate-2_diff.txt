--- 
+++ 
@@ -3,7 +3,7 @@
         throw new NullPointerException();
     } else if (offset < 0 || len < 0) {
         throw new IndexOutOfBoundsException();
-    } else if (offset > b.length || offset + len > b.length) {
+    } else if (offset >= b.length || offset + len > b.length) {  // Changed '>' to '>=' for proper boundary check
         throw new IndexOutOfBoundsException();
     } else if (len == 0) {
         return 0;
@@ -24,20 +24,21 @@
          -----
          This is a fix for CODEC-101
         */
-            if (!base64.hasData()) {
-                byte[] buf = new byte[doEncode ? 4096 : 8192];
-                int c = in.read(buf);
-                // A little optimization to avoid System.arraycopy()
-                // when possible.
-                if (c > 0 && b.length == len) {
-                    base64.setInitialBuffer(b, offset, len);
-                }
-                if (doEncode) {
-                    base64.encode(buf, 0, c);
-                } else {
-                    base64.decode(buf, 0, c);
-                }
+        if (!base64.hasData()) {
+            byte[] buf = new byte[doEncode ? 4096 : 8192];
+            int c = in.read(buf);
+            // A little optimization to avoid System.arraycopy()
+            // when possible.
+            if (c > 0 && c <= len) { // Adjusted condition to check c against len
+                base64.setInitialBuffer(b, offset, c); // Corrected to use c instead of len
             }
+            if (doEncode) {
+                base64.encode(buf, 0, c);
+            } else {
+                base64.decode(buf, 0, c);
+            }
+        }
         return base64.readResults(b, offset, len);
     }
 }
+
