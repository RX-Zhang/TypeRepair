--- 
+++ 
@@ -20,11 +20,13 @@
         return 0;
     }
 
-    if (depth1 == 1) {
+    // Adding boundary check to avoid comparing pointers that do not belong to the same tree
+    if (depth1 == 1 || depth2 == 1) {
         throw new JXPathException(
                 "Cannot compare pointers that do not belong to the same tree: '"
                         + p1 + "' and '" + p2 + "'");
     }
+    
     int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
     if (r != 0) {
         return r;
@@ -32,3 +34,4 @@
 
     return p1.parent.compareChildNodePointers(p1, p2);
 }
+
