--- 
+++ 
@@ -1,15 +1,20 @@
 from collections import deque as Queue
+
 def breadth_first_search(startnode, goalnode):
     queue = Queue()
     queue.append(startnode)
     nodesseen = set()
     nodesseen.add(startnode)
-    while True:
+    
+    while queue:  # Check if the queue is not empty
         node = queue.popleft()
         if node is goalnode:
             return True
         else:
-            queue.extend(node for node in node.successors if node not in nodesseen)
-            nodesseen.update(node.successors)
+            for successor in node.successors:
+                if successor not in nodesseen:
+                    queue.append(successor)  # Append the successor to the queue
+                    nodesseen.add(successor)  # Add the successor to the seen set
+                    
     return False
 
