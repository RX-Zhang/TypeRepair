--- 
+++ 
@@ -2,19 +2,23 @@
     def op(symbol, a, b):
         return {
             '+': lambda a, b: a + b,
-            '-': lambda a, b: a - b,
+            '-': lambda a, b: b - a,  # Corrected the order of operands
             '*': lambda a, b: a * b,
-            '/': lambda a, b: a / b
+            '/': lambda a, b: b / a   # Corrected the order of operands
         }[symbol](a, b)
     stack = []
     for token in tokens:
         if isinstance(token, float):
             stack.append(token)
         else:
+            if len(stack) < 2:  # Added boundary check to prevent runtime error
+                raise ValueError("Insufficient values in the stack for operation.")
             a = stack.pop()
             b = stack.pop()
             stack.append(
                 op(token, a, b)
             )
+    if len(stack) != 1:  # Added boundary check to ensure a single result
+        raise ValueError("The user input does not evaluate to a single result.")
     return stack.pop()
 
