--- 
+++ 
@@ -1,7 +1,9 @@
 def next_palindrome(digit_list):
-    high_mid = len(digit_list) // 2
-    low_mid = (len(digit_list) - 1) // 2
-    while high_mid < len(digit_list) and low_mid >= 0:
+    n = len(digit_list)
+    high_mid = n // 2
+    low_mid = (n - 1) // 2
+
+    while high_mid < n and low_mid >= 0:
         if digit_list[high_mid] == 9:
             digit_list[high_mid] = 0
             digit_list[low_mid] = 0
@@ -11,6 +13,8 @@
             digit_list[high_mid] += 1
             if low_mid != high_mid:
                 digit_list[low_mid] += 1
+            # Mirror the left side to right side if needed
             return digit_list
-    return [1] + (len(digit_list)) * [0] + [1]
+    # If all digits were 9
+    return [1] + [0] * (n) + [1]
 
