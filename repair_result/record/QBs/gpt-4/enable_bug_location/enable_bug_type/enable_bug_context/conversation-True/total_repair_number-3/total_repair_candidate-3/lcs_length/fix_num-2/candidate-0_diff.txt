--- 
+++ 
@@ -1,9 +1,10 @@
 def lcs_length(s, t):
-    from collections import Counter
-    dp = Counter()
-    for i in range(len(s)):
-        for j in range(len(t)):
-            if s[i] == t[j]:
-                dp[i, j] = dp[i - 1, j] + 1
-    return max(dp.values()) if dp else 0
+    dp = [[0] * (len(t) + 1) for _ in range(len(s) + 1)]
+    for i in range(1, len(s) + 1):
+        for j in range(1, len(t) + 1):
+            if s[i - 1] == t[j - 1]:
+                dp[i][j] = dp[i - 1][j - 1] + 1
+            else:
+                dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])
+    return dp[len(s)][len(t)]
 
