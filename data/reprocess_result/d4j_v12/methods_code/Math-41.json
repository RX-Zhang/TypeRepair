{"increment": "\n    public void increment(final double d) {\n        if (incMoment) {\n            moment.increment(d);\n        }\n    }", "getResult": "\n    public double getResult() {\n            if (moment.n == 0) {\n                return Double.NaN;\n            } else if (moment.n == 1) {\n                return 0d;\n            } else {\n                if (isBiasCorrected) {\n                    return moment.m2 / (moment.n - 1d);\n                } else {\n                    return moment.m2 / (moment.n);\n                }\n            }\n    }", "getN": "\n    public long getN() {\n        return moment.getN();\n    }", "clear": "\n    public void clear() {\n        if (incMoment) {\n            moment.clear();\n        }\n    }", "evaluate": "\n    public double evaluate(final double[] values) {\n        if (values == null) {\n            throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);\n        }\n        return evaluate(values, 0, values.length);\n    }", "isBiasCorrected": "\n    public boolean isBiasCorrected() {\n        return isBiasCorrected;\n    }", "setBiasCorrected": "\n    public void setBiasCorrected(boolean biasCorrected) {\n        this.isBiasCorrected = biasCorrected;\n    }", "copy": "\n    public Variance copy() {\n        Variance result = new Variance();\n        copy(this, result);\n        return result;\n    }"}