{"hasNext": "\n        public boolean hasNext() {\n            for (int i = 0; i < dimension; i++) {\n                if (counter[i] != size[i] - 1) {\n                    return true;\n                }\n            }\n            return false;\n        }", "next": "\n        public Integer next() {\n            for (int i = last; i >= 0; i--) {\n                if (counter[i] == size[i] - 1) {\n                    counter[i] = 0;\n                } else {\n                    ++counter[i];\n                    break;\n                }\n            }\n\n            return ++count;\n        }", "getCount": "\n        public int getCount() {\n            return count;\n        }", "getCounts": "\n        public int[] getCounts() {\n            return MathUtils.copyOf(counter);\n        }", "remove": "\n        public void remove() {\n            throw new UnsupportedOperationException();\n        }", "iterator": "\n    public Iterator iterator() {\n        return new Iterator();\n    }", "getDimension": "\n    public int getDimension() {\n        return dimension;\n    }", "getSize": "\n    public int getSize() {\n        return totalSize;\n    }", "getSizes": "\n    public int[] getSizes() {\n        return MathUtils.copyOf(size);\n    }", "toString": "\n    public String toString() {\n        final StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < dimension; i++) {\n            sb.append(\"[\").append(getCount(i)).append(\"]\");\n        }\n        return sb.toString();\n    }"}