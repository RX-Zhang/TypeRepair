{"ClassName": "ArrayUtils", "Fields": ["public static final Object[] EMPTY_OBJECT_ARRAY;", "public static final Class[] EMPTY_CLASS_ARRAY;", "public static final String[] EMPTY_STRING_ARRAY;", "public static final long[] EMPTY_LONG_ARRAY;", "public static final Long[] EMPTY_LONG_OBJECT_ARRAY;", "public static final int[] EMPTY_INT_ARRAY;", "public static final Integer[] EMPTY_INTEGER_OBJECT_ARRAY;", "public static final short[] EMPTY_SHORT_ARRAY;", "public static final Short[] EMPTY_SHORT_OBJECT_ARRAY;", "public static final byte[] EMPTY_BYTE_ARRAY;", "public static final Byte[] EMPTY_BYTE_OBJECT_ARRAY;", "public static final double[] EMPTY_DOUBLE_ARRAY;", "public static final Double[] EMPTY_DOUBLE_OBJECT_ARRAY;", "public static final float[] EMPTY_FLOAT_ARRAY;", "public static final Float[] EMPTY_FLOAT_OBJECT_ARRAY;", "public static final boolean[] EMPTY_BOOLEAN_ARRAY;", "public static final Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY;", "public static final char[] EMPTY_CHAR_ARRAY;", "public static final Character[] EMPTY_CHARACTER_OBJECT_ARRAY;", "public static final int INDEX_NOT_FOUND;"], "Methods": ["public static String toString(Object array) { ... }", "public static String toString(Object array, String stringIfNull) { ... }", "public static boolean isEquals(Object array1, Object array2) { ... }", "public static Map toMap(Object[] array) { ... }", "public static T[] clone(T[] array) { ... }", "public static long[] clone(long[] array) { ... }", "public static int[] clone(int[] array) { ... }", "public static short[] clone(short[] array) { ... }", "public static char[] clone(char[] array) { ... }", "public static byte[] clone(byte[] array) { ... }", "public static double[] clone(double[] array) { ... }", "public static float[] clone(float[] array) { ... }", "public static boolean[] clone(boolean[] array) { ... }", "public static T[] subarray(T[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static long[] subarray(long[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static int[] subarray(int[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static short[] subarray(short[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static char[] subarray(char[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static byte[] subarray(byte[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static double[] subarray(double[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static float[] subarray(float[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static boolean[] subarray(boolean[] array, int startIndexInclusive, int endIndexExclusive) { ... }", "public static boolean isSameLength(Object[] array1, Object[] array2) { ... }", "public static boolean isSameLength(long[] array1, long[] array2) { ... }", "public static boolean isSameLength(int[] array1, int[] array2) { ... }", "public static boolean isSameLength(short[] array1, short[] array2) { ... }", "public static boolean isSameLength(char[] array1, char[] array2) { ... }", "public static boolean isSameLength(byte[] array1, byte[] array2) { ... }", "public static boolean isSameLength(double[] array1, double[] array2) { ... }", "public static boolean isSameLength(float[] array1, float[] array2) { ... }", "public static boolean isSameLength(boolean[] array1, boolean[] array2) { ... }", "public static int getLength(Object array) { ... }", "public static boolean isSameType(Object array1, Object array2) { ... }", "public static void reverse(Object[] array) { ... }", "public static void reverse(long[] array) { ... }", "public static void reverse(int[] array) { ... }", "public static void reverse(short[] array) { ... }", "public static void reverse(char[] array) { ... }", "public static void reverse(byte[] array) { ... }", "public static void reverse(double[] array) { ... }", "public static void reverse(float[] array) { ... }", "public static void reverse(boolean[] array) { ... }", "public static int indexOf(Object[] array, Object objectToFind) { ... }", "public static int indexOf(Object[] array, Object objectToFind, int startIndex) { ... }", "public static int lastIndexOf(Object[] array, Object objectToFind) { ... }", "public static int lastIndexOf(Object[] array, Object objectToFind, int startIndex) { ... }", "public static boolean contains(Object[] array, Object objectToFind) { ... }", "public static int indexOf(long[] array, long valueToFind) { ... }", "public static int indexOf(long[] array, long valueToFind, int startIndex) { ... }", "public static int lastIndexOf(long[] array, long valueToFind) { ... }", "public static int lastIndexOf(long[] array, long valueToFind, int startIndex) { ... }", "public static boolean contains(long[] array, long valueToFind) { ... }", "public static int indexOf(int[] array, int valueToFind) { ... }", "public static int indexOf(int[] array, int valueToFind, int startIndex) { ... }", "public static int lastIndexOf(int[] array, int valueToFind) { ... }", "public static int lastIndexOf(int[] array, int valueToFind, int startIndex) { ... }", "public static boolean contains(int[] array, int valueToFind) { ... }", "public static int indexOf(short[] array, short valueToFind) { ... }", "public static int indexOf(short[] array, short valueToFind, int startIndex) { ... }", "public static int lastIndexOf(short[] array, short valueToFind) { ... }", "public static int lastIndexOf(short[] array, short valueToFind, int startIndex) { ... }", "public static boolean contains(short[] array, short valueToFind) { ... }", "public static int indexOf(char[] array, char valueToFind) { ... }", "public static int indexOf(char[] array, char valueToFind, int startIndex) { ... }", "public static int lastIndexOf(char[] array, char valueToFind) { ... }", "public static int lastIndexOf(char[] array, char valueToFind, int startIndex) { ... }", "public static boolean contains(char[] array, char valueToFind) { ... }", "public static int indexOf(byte[] array, byte valueToFind) { ... }", "public static int indexOf(byte[] array, byte valueToFind, int startIndex) { ... }", "public static int lastIndexOf(byte[] array, byte valueToFind) { ... }", "public static int lastIndexOf(byte[] array, byte valueToFind, int startIndex) { ... }", "public static boolean contains(byte[] array, byte valueToFind) { ... }", "public static int indexOf(double[] array, double valueToFind) { ... }", "public static int indexOf(double[] array, double valueToFind, double tolerance) { ... }", "public static int indexOf(double[] array, double valueToFind, int startIndex) { ... }", "public static int indexOf(double[] array, double valueToFind, int startIndex, double tolerance) { ... }", "public static int lastIndexOf(double[] array, double valueToFind) { ... }", "public static int lastIndexOf(double[] array, double valueToFind, double tolerance) { ... }", "public static int lastIndexOf(double[] array, double valueToFind, int startIndex) { ... }", "public static int lastIndexOf(double[] array, double valueToFind, int startIndex, double tolerance) { ... }", "public static boolean contains(double[] array, double valueToFind) { ... }", "public static boolean contains(double[] array, double valueToFind, double tolerance) { ... }", "public static int indexOf(float[] array, float valueToFind) { ... }", "public static int indexOf(float[] array, float valueToFind, int startIndex) { ... }", "public static int lastIndexOf(float[] array, float valueToFind) { ... }", "public static int lastIndexOf(float[] array, float valueToFind, int startIndex) { ... }", "public static boolean contains(float[] array, float valueToFind) { ... }", "public static int indexOf(boolean[] array, boolean valueToFind) { ... }", "public static int indexOf(boolean[] array, boolean valueToFind, int startIndex) { ... }", "public static int lastIndexOf(boolean[] array, boolean valueToFind) { ... }", "public static int lastIndexOf(boolean[] array, boolean valueToFind, int startIndex) { ... }", "public static boolean contains(boolean[] array, boolean valueToFind) { ... }", "public static char[] toPrimitive(Character[] array) { ... }", "public static char[] toPrimitive(Character[] array, char valueForNull) { ... }", "public static Character[] toObject(char[] array) { ... }", "public static long[] toPrimitive(Long[] array) { ... }", "public static long[] toPrimitive(Long[] array, long valueForNull) { ... }", "public static Long[] toObject(long[] array) { ... }", "public static int[] toPrimitive(Integer[] array) { ... }", "public static int[] toPrimitive(Integer[] array, int valueForNull) { ... }", "public static Integer[] toObject(int[] array) { ... }", "public static short[] toPrimitive(Short[] array) { ... }", "public static short[] toPrimitive(Short[] array, short valueForNull) { ... }", "public static Short[] toObject(short[] array) { ... }", "public static byte[] toPrimitive(Byte[] array) { ... }", "public static byte[] toPrimitive(Byte[] array, byte valueForNull) { ... }", "public static Byte[] toObject(byte[] array) { ... }", "public static double[] toPrimitive(Double[] array) { ... }", "public static double[] toPrimitive(Double[] array, double valueForNull) { ... }", "public static Double[] toObject(double[] array) { ... }", "public static float[] toPrimitive(Float[] array) { ... }", "public static float[] toPrimitive(Float[] array, float valueForNull) { ... }", "public static Float[] toObject(float[] array) { ... }", "public static boolean[] toPrimitive(Boolean[] array) { ... }", "public static boolean[] toPrimitive(Boolean[] array, boolean valueForNull) { ... }", "public static Boolean[] toObject(boolean[] array) { ... }", "public static boolean isEmpty(T[] array) { ... }", "public static boolean isEmpty(long[] array) { ... }", "public static boolean isEmpty(int[] array) { ... }", "public static boolean isEmpty(short[] array) { ... }", "public static boolean isEmpty(char[] array) { ... }", "public static boolean isEmpty(byte[] array) { ... }", "public static boolean isEmpty(double[] array) { ... }", "public static boolean isEmpty(float[] array) { ... }", "public static boolean isEmpty(boolean[] array) { ... }", "public static T[] addAll(T[] array1, T array2) { ... }", "public static boolean[] addAll(boolean[] array1, boolean array2) { ... }", "public static char[] addAll(char[] array1, char array2) { ... }", "public static byte[] addAll(byte[] array1, byte array2) { ... }", "public static short[] addAll(short[] array1, short array2) { ... }", "public static int[] addAll(int[] array1, int array2) { ... }", "public static long[] addAll(long[] array1, long array2) { ... }", "public static float[] addAll(float[] array1, float array2) { ... }", "public static double[] addAll(double[] array1, double array2) { ... }", "public static T[] add(T[] array, T element) { ... }", "public static boolean[] add(boolean[] array, boolean element) { ... }", "public static byte[] add(byte[] array, byte element) { ... }", "public static char[] add(char[] array, char element) { ... }", "public static double[] add(double[] array, double element) { ... }", "public static float[] add(float[] array, float element) { ... }", "public static int[] add(int[] array, int element) { ... }", "public static long[] add(long[] array, long element) { ... }", "public static short[] add(short[] array, short element) { ... }", "private static Object copyArrayGrow1(Object array, Class newArrayComponentType) { ... }", "public static T[] add(T[] array, int index, T element) { ... }", "public static boolean[] add(boolean[] array, int index, boolean element) { ... }", "public static char[] add(char[] array, int index, char element) { ... }", "public static byte[] add(byte[] array, int index, byte element) { ... }", "public static short[] add(short[] array, int index, short element) { ... }", "public static int[] add(int[] array, int index, int element) { ... }", "public static long[] add(long[] array, int index, long element) { ... }", "public static float[] add(float[] array, int index, float element) { ... }", "public static double[] add(double[] array, int index, double element) { ... }", "private static Object add(Object array, int index, Object element, Class clss) { ... }", "public static T[] remove(T[] array, int index) { ... }", "public static T[] removeElement(T[] array, Object element) { ... }", "public static boolean[] remove(boolean[] array, int index) { ... }", "public static boolean[] removeElement(boolean[] array, boolean element) { ... }", "public static byte[] remove(byte[] array, int index) { ... }", "public static byte[] removeElement(byte[] array, byte element) { ... }", "public static char[] remove(char[] array, int index) { ... }", "public static char[] removeElement(char[] array, char element) { ... }", "public static double[] remove(double[] array, int index) { ... }", "public static double[] removeElement(double[] array, double element) { ... }", "public static float[] remove(float[] array, int index) { ... }", "public static float[] removeElement(float[] array, float element) { ... }", "public static int[] remove(int[] array, int index) { ... }", "public static int[] removeElement(int[] array, int element) { ... }", "public static long[] remove(long[] array, int index) { ... }", "public static long[] removeElement(long[] array, long element) { ... }", "public static short[] remove(short[] array, int index) { ... }", "public static short[] removeElement(short[] array, short element) { ... }", "private static Object remove(Object array, int index) { ... }"]}