{"ClassName": "ClassUtils", "Fields": ["public static final char PACKAGE_SEPARATOR_CHAR;", "public static final String PACKAGE_SEPARATOR;", "public static final char INNER_CLASS_SEPARATOR_CHAR;", "public static final String INNER_CLASS_SEPARATOR;", "private static final Map primitiveWrapperMap;", "private static final Map wrapperPrimitiveMap;", "private static final Map abbreviationMap;", "private static final Map reverseAbbreviationMap;"], "Methods": ["private static void addAbbreviation(String primitive, String abbreviation) { ... }", "public static String getShortClassName(Object object, String valueIfNull) { ... }", "public static String getShortClassName(Class cls) { ... }", "public static String getShortClassName(String className) { ... }", "public static String getPackageName(Object object, String valueIfNull) { ... }", "public static String getPackageName(Class cls) { ... }", "public static String getPackageName(String className) { ... }", "public static List getAllSuperclasses(Class cls) { ... }", "public static List getAllInterfaces(Class cls) { ... }", "private static void getAllInterfaces(Class cls, HashSet interfacesFound) { ... }", "public static List convertClassNamesToClasses(List classNames) { ... }", "public static List convertClassesToClassNames(List classes) { ... }", "public static boolean isAssignable(Class[] classArray, Class[] toClassArray) { ... }", "public static boolean isAssignable(Class[] classArray, Class[] toClassArray, boolean autoboxing) { ... }", "public static boolean isAssignable(Class cls, Class toClass) { ... }", "public static boolean isAssignable(Class cls, Class toClass, boolean autoboxing) { ... }", "public static Class primitiveToWrapper(Class cls) { ... }", "public static Class[] primitivesToWrappers(Class[] classes) { ... }", "public static Class wrapperToPrimitive(Class cls) { ... }", "public static Class[] wrappersToPrimitives(Class[] classes) { ... }", "public static boolean isInnerClass(Class cls) { ... }", "public static Class getClass(ClassLoader classLoader, String className, boolean initialize) { ... }", "public static Class getClass(ClassLoader classLoader, String className) { ... }", "public static Class getClass(String className) { ... }", "public static Class getClass(String className, boolean initialize) { ... }", "public static Method getPublicMethod(Class cls, String methodName, Class[] parameterTypes) { ... }", "private static String toCanonicalName(String className) { ... }", "public static Class[] toClass(Object[] array) { ... }", "public static String getShortCanonicalName(Object object, String valueIfNull) { ... }", "public static String getShortCanonicalName(Class cls) { ... }", "public static String getShortCanonicalName(String canonicalName) { ... }", "public static String getPackageCanonicalName(Object object, String valueIfNull) { ... }", "public static String getPackageCanonicalName(Class cls) { ... }", "public static String getPackageCanonicalName(String canonicalName) { ... }", "private static String getCanonicalName(String className) { ... }"]}