{"ClassName": "IRFactory", "Fields": ["private final String sourceString;", "private final String sourceName;", "private final Config config;", "private final ErrorReporter errorReporter;", "private final TransformDispatcher transformDispatcher;", "private final Set ALLOWED_DIRECTIVES;", " Node rootNodeJsDocHolder;", " Node fileLevelJsDocBuilder;", " JSDocInfo fileOverviewInfo;", "private Node templateNode;"], "Methods": ["private Node createTemplateNode() { ... }", "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) { ... }", "private void setFileOverviewJsDoc(Node irNode) { ... }", "private Node transformBlock(AstNode node) { ... }", "private boolean handlePossibleFileOverviewJsDoc(JsDocInfoParser jsDocParser) { ... }", "private void handlePossibleFileOverviewJsDoc(Comment comment) { ... }", "private JSDocInfo handleJsDoc(AstNode node) { ... }", "private Node transform(AstNode node) { ... }", "private JsDocInfoParser createJsDocInfoParser(Comment node) { ... }", "private int position2charno(int position) { ... }", "private Node justTransform(AstNode node) { ... }", "private static int transformTokenType(int token) { ... }", "private Node newNode(int type) { ... }", "private Node newNode(int type, Node child1) { ... }", "private Node newNode(int type, Node child1, Node child2) { ... }", "private Node newNode(int type, Node child1, Node child2, Node child3) { ... }", "private Node newStringNode(String value) { ... }", "private Node newStringNode(int type, String value) { ... }", "private Node newNumberNode(Double value) { ... }"]}