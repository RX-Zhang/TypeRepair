{"ClassName": "JSType", "Fields": ["private static final long serialVersionUID;", "private boolean resolved;", "private JSType resolveResult;", "public static final String UNKNOWN_NAME;", "public static final String NOT_A_CLASS;", "public static final String NOT_A_TYPE;", "public static final String EMPTY_TYPE_COMPONENT;", "static final Comparator ALPHA;", "public static final int ENUMDECL;", "public static final int NOT_ENUMDECL;", "final JSTypeRegistry registry;"], "Methods": [" JSType getNativeType(JSTypeNative typeId) { ... }", "public JSDocInfo getJSDocInfo() { ... }", "public String getDisplayName() { ... }", "public boolean hasDisplayName() { ... }", " void forgiveUnknownNames() { ... }", "public boolean isNoType() { ... }", "public boolean isNoResolvedType() { ... }", "public boolean isNoObjectType() { ... }", "public final boolean isEmptyType() { ... }", "public boolean isNumberObjectType() { ... }", "public boolean isNumberValueType() { ... }", "public boolean isFunctionPrototypeType() { ... }", "public boolean isStringObjectType() { ... }", " boolean isTheObjectType() { ... }", "public boolean isStringValueType() { ... }", "public final boolean isString() { ... }", "public final boolean isNumber() { ... }", "public boolean isArrayType() { ... }", "public boolean isBooleanObjectType() { ... }", "public boolean isBooleanValueType() { ... }", "public boolean isRegexpType() { ... }", "public boolean isDateType() { ... }", "public boolean isNullType() { ... }", "public boolean isVoidType() { ... }", "public boolean isAllType() { ... }", "public boolean isUnknownType() { ... }", "public boolean isCheckedUnknownType() { ... }", "public boolean isUnionType() { ... }", "public boolean isFunctionType() { ... }", "public boolean isEnumElementType() { ... }", "public boolean isEnumType() { ... }", " boolean isNamedType() { ... }", "public boolean isRecordType() { ... }", "public boolean isTemplateType() { ... }", "public boolean isObject() { ... }", "public boolean isConstructor() { ... }", "public boolean isNominalType() { ... }", "public boolean isInstanceType() { ... }", "public boolean isInterface() { ... }", "public boolean isOrdinaryFunction() { ... }", "public boolean isEquivalentTo(JSType jsType) { ... }", "public static boolean isEquivalent(JSType typeA, JSType typeB) { ... }", "public boolean equals(Object jsType) { ... }", "public int hashCode() { ... }", "public final boolean matchesInt32Context() { ... }", "public final boolean matchesUint32Context() { ... }", "public boolean matchesNumberContext() { ... }", "public boolean matchesStringContext() { ... }", "public boolean matchesObjectContext() { ... }", "public JSType findPropertyType(String propertyName) { ... }", "public boolean canBeCalled() { ... }", "public boolean canAssignTo(JSType that) { ... }", "public JSType autoboxesTo() { ... }", "public JSType unboxesTo() { ... }", "public ObjectType toObjectType() { ... }", "public final ObjectType dereference() { ... }", "public final boolean canTestForEqualityWith(JSType that) { ... }", "public TernaryValue testForEquality(JSType that) { ... }", " TernaryValue testForEqualityHelper(JSType aType, JSType bType) { ... }", "public final boolean canTestForShallowEqualityWith(JSType that) { ... }", "public boolean isNullable() { ... }", "public JSType getLeastSupertype(JSType that) { ... }", "static JSType getLeastSupertype(JSType thisType, JSType thatType) { ... }", "public JSType getGreatestSubtype(JSType that) { ... }", "static JSType getGreatestSubtype(JSType thisType, JSType thatType) { ... }", "static JSType filterNoResolvedType(JSType type) { ... }", "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) { ... }", "public abstract BooleanLiteralSet getPossibleToBooleanOutcomes() { ... }", "public TypePair getTypesUnderEquality(JSType that) { ... }", "public TypePair getTypesUnderInequality(JSType that) { ... }", "public TypePair getTypesUnderShallowEquality(JSType that) { ... }", "public TypePair getTypesUnderShallowInequality(JSType that) { ... }", "public JSType restrictByNotNullOrUndefined() { ... }", "public abstract boolean isSubtype(JSType that) { ... }", "public boolean differsFrom(JSType that) { ... }", "static boolean isSubtype(JSType thisType, JSType thatType) { ... }", "public abstract T visit(Visitor visitor) { ... }", "public final JSType forceResolve(ErrorReporter t, StaticScope scope) { ... }", "public final JSType resolve(ErrorReporter t, StaticScope scope) { ... }", "abstract JSType resolveInternal(ErrorReporter t, StaticScope scope) { ... }", " void setResolvedTypeInternal(JSType type) { ... }", "public final boolean isResolved() { ... }", "public final void clearResolved() { ... }", "static final JSType safeResolve(JSType type, ErrorReporter t, StaticScope scope) { ... }", "public boolean setValidator(Predicate validator) { ... }", "public String toDebugHashCodeString() { ... }"]}