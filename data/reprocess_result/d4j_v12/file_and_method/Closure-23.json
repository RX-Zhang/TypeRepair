{"ClassName": "PeepholeFoldConstants", "Fields": ["static final DiagnosticType INVALID_GETELEM_INDEX_ERROR;", "static final DiagnosticType INDEX_OUT_OF_BOUNDS_ERROR;", "static final DiagnosticType NEGATING_A_NON_NUMBER_ERROR;", "static final DiagnosticType BITWISE_OPERAND_OUT_OF_RANGE;", "static final DiagnosticType SHIFT_AMOUNT_OUT_OF_BOUNDS;", "static final DiagnosticType FRACTIONAL_BITWISE_OPERAND;", "private static final double MAX_FOLD_NUMBER;", "private final boolean late;"], "Methods": [" Node optimizeSubtree(Node subtree) { ... }", "private Node tryFoldBinaryOperator(Node subtree) { ... }", "private Node tryReduceVoid(Node n) { ... }", "private void tryReduceOperandsForOp(Node n) { ... }", "private void tryConvertOperandsToNumber(Node n) { ... }", "private void tryConvertToNumber(Node n) { ... }", "private Node tryFoldTypeof(Node originalTypeofNode) { ... }", "private Node tryFoldUnaryOperator(Node n) { ... }", "private Node tryFoldInstanceof(Node n, Node left, Node right) { ... }", "private Node tryFoldAssign(Node n, Node left, Node right) { ... }", "private Node tryUnfoldAssignOp(Node n, Node left, Node right) { ... }", "private Node tryFoldAndOr(Node n, Node left, Node right) { ... }", "private Node tryFoldChildAddString(Node n, Node left, Node right) { ... }", "private Node tryFoldAddConstantString(Node n, Node left, Node right) { ... }", "private Node tryFoldArithmeticOp(Node n, Node left, Node right) { ... }", "private Node performArithmeticOp(int opType, Node left, Node right) { ... }", "private Node tryFoldLeftChildOp(Node n, Node left, Node right) { ... }", "private Node tryFoldAdd(Node node, Node left, Node right) { ... }", "private Node tryFoldShift(Node n, Node left, Node right) { ... }", "private Node tryFoldComparison(Node n, Node left, Node right) { ... }", "private TernaryValue areStringsEqual(String a, String b) { ... }", "private int getNormalizedNodeType(Node n) { ... }", "private Boolean compareAsNumbers(int op, Node left, Node right) { ... }", "private boolean compareToUndefined(Node value, int op) { ... }", "private boolean isEqualityOp(int op) { ... }", "private boolean compareToNull(Node value, int op) { ... }", "private Node tryFoldCtorCall(Node n) { ... }", "private boolean inForcedStringContext(Node n) { ... }", "private Node tryFoldInForcedStringContext(Node n) { ... }", "private Node tryFoldGetElem(Node n, Node left, Node right) { ... }", "private Node tryFoldGetProp(Node n, Node left, Node right) { ... }", "private boolean isAssignmentTarget(Node n) { ... }", "private Node tryFoldArrayAccess(Node n, Node left, Node right) { ... }", "private Node tryFoldObjectPropAccess(Node n, Node left, Node right) { ... }"]}