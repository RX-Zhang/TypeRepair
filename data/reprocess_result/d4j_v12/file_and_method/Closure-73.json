{"ClassName": "CodeGenerator", "Fields": ["private static final char[] HEX_CHARS;", "private final CodeConsumer cc;", "private final CharsetEncoder outputCharsetEncoder;"], "Methods": ["public void tagAsStrict() { ... }", " void add(String str) { ... }", "private void addIdentifier(String identifier) { ... }", " void add(Node n) { ... }", " void add(Node n, Context context) { ... }", "static boolean isSimpleNumber(String s) { ... }", "static double getSimpleNumber(String s) { ... }", "private boolean isIndirectEval(Node n) { ... }", "private void addNonEmptyStatement(Node n, Context context, boolean allowNonBlockChild) { ... }", "private boolean isOneExactlyFunctionOrDo(Node n) { ... }", " void addLeftExpr(Node n, int minPrecedence, Context context) { ... }", " void addExpr(Node n, int minPrecedence) { ... }", "private void addExpr(Node n, int minPrecedence, Context context) { ... }", " void addList(Node firstInList) { ... }", " void addList(Node firstInList, boolean isArrayOrFunctionArgument) { ... }", " void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext) { ... }", " void addArrayList(Node firstInList) { ... }", " void addCaseBody(Node caseBody) { ... }", " void addAllSiblings(Node n) { ... }", "static String jsString(String s, CharsetEncoder outputCharsetEncoder) { ... }", "static String regexpEscape(String s, CharsetEncoder outputCharsetEncoder) { ... }", "static String escapeToDoubleQuotedJsString(String s) { ... }", "static String regexpEscape(String s) { ... }", "static String strEscape(String s, char quote, String doublequoteEscape, String singlequoteEscape, String backslashEscape, CharsetEncoder outputCharsetEncoder) { ... }", "static String identifierEscape(String s) { ... }", "private static int getNonEmptyChildCount(Node n, int maxCount) { ... }", "private static Node getFirstNonEmptyChild(Node n) { ... }", "private Context getContextForNonEmptyExpression(Context currentContext) { ... }", "private Context getContextForNoInOperator(Context context) { ... }", "private Context clearContextForNoInOperator(Context context) { ... }", "private static void appendHexJavaScriptRepresentation(StringBuilder sb, char c) { ... }", "private static void appendHexJavaScriptRepresentation(int codePoint, Appendable out) { ... }"]}