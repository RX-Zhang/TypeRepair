{"ClassName": "DateTimeFormatterBuilder", "Fields": ["private ArrayList iElementPairs;", "private Object iFormatter;"], "Methods": ["public DateTimeFormatter toFormatter() { ... }", "public DateTimePrinter toPrinter() { ... }", "public DateTimeParser toParser() { ... }", "public boolean canBuildFormatter() { ... }", "public boolean canBuildPrinter() { ... }", "public boolean canBuildParser() { ... }", "public void clear() { ... }", "public DateTimeFormatterBuilder append(DateTimeFormatter formatter) { ... }", "public DateTimeFormatterBuilder append(DateTimePrinter printer) { ... }", "public DateTimeFormatterBuilder append(DateTimeParser parser) { ... }", "public DateTimeFormatterBuilder append(DateTimePrinter printer, DateTimeParser parser) { ... }", "public DateTimeFormatterBuilder append(DateTimePrinter printer, DateTimeParser[] parsers) { ... }", "public DateTimeFormatterBuilder appendOptional(DateTimeParser parser) { ... }", "private void checkParser(DateTimeParser parser) { ... }", "private void checkPrinter(DateTimePrinter printer) { ... }", "private DateTimeFormatterBuilder append0(Object element) { ... }", "private DateTimeFormatterBuilder append0(DateTimePrinter printer, DateTimeParser parser) { ... }", "public DateTimeFormatterBuilder appendLiteral(char c) { ... }", "public DateTimeFormatterBuilder appendLiteral(String text) { ... }", "public DateTimeFormatterBuilder appendDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendFixedDecimal(DateTimeFieldType fieldType, int numDigits) { ... }", "public DateTimeFormatterBuilder appendSignedDecimal(DateTimeFieldType fieldType, int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendFixedSignedDecimal(DateTimeFieldType fieldType, int numDigits) { ... }", "public DateTimeFormatterBuilder appendText(DateTimeFieldType fieldType) { ... }", "public DateTimeFormatterBuilder appendShortText(DateTimeFieldType fieldType) { ... }", "public DateTimeFormatterBuilder appendFraction(DateTimeFieldType fieldType, int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendFractionOfSecond(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendFractionOfMinute(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendFractionOfHour(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendFractionOfDay(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendMillisOfSecond(int minDigits) { ... }", "public DateTimeFormatterBuilder appendMillisOfDay(int minDigits) { ... }", "public DateTimeFormatterBuilder appendSecondOfMinute(int minDigits) { ... }", "public DateTimeFormatterBuilder appendSecondOfDay(int minDigits) { ... }", "public DateTimeFormatterBuilder appendMinuteOfHour(int minDigits) { ... }", "public DateTimeFormatterBuilder appendMinuteOfDay(int minDigits) { ... }", "public DateTimeFormatterBuilder appendHourOfDay(int minDigits) { ... }", "public DateTimeFormatterBuilder appendClockhourOfDay(int minDigits) { ... }", "public DateTimeFormatterBuilder appendHourOfHalfday(int minDigits) { ... }", "public DateTimeFormatterBuilder appendClockhourOfHalfday(int minDigits) { ... }", "public DateTimeFormatterBuilder appendDayOfWeek(int minDigits) { ... }", "public DateTimeFormatterBuilder appendDayOfMonth(int minDigits) { ... }", "public DateTimeFormatterBuilder appendDayOfYear(int minDigits) { ... }", "public DateTimeFormatterBuilder appendWeekOfWeekyear(int minDigits) { ... }", "public DateTimeFormatterBuilder appendWeekyear(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendMonthOfYear(int minDigits) { ... }", "public DateTimeFormatterBuilder appendYear(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendTwoDigitYear(int pivot) { ... }", "public DateTimeFormatterBuilder appendTwoDigitYear(int pivot, boolean lenientParse) { ... }", "public DateTimeFormatterBuilder appendTwoDigitWeekyear(int pivot) { ... }", "public DateTimeFormatterBuilder appendTwoDigitWeekyear(int pivot, boolean lenientParse) { ... }", "public DateTimeFormatterBuilder appendYearOfEra(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendYearOfCentury(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendCenturyOfEra(int minDigits, int maxDigits) { ... }", "public DateTimeFormatterBuilder appendHalfdayOfDayText() { ... }", "public DateTimeFormatterBuilder appendDayOfWeekText() { ... }", "public DateTimeFormatterBuilder appendDayOfWeekShortText() { ... }", "public DateTimeFormatterBuilder appendMonthOfYearText() { ... }", "public DateTimeFormatterBuilder appendMonthOfYearShortText() { ... }", "public DateTimeFormatterBuilder appendEraText() { ... }", "public DateTimeFormatterBuilder appendTimeZoneName() { ... }", "public DateTimeFormatterBuilder appendTimeZoneName(Map parseLookup) { ... }", "public DateTimeFormatterBuilder appendTimeZoneShortName() { ... }", "public DateTimeFormatterBuilder appendTimeZoneShortName(Map parseLookup) { ... }", "public DateTimeFormatterBuilder appendTimeZoneId() { ... }", "public DateTimeFormatterBuilder appendTimeZoneOffset(String zeroOffsetText, boolean showSeparators, int minFields, int maxFields) { ... }", "public DateTimeFormatterBuilder appendTimeZoneOffset(String zeroOffsetPrintText, String zeroOffsetParseText, boolean showSeparators, int minFields, int maxFields) { ... }", "public DateTimeFormatterBuilder appendPattern(String pattern) { ... }", "private Object getFormatter() { ... }", "private boolean isPrinter(Object f) { ... }", "private boolean isParser(Object f) { ... }", "private boolean isFormatter(Object f) { ... }", "static void appendUnknownString(StringBuffer buf, int len) { ... }", "static void printUnknownString(Writer out, int len) { ... }"]}