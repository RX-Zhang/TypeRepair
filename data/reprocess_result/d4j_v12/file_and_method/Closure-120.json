{"ClassName": "ReferenceCollectingCallback", "Fields": ["private final Map referenceMap;", "private final Deque blockStack;", "private final Behavior behavior;", "private final AbstractCompiler compiler;", "private final Predicate varFilter;", "static final Behavior DO_NOTHING_BEHAVIOR;"], "Methods": ["public void process(Node externs, Node root) { ... }", "public void hotSwapScript(Node scriptRoot, Node originalRoot) { ... }", "public Iterable getAllSymbols() { ... }", "public Scope getScope(Var var) { ... }", "public ReferenceCollection getReferences(Var v) { ... }", "public void visit(NodeTraversal t, Node n, Node parent) { ... }", "public void enterScope(NodeTraversal t) { ... }", "public void exitScope(NodeTraversal t) { ... }", "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent) { ... }", "private static boolean isBlockBoundary(Node n, Node parent) { ... }", "private void addReference(Var v, Reference reference) { ... }"]}