{"ClassName": "SimplexTableau", "Fields": ["private static final String NEGATIVE_VAR_COLUMN_LABEL;", "private static final int DEFAULT_ULPS;", "private static final long serialVersionUID;", "private final LinearObjectiveFunction f;", "private final List constraints;", "private final boolean restrictToNonNegative;", "private final List columnLabels;", "private transient RealMatrix tableau;", "private final int numDecisionVariables;", "private final int numSlackVariables;", "private int numArtificialVariables;", "private final double epsilon;", "private final int maxUlps;"], "Methods": ["protected void initializeColumnLabels() { ... }", "protected RealMatrix createTableau(boolean maximize) { ... }", "public List normalizeConstraints(Collection originalConstraints) { ... }", "private LinearConstraint normalize(LinearConstraint constraint) { ... }", "protected final int getNumObjectiveFunctions() { ... }", "private int getConstraintTypeCounts(Relationship relationship) { ... }", "protected static double getInvertedCoefficientSum(RealVector coefficients) { ... }", "protected Integer getBasicRow(int col) { ... }", "protected void dropPhase1Objective() { ... }", "private void copyArray(double[] src, double[] dest) { ... }", " boolean isOptimal() { ... }", "protected PointValuePair getSolution() { ... }", "protected void divideRow(int dividendRow, double divisor) { ... }", "protected void subtractRow(int minuendRow, int subtrahendRow, double multiple) { ... }", "protected final int getWidth() { ... }", "protected final int getHeight() { ... }", "protected final double getEntry(int row, int column) { ... }", "protected final void setEntry(int row, int column, double value) { ... }", "protected final int getSlackVariableOffset() { ... }", "protected final int getArtificialVariableOffset() { ... }", "protected final int getRhsOffset() { ... }", "protected final int getNumDecisionVariables() { ... }", "protected final int getOriginalNumDecisionVariables() { ... }", "protected final int getNumSlackVariables() { ... }", "protected final int getNumArtificialVariables() { ... }", "protected final double[][] getData() { ... }", "public boolean equals(Object other) { ... }", "public int hashCode() { ... }", "private void writeObject(ObjectOutputStream oos) { ... }", "private void readObject(ObjectInputStream ois) { ... }"]}