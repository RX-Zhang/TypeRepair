{"ClassName": "Complex", "Fields": ["public static final Complex I;", "public static final Complex NaN;", "public static final Complex INF;", "public static final Complex ONE;", "public static final Complex ZERO;", "private static final long serialVersionUID;", "private final double imaginary;", "private final double real;", "private final transient boolean isNaN;", "private final transient boolean isInfinite;"], "Methods": ["public double abs() { ... }", "public Complex add(Complex rhs) { ... }", "public Complex conjugate() { ... }", "public Complex divide(Complex rhs) { ... }", "public boolean equals(Object other) { ... }", "public int hashCode() { ... }", "public double getImaginary() { ... }", "public double getReal() { ... }", "public boolean isNaN() { ... }", "public boolean isInfinite() { ... }", "public Complex multiply(Complex rhs) { ... }", "public Complex multiply(double rhs) { ... }", "public Complex negate() { ... }", "public Complex subtract(Complex rhs) { ... }", "public Complex acos() { ... }", "public Complex asin() { ... }", "public Complex atan() { ... }", "public Complex cos() { ... }", "public Complex cosh() { ... }", "public Complex exp() { ... }", "public Complex log() { ... }", "public Complex pow(Complex x) { ... }", "public Complex sin() { ... }", "public Complex sinh() { ... }", "public Complex sqrt() { ... }", "public Complex sqrt1z() { ... }", "public Complex tan() { ... }", "public Complex tanh() { ... }", "public double getArgument() { ... }", "public List nthRoot(int n) { ... }", "protected Complex createComplex(double realPart, double imaginaryPart) { ... }", "protected final Object readResolve() { ... }", "public ComplexField getField() { ... }", "public String toString() { ... }"]}