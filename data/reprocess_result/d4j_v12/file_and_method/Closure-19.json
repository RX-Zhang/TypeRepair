{"ClassName": "ChainableReverseAbstractInterpreter", "Fields": ["protected final CodingConvention convention;", "final JSTypeRegistry typeRegistry;", "private ChainableReverseAbstractInterpreter firstLink;", "private ChainableReverseAbstractInterpreter nextLink;", "private final Visitor restrictUndefinedVisitor;", "private final Visitor restrictNullVisitor;"], "Methods": ["public ChainableReverseAbstractInterpreter append(ChainableReverseAbstractInterpreter lastLink) { ... }", "public ChainableReverseAbstractInterpreter getFirst() { ... }", "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome) { ... }", "protected FlowScope nextPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome) { ... }", "protected JSType getTypeIfRefinable(Node node, FlowScope scope) { ... }", "protected void declareNameInScope(FlowScope scope, Node node, JSType type) { ... }", "protected final JSType getRestrictedWithoutUndefined(JSType type) { ... }", "protected final JSType getRestrictedWithoutNull(JSType type) { ... }", " JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue) { ... }", " JSType getNativeType(JSTypeNative typeId) { ... }", "private JSType getNativeTypeForTypeOf(String value) { ... }"]}