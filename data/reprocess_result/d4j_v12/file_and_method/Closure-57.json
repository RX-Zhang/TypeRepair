{"ClassName": "ClosureCodingConvention", "Fields": ["private static final long serialVersionUID;", "static final DiagnosticType OBJECTLIT_EXPECTED;", "private final Set propertyTestFunctions;"], "Methods": ["public void applySubclassRelationship(FunctionType parentCtor, FunctionType childCtor, SubclassType type) { ... }", "public SubclassRelationship getClassesDefinedByCall(Node callNode) { ... }", "private SubclassType typeofClassDefiningName(Node callName) { ... }", "public boolean isSuperClassReference(String propertyName) { ... }", "private boolean endsWithPrototype(Node qualifiedName) { ... }", "public String extractClassNameIfProvide(Node node, Node parent) { ... }", "public String extractClassNameIfRequire(Node node, Node parent) { ... }", "private static String extractClassNameIfGoog(Node node, Node parent, String functionName) { ... }", "public String getExportPropertyFunction() { ... }", "public String getExportSymbolFunction() { ... }", "public List identifyTypeDeclarationCall(Node n) { ... }", "public String getAbstractMethodName() { ... }", "public String getSingletonGetterClassName(Node callNode) { ... }", "public void applySingletonGetter(FunctionType functionType, FunctionType getterType, ObjectType objectType) { ... }", "public String getGlobalObject() { ... }", "public boolean isPropertyTestFunction(Node call) { ... }", "public ObjectLiteralCast getObjectLiteralCast(NodeTraversal t, Node callNode) { ... }", "public boolean isOptionalParameter(Node parameter) { ... }", "public boolean isVarArgsParameter(Node parameter) { ... }", "public boolean isPrivate(String name) { ... }", "public Collection getAssertionFunctions() { ... }", "public Bind describeFunctionBind(Node n) { ... }", "private Node safeNext(Node n) { ... }"]}