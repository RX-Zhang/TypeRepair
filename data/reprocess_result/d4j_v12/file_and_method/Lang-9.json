{"ClassName": "FastDateParser", "Fields": ["private static final long serialVersionUID;", "private static final ConcurrentMap tzsCache;", "static final Locale JAPANESE_IMPERIAL;", "private final String pattern;", "private final TimeZone timeZone;", "private final Locale locale;", "private transient Pattern parsePattern;", "private transient Strategy[] strategies;", "private transient int thisYear;", "private transient ConcurrentMap nameValues;", "private transient String currentFormatField;", "private transient Strategy nextStrategy;", "private static final Comparator IGNORE_CASE_COMPARATOR;", "private static final Pattern formatPattern;", "private static final Strategy ABBREVIATED_YEAR_STRATEGY;", "private static final Strategy ERA_STRATEGY;", "private static final Strategy DAY_OF_WEEK_STRATEGY;", "private static final Strategy AM_PM_STRATEGY;", "private static final Strategy TEXT_MONTH_STRATEGY;", "private static final Strategy NUMBER_MONTH_STRATEGY;", "private static final Strategy LITERAL_YEAR_STRATEGY;", "private static final Strategy WEEK_OF_YEAR_STRATEGY;", "private static final Strategy WEEK_OF_MONTH_STRATEGY;", "private static final Strategy DAY_OF_YEAR_STRATEGY;", "private static final Strategy DAY_OF_MONTH_STRATEGY;", "private static final Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY;", "private static final Strategy HOUR_OF_DAY_STRATEGY;", "private static final Strategy MODULO_HOUR_OF_DAY_STRATEGY;", "private static final Strategy MODULO_HOUR_STRATEGY;", "private static final Strategy HOUR_STRATEGY;", "private static final Strategy MINUTE_STRATEGY;", "private static final Strategy SECOND_STRATEGY;", "private static final Strategy MILLISECOND_STRATEGY;"], "Methods": ["private void init() { ... }", "public String getPattern() { ... }", "public TimeZone getTimeZone() { ... }", "public Locale getLocale() { ... }", " Pattern getParsePattern() { ... }", "public boolean equals(Object obj) { ... }", "public int hashCode() { ... }", "public String toString() { ... }", "private void readObject(ObjectInputStream in) { ... }", "public Object parseObject(String source) { ... }", "public Date parse(String source) { ... }", "public Object parseObject(String source, ParsePosition pos) { ... }", "public Date parse(String source, ParsePosition pos) { ... }", "private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { ... }", " KeyValue[] getDisplayNames(int field) { ... }", "private String[] toArray(Map era) { ... }", "private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) { ... }", "private static int count(String[] values) { ... }", "private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) { ... }", " int adjustYear(int twoDigitYear) { ... }", " boolean isNextNumber() { ... }", " int getFieldWidth() { ... }", "private Strategy getStrategy(String formatField) { ... }"]}