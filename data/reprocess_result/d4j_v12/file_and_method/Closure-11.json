{"ClassName": "TypeCheck", "Fields": ["static final DiagnosticType UNEXPECTED_TOKEN;", "static final DiagnosticType BAD_DELETE;", "protected static final String OVERRIDING_PROTOTYPE_WITH_NON_OBJECT;", "static final DiagnosticType DETERMINISTIC_TEST;", "static final DiagnosticType DETERMINISTIC_TEST_NO_RESULT;", "static final DiagnosticType INEXISTENT_ENUM_ELEMENT;", "static final DiagnosticType INEXISTENT_PROPERTY;", "protected static final DiagnosticType NOT_A_CONSTRUCTOR;", "static final DiagnosticType BIT_OPERATION;", "static final DiagnosticType NOT_CALLABLE;", "static final DiagnosticType CONSTRUCTOR_NOT_CALLABLE;", "static final DiagnosticType FUNCTION_MASKS_VARIABLE;", "static final DiagnosticType MULTIPLE_VAR_DEF;", "static final DiagnosticType ENUM_DUP;", "static final DiagnosticType ENUM_NOT_CONSTANT;", "static final DiagnosticType INVALID_INTERFACE_MEMBER_DECLARATION;", "static final DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY;", "static final DiagnosticType CONFLICTING_EXTENDED_TYPE;", "static final DiagnosticType CONFLICTING_IMPLEMENTED_TYPE;", "static final DiagnosticType BAD_IMPLEMENTED_TYPE;", "static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY;", "static final DiagnosticType HIDDEN_INTERFACE_PROPERTY;", "static final DiagnosticType HIDDEN_SUPERCLASS_PROPERTY_MISMATCH;", "static final DiagnosticType UNKNOWN_OVERRIDE;", "static final DiagnosticType INTERFACE_METHOD_OVERRIDE;", "static final DiagnosticType UNKNOWN_EXPR_TYPE;", "static final DiagnosticType UNRESOLVED_TYPE;", "static final DiagnosticType WRONG_ARGUMENT_COUNT;", "static final DiagnosticType ILLEGAL_IMPLICIT_CAST;", "static final DiagnosticType INCOMPATIBLE_EXTENDED_PROPERTY_TYPE;", "static final DiagnosticType EXPECTED_THIS_TYPE;", "static final DiagnosticGroup ALL_DIAGNOSTICS;", "private final AbstractCompiler compiler;", "private final TypeValidator validator;", "private final ReverseAbstractInterpreter reverseInterpreter;", "private final JSTypeRegistry typeRegistry;", "private Scope topScope;", "private ScopeCreator scopeCreator;", "private final CheckLevel reportMissingOverride;", "private final CheckLevel reportUnknownTypes;", "private boolean reportMissingProperties;", "private InferJSDocInfo inferJSDocInfo;", "private int typedCount;", "private int nullCount;", "private int unknownCount;", "private boolean inExterns;", "private int noTypeCheckSection;"], "Methods": [" TypeCheck reportMissingProperties(boolean report) { ... }", "public void process(Node externsRoot, Node jsRoot) { ... }", "public Scope processForTesting(Node externsRoot, Node jsRoot) { ... }", "public void check(Node node, boolean externs) { ... }", "private void checkNoTypeCheckSection(Node n, boolean enterSection) { ... }", "private void report(NodeTraversal t, Node n, DiagnosticType diagnosticType, String arguments) { ... }", "public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) { ... }", "public void visit(NodeTraversal t, Node n, Node parent) { ... }", "private void checkTypeofString(NodeTraversal t, Node n, String s) { ... }", "private void doPercentTypedAccounting(NodeTraversal t, Node n) { ... }", "private void visitAssign(NodeTraversal t, Node assign) { ... }", "private void checkPropertyInheritanceOnGetpropAssign(NodeTraversal t, Node assign, Node object, String property, JSDocInfo info, JSType propertyType) { ... }", "private void visitObjLitKey(NodeTraversal t, Node key, Node objlit) { ... }", "private boolean propertyIsImplicitCast(ObjectType type, String prop) { ... }", "private void checkDeclaredPropertyInheritance(NodeTraversal t, Node n, FunctionType ctorType, String propertyName, JSDocInfo info, JSType propertyType) { ... }", "private static boolean hasUnknownOrEmptySupertype(FunctionType ctor) { ... }", "private void visitInterfaceGetprop(NodeTraversal t, Node assign, Node object, String property, Node lvalue, Node rvalue) { ... }", " boolean visitName(NodeTraversal t, Node n, Node parent) { ... }", "private void visitGetProp(NodeTraversal t, Node n, Node parent) { ... }", "private void checkPropertyAccess(JSType childType, String propName, NodeTraversal t, Node n) { ... }", "private void checkPropertyAccessHelper(JSType objectType, String propName, NodeTraversal t, Node n) { ... }", "private boolean isPropertyTest(Node getProp) { ... }", "private void visitGetElem(NodeTraversal t, Node n) { ... }", "private void visitVar(NodeTraversal t, Node n) { ... }", "private void visitNew(NodeTraversal t, Node n) { ... }", "private void checkInterfaceConflictProperties(NodeTraversal t, Node n, String functionName, HashMap properties, HashMap currentProperties, ObjectType interfaceType) { ... }", "private void visitFunction(NodeTraversal t, Node n) { ... }", "private void visitCall(NodeTraversal t, Node n) { ... }", "private void visitParameterList(NodeTraversal t, Node call, FunctionType functionType) { ... }", "private void visitReturn(NodeTraversal t, Node n) { ... }", "private void visitBinaryOperator(int op, NodeTraversal t, Node n) { ... }", "private void checkEnumAlias(NodeTraversal t, JSDocInfo declInfo, Node value) { ... }", "private JSType getJSType(Node n) { ... }", "private void ensureTyped(NodeTraversal t, Node n) { ... }", "private void ensureTyped(NodeTraversal t, Node n, JSTypeNative type) { ... }", "private void ensureTyped(NodeTraversal t, Node n, JSType type) { ... }", " double getTypedPercent() { ... }", "private JSType getNativeType(JSTypeNative typeId) { ... }"]}