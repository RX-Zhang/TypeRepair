{"ClassName": "GlobalNamespace", "Fields": ["private AbstractCompiler compiler;", "private final Node root;", "private final Node externsRoot;", "private boolean inExterns;", "private Scope externsScope;", "private boolean generated;", "private int currentPreOrderIndex;", "private List globalNames;", "private Map nameMap;"], "Methods": [" boolean hasExternsRoot() { ... }", "public Node getRootNode() { ... }", "public StaticScope getParentScope() { ... }", "public Name getSlot(String name) { ... }", "public Name getOwnSlot(String name) { ... }", "public JSType getTypeOfThis() { ... }", "public Iterable getReferences(Name slot) { ... }", "public StaticScope getScope(Name slot) { ... }", "public Iterable getAllSymbols() { ... }", "private void ensureGenerated() { ... }", " List getNameForest() { ... }", " Map getNameIndex() { ... }", " void scanNewNodes(List newNodes) { ... }", "private void scanFromNode(BuildGlobalNamespace builder, JSModule module, Scope scope, Node n) { ... }", "private void process() { ... }", "private boolean isGlobalNameReference(String name, Scope s) { ... }", "private String getTopVarName(String name) { ... }", "private boolean isGlobalVarReference(String name, Scope s) { ... }", "private boolean isGlobalScope(Scope s) { ... }"]}