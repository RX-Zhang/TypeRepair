{"ClassName": "StringUtils", "Fields": ["public static final String EMPTY;", "public static final int INDEX_NOT_FOUND;", "private static final int PAD_LIMIT;"], "Methods": ["public static boolean isEmpty(CharSequence str) { ... }", "public static boolean isNotEmpty(CharSequence str) { ... }", "public static boolean isBlank(CharSequence str) { ... }", "public static boolean isNotBlank(CharSequence str) { ... }", "public static String trim(String str) { ... }", "public static String trimToNull(String str) { ... }", "public static String trimToEmpty(String str) { ... }", "public static String strip(String str) { ... }", "public static String stripToNull(String str) { ... }", "public static String stripToEmpty(String str) { ... }", "public static String strip(String str, String stripChars) { ... }", "public static String stripStart(String str, String stripChars) { ... }", "public static String stripEnd(String str, String stripChars) { ... }", "public static String[] stripAll(String[] strs) { ... }", "public static String[] stripAll(String[] strs, String stripChars) { ... }", "public static boolean equals(String str1, String str2) { ... }", "public static boolean equalsIgnoreCase(String str1, String str2) { ... }", "public static int indexOf(String str, char searchChar) { ... }", "public static int indexOf(String str, char searchChar, int startPos) { ... }", "public static int indexOf(String str, String searchStr) { ... }", "public static int ordinalIndexOf(String str, String searchStr, int ordinal) { ... }", "public static int indexOf(String str, String searchStr, int startPos) { ... }", "public static int lastIndexOf(String str, char searchChar) { ... }", "public static int lastIndexOf(String str, char searchChar, int startPos) { ... }", "public static int lastIndexOf(String str, String searchStr) { ... }", "public static int lastIndexOf(String str, String searchStr, int startPos) { ... }", "public static boolean contains(String str, char searchChar) { ... }", "public static boolean contains(String str, String searchStr) { ... }", "public static boolean containsIgnoreCase(String str, String searchStr) { ... }", "public static int indexOfAny(String str, char[] searchChars) { ... }", "public static int indexOfAny(String str, String searchChars) { ... }", "public static boolean containsAny(String str, char[] searchChars) { ... }", "public static boolean containsAny(String str, String searchChars) { ... }", "public static int indexOfAnyBut(String str, char[] searchChars) { ... }", "public static int indexOfAnyBut(String str, String searchChars) { ... }", "public static boolean containsOnly(String str, char[] valid) { ... }", "public static boolean containsOnly(String str, String validChars) { ... }", "public static boolean containsNone(String str, char[] invalidChars) { ... }", "public static boolean containsNone(String str, String invalidChars) { ... }", "public static int indexOfAny(String str, String[] searchStrs) { ... }", "public static int lastIndexOfAny(String str, String[] searchStrs) { ... }", "public static String substring(String str, int start) { ... }", "public static String substring(String str, int start, int end) { ... }", "public static String left(String str, int len) { ... }", "public static String right(String str, int len) { ... }", "public static String mid(String str, int pos, int len) { ... }", "public static String substringBefore(String str, String separator) { ... }", "public static String substringAfter(String str, String separator) { ... }", "public static String substringBeforeLast(String str, String separator) { ... }", "public static String substringAfterLast(String str, String separator) { ... }", "public static String substringBetween(String str, String tag) { ... }", "public static String substringBetween(String str, String open, String close) { ... }", "public static String[] substringsBetween(String str, String open, String close) { ... }", "public static String[] split(String str) { ... }", "public static String[] split(String str, char separatorChar) { ... }", "public static String[] split(String str, String separatorChars) { ... }", "public static String[] split(String str, String separatorChars, int max) { ... }", "public static String[] splitByWholeSeparator(String str, String separator) { ... }", "public static String[] splitByWholeSeparator(String str, String separator, int max) { ... }", "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator) { ... }", "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max) { ... }", "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, boolean preserveAllTokens) { ... }", "public static String[] splitPreserveAllTokens(String str) { ... }", "public static String[] splitPreserveAllTokens(String str, char separatorChar) { ... }", "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens) { ... }", "public static String[] splitPreserveAllTokens(String str, String separatorChars) { ... }", "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max) { ... }", "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens) { ... }", "public static String[] splitByCharacterType(String str) { ... }", "public static String[] splitByCharacterTypeCamelCase(String str) { ... }", "private static String[] splitByCharacterType(String str, boolean camelCase) { ... }", "public static String join(Object[] array) { ... }", "public static String join(Object[] array, char separator) { ... }", "public static String join(Object[] array, char separator, int startIndex, int endIndex) { ... }", "public static String join(Object[] array, String separator) { ... }", "public static String join(Object[] array, String separator, int startIndex, int endIndex) { ... }", "public static String join(Iterator iterator, char separator) { ... }", "public static String join(Iterator iterator, String separator) { ... }", "public static String join(Collection collection, char separator) { ... }", "public static String join(Collection collection, String separator) { ... }", "public static String deleteWhitespace(String str) { ... }", "public static String removeStart(String str, String remove) { ... }", "public static String removeStartIgnoreCase(String str, String remove) { ... }", "public static String removeEnd(String str, String remove) { ... }", "public static String removeEndIgnoreCase(String str, String remove) { ... }", "public static String remove(String str, String remove) { ... }", "public static String remove(String str, char remove) { ... }", "public static String replaceOnce(String text, String searchString, String replacement) { ... }", "public static String replace(String text, String searchString, String replacement) { ... }", "public static String replace(String text, String searchString, String replacement, int max) { ... }", "public static String replaceEach(String text, String[] searchList, String[] replacementList) { ... }", "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList) { ... }", "private static String replaceEach(String text, String[] searchList, String[] replacementList, boolean repeat, int timeToLive) { ... }", "public static String replaceChars(String str, char searchChar, char replaceChar) { ... }", "public static String replaceChars(String str, String searchChars, String replaceChars) { ... }", "public static String overlay(String str, String overlay, int start, int end) { ... }", "public static String chomp(String str) { ... }", "public static String chomp(String str, String separator) { ... }", "public static String chop(String str) { ... }", "public static String repeat(String str, int repeat) { ... }", "public static String repeat(String str, String separator, int repeat) { ... }", "private static String padding(int repeat, char padChar) { ... }", "public static String rightPad(String str, int size) { ... }", "public static String rightPad(String str, int size, char padChar) { ... }", "public static String rightPad(String str, int size, String padStr) { ... }", "public static String leftPad(String str, int size) { ... }", "public static String leftPad(String str, int size, char padChar) { ... }", "public static String leftPad(String str, int size, String padStr) { ... }", "public static int length(String str) { ... }", "public static String center(String str, int size) { ... }", "public static String center(String str, int size, char padChar) { ... }", "public static String center(String str, int size, String padStr) { ... }", "public static String upperCase(String str) { ... }", "public static String upperCase(String str, Locale locale) { ... }", "public static String lowerCase(String str) { ... }", "public static String lowerCase(String str, Locale locale) { ... }", "public static String capitalize(String str) { ... }", "public static String uncapitalize(String str) { ... }", "public static String swapCase(String str) { ... }", "public static int countMatches(String str, String sub) { ... }", "public static boolean isAlpha(String str) { ... }", "public static boolean isAlphaSpace(String str) { ... }", "public static boolean isAlphanumeric(String str) { ... }", "public static boolean isAlphanumericSpace(String str) { ... }", "public static boolean isAsciiPrintable(String str) { ... }", "public static boolean isNumeric(String str) { ... }", "public static boolean isNumericSpace(String str) { ... }", "public static boolean isWhitespace(String str) { ... }", "public static boolean isAllLowerCase(String str) { ... }", "public static boolean isAllUpperCase(String str) { ... }", "public static String defaultString(String str) { ... }", "public static String defaultString(String str, String defaultStr) { ... }", "public static String defaultIfEmpty(String str, String defaultStr) { ... }", "public static String reverse(String str) { ... }", "public static String reverseDelimited(String str, char separatorChar) { ... }", "public static String abbreviate(String str, int maxWidth) { ... }", "public static String abbreviate(String str, int offset, int maxWidth) { ... }", "public static String difference(String str1, String str2) { ... }", "public static int indexOfDifference(String str1, String str2) { ... }", "public static int indexOfDifference(String[] strs) { ... }", "public static String getCommonPrefix(String[] strs) { ... }", "public static int getLevenshteinDistance(String s, String t) { ... }", "public static boolean startsWith(String str, String prefix) { ... }", "public static boolean startsWithIgnoreCase(String str, String prefix) { ... }", "private static boolean startsWith(String str, String prefix, boolean ignoreCase) { ... }", "public static boolean startsWithAny(String string, String[] searchStrings) { ... }", "public static boolean endsWith(String str, String suffix) { ... }", "public static boolean endsWithIgnoreCase(String str, String suffix) { ... }", "private static boolean endsWith(String str, String suffix, boolean ignoreCase) { ... }"]}