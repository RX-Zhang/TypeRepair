{"ClassName": "StringUtils", "Fields": ["public static final String EMPTY;", "public static final int INDEX_NOT_FOUND;", "private static final int PAD_LIMIT;", "private static final Pattern WHITESPACE_BLOCK;"], "Methods": ["public static boolean isEmpty(CharSequence cs) { ... }", "public static boolean isNotEmpty(CharSequence cs) { ... }", "public static boolean isBlank(CharSequence cs) { ... }", "public static boolean isNotBlank(CharSequence cs) { ... }", "public static String trim(String str) { ... }", "public static String trimToNull(String str) { ... }", "public static String trimToEmpty(String str) { ... }", "public static String strip(String str) { ... }", "public static String stripToNull(String str) { ... }", "public static String stripToEmpty(String str) { ... }", "public static String strip(String str, String stripChars) { ... }", "public static String stripStart(String str, String stripChars) { ... }", "public static String stripEnd(String str, String stripChars) { ... }", "public static String[] stripAll(String strs) { ... }", "public static String[] stripAll(String[] strs, String stripChars) { ... }", "public static String stripAccents(String input) { ... }", "private static String removeAccentsJava6(CharSequence text) { ... }", "private static String removeAccentsSUN(CharSequence text) { ... }", "public static boolean equals(CharSequence cs1, CharSequence cs2) { ... }", "public static boolean equalsIgnoreCase(CharSequence str1, CharSequence str2) { ... }", "public static int indexOf(CharSequence seq, int searchChar) { ... }", "public static int indexOf(CharSequence seq, int searchChar, int startPos) { ... }", "public static int indexOf(CharSequence seq, CharSequence searchSeq) { ... }", "public static int indexOf(CharSequence seq, CharSequence searchSeq, int startPos) { ... }", "public static int ordinalIndexOf(CharSequence str, CharSequence searchStr, int ordinal) { ... }", "private static int ordinalIndexOf(CharSequence str, CharSequence searchStr, int ordinal, boolean lastIndex) { ... }", "public static int indexOfIgnoreCase(CharSequence str, CharSequence searchStr) { ... }", "public static int indexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos) { ... }", "public static int lastIndexOf(CharSequence seq, int searchChar) { ... }", "public static int lastIndexOf(CharSequence seq, int searchChar, int startPos) { ... }", "public static int lastIndexOf(CharSequence seq, CharSequence searchSeq) { ... }", "public static int lastOrdinalIndexOf(CharSequence str, CharSequence searchStr, int ordinal) { ... }", "public static int lastIndexOf(CharSequence seq, CharSequence searchSeq, int startPos) { ... }", "public static int lastIndexOfIgnoreCase(CharSequence str, CharSequence searchStr) { ... }", "public static int lastIndexOfIgnoreCase(CharSequence str, CharSequence searchStr, int startPos) { ... }", "public static boolean contains(CharSequence seq, int searchChar) { ... }", "public static boolean contains(CharSequence seq, CharSequence searchSeq) { ... }", "public static boolean containsIgnoreCase(CharSequence str, CharSequence searchStr) { ... }", "public static boolean containsWhitespace(CharSequence seq) { ... }", "public static int indexOfAny(CharSequence cs, char searchChars) { ... }", "public static int indexOfAny(CharSequence cs, String searchChars) { ... }", "public static boolean containsAny(CharSequence cs, char searchChars) { ... }", "public static boolean containsAny(CharSequence cs, CharSequence searchChars) { ... }", "public static int indexOfAnyBut(CharSequence cs, char searchChars) { ... }", "public static int indexOfAnyBut(CharSequence seq, CharSequence searchChars) { ... }", "public static boolean containsOnly(CharSequence cs, char valid) { ... }", "public static boolean containsOnly(CharSequence cs, String validChars) { ... }", "public static boolean containsNone(CharSequence cs, char searchChars) { ... }", "public static boolean containsNone(CharSequence cs, String invalidChars) { ... }", "public static int indexOfAny(CharSequence str, CharSequence searchStrs) { ... }", "public static int lastIndexOfAny(CharSequence str, CharSequence searchStrs) { ... }", "public static String substring(String str, int start) { ... }", "public static String substring(String str, int start, int end) { ... }", "public static String left(String str, int len) { ... }", "public static String right(String str, int len) { ... }", "public static String mid(String str, int pos, int len) { ... }", "public static String substringBefore(String str, String separator) { ... }", "public static String substringAfter(String str, String separator) { ... }", "public static String substringBeforeLast(String str, String separator) { ... }", "public static String substringAfterLast(String str, String separator) { ... }", "public static String substringBetween(String str, String tag) { ... }", "public static String substringBetween(String str, String open, String close) { ... }", "public static String[] substringsBetween(String str, String open, String close) { ... }", "public static String[] split(String str) { ... }", "public static String[] split(String str, char separatorChar) { ... }", "public static String[] split(String str, String separatorChars) { ... }", "public static String[] split(String str, String separatorChars, int max) { ... }", "public static String[] splitByWholeSeparator(String str, String separator) { ... }", "public static String[] splitByWholeSeparator(String str, String separator, int max) { ... }", "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator) { ... }", "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max) { ... }", "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, boolean preserveAllTokens) { ... }", "public static String[] splitPreserveAllTokens(String str) { ... }", "public static String[] splitPreserveAllTokens(String str, char separatorChar) { ... }", "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens) { ... }", "public static String[] splitPreserveAllTokens(String str, String separatorChars) { ... }", "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max) { ... }", "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens) { ... }", "public static String[] splitByCharacterType(String str) { ... }", "public static String[] splitByCharacterTypeCamelCase(String str) { ... }", "private static String[] splitByCharacterType(String str, boolean camelCase) { ... }", "public static String join(T elements) { ... }", "public static String join(Object[] array, char separator) { ... }", "public static String join(Object[] array, char separator, int startIndex, int endIndex) { ... }", "public static String join(Object[] array, String separator) { ... }", "public static String join(Object[] array, String separator, int startIndex, int endIndex) { ... }", "public static String join(Iterator iterator, char separator) { ... }", "public static String join(Iterator iterator, String separator) { ... }", "public static String join(Iterable iterable, char separator) { ... }", "public static String join(Iterable iterable, String separator) { ... }", "public static String deleteWhitespace(String str) { ... }", "public static String removeStart(String str, String remove) { ... }", "public static String removeStartIgnoreCase(String str, String remove) { ... }", "public static String removeEnd(String str, String remove) { ... }", "public static String removeEndIgnoreCase(String str, String remove) { ... }", "public static String remove(String str, String remove) { ... }", "public static String remove(String str, char remove) { ... }", "public static String replaceOnce(String text, String searchString, String replacement) { ... }", "public static String replace(String text, String searchString, String replacement) { ... }", "public static String replace(String text, String searchString, String replacement, int max) { ... }", "public static String replaceEach(String text, String[] searchList, String[] replacementList) { ... }", "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList) { ... }", "private static String replaceEach(String text, String[] searchList, String[] replacementList, boolean repeat, int timeToLive) { ... }", "public static String replaceChars(String str, char searchChar, char replaceChar) { ... }", "public static String replaceChars(String str, String searchChars, String replaceChars) { ... }", "public static String overlay(String str, String overlay, int start, int end) { ... }", "public static String chomp(String str) { ... }", "public static String chomp(String str, String separator) { ... }", "public static String chop(String str) { ... }", "public static String repeat(String str, int repeat) { ... }", "public static String repeat(String str, String separator, int repeat) { ... }", "public static String repeat(char ch, int repeat) { ... }", "public static String rightPad(String str, int size) { ... }", "public static String rightPad(String str, int size, char padChar) { ... }", "public static String rightPad(String str, int size, String padStr) { ... }", "public static String leftPad(String str, int size) { ... }", "public static String leftPad(String str, int size, char padChar) { ... }", "public static String leftPad(String str, int size, String padStr) { ... }", "public static int length(CharSequence cs) { ... }", "public static String center(String str, int size) { ... }", "public static String center(String str, int size, char padChar) { ... }", "public static String center(String str, int size, String padStr) { ... }", "public static String upperCase(String str) { ... }", "public static String upperCase(String str, Locale locale) { ... }", "public static String lowerCase(String str) { ... }", "public static String lowerCase(String str, Locale locale) { ... }", "public static String capitalize(String str) { ... }", "public static String uncapitalize(String str) { ... }", "public static String swapCase(String str) { ... }", "public static int countMatches(CharSequence str, CharSequence sub) { ... }", "public static boolean isAlpha(CharSequence cs) { ... }", "public static boolean isAlphaSpace(CharSequence cs) { ... }", "public static boolean isAlphanumeric(CharSequence cs) { ... }", "public static boolean isAlphanumericSpace(CharSequence cs) { ... }", "public static boolean isAsciiPrintable(CharSequence cs) { ... }", "public static boolean isNumeric(CharSequence cs) { ... }", "public static boolean isNumericSpace(CharSequence cs) { ... }", "public static boolean isWhitespace(CharSequence cs) { ... }", "public static boolean isAllLowerCase(CharSequence cs) { ... }", "public static boolean isAllUpperCase(CharSequence cs) { ... }", "public static String defaultString(String str) { ... }", "public static String defaultString(String str, String defaultStr) { ... }", "public static T defaultIfBlank(T str, T defaultStr) { ... }", "public static T defaultIfEmpty(T str, T defaultStr) { ... }", "public static String reverse(String str) { ... }", "public static String reverseDelimited(String str, char separatorChar) { ... }", "public static String abbreviate(String str, int maxWidth) { ... }", "public static String abbreviate(String str, int offset, int maxWidth) { ... }", "public static String abbreviateMiddle(String str, String middle, int length) { ... }", "public static String difference(String str1, String str2) { ... }", "public static int indexOfDifference(CharSequence cs1, CharSequence cs2) { ... }", "public static int indexOfDifference(CharSequence css) { ... }", "public static String getCommonPrefix(String strs) { ... }", "public static int getLevenshteinDistance(CharSequence s, CharSequence t) { ... }", "public static int getLevenshteinDistance(CharSequence s, CharSequence t, int threshold) { ... }", "public static boolean startsWith(CharSequence str, CharSequence prefix) { ... }", "public static boolean startsWithIgnoreCase(CharSequence str, CharSequence prefix) { ... }", "private static boolean startsWith(CharSequence str, CharSequence prefix, boolean ignoreCase) { ... }", "public static boolean startsWithAny(CharSequence string, CharSequence searchStrings) { ... }", "public static boolean endsWith(CharSequence str, CharSequence suffix) { ... }", "public static boolean endsWithIgnoreCase(CharSequence str, CharSequence suffix) { ... }", "private static boolean endsWith(CharSequence str, CharSequence suffix, boolean ignoreCase) { ... }", "public static String normalizeSpace(String str) { ... }", "public static boolean endsWithAny(CharSequence string, CharSequence searchStrings) { ... }", "public static String toString(byte[] bytes, String charsetName) { ... }"]}