{"ClassName": "UnionType", "Fields": ["private static final long serialVersionUID;", " Set alternates;"], "Methods": ["public Iterable getAlternates() { ... }", "public void forgiveUnknownNames() { ... }", "public boolean matchesNumberContext() { ... }", "public boolean matchesStringContext() { ... }", "public boolean matchesObjectContext() { ... }", "public JSType findPropertyType(String propertyName) { ... }", "public boolean canAssignTo(JSType that) { ... }", "public boolean canBeCalled() { ... }", "public JSType restrictByNotNullOrUndefined() { ... }", "public TernaryValue testForEquality(JSType that) { ... }", "public boolean isNullable() { ... }", "public boolean isUnknownType() { ... }", "public JSType getLeastSupertype(JSType that) { ... }", " JSType meet(JSType that) { ... }", "public boolean equals(Object object) { ... }", "public int hashCode() { ... }", "public boolean isUnionType() { ... }", "public boolean isObject() { ... }", "public boolean contains(JSType alternate) { ... }", "public JSType getRestrictedUnion(JSType type) { ... }", "public String toString() { ... }", "public boolean isSubtype(JSType that) { ... }", "public JSType getRestrictedTypeGivenToBooleanOutcome(boolean outcome) { ... }", "public BooleanLiteralSet getPossibleToBooleanOutcomes() { ... }", "public TypePair getTypesUnderEquality(JSType that) { ... }", "public TypePair getTypesUnderInequality(JSType that) { ... }", "public TypePair getTypesUnderShallowInequality(JSType that) { ... }", "public T visit(Visitor visitor) { ... }", " JSType resolveInternal(ErrorReporter t, StaticScope scope) { ... }"]}