{"get": "\n    public <A extends Annotation> A get(Class<A> cls)\n    {\n        if (_annotations == null) {\n            return null;\n        }\n        return (A) _annotations.get(cls);\n    }", "annotations": "\n    public Iterable<Annotation> annotations() {\n        if (_annotations == null || _annotations.size() == 0) {\n            return Collections.emptyList();\n        }\n        return _annotations.values();\n    }", "merge": "\n    public static AnnotationMap merge(AnnotationMap primary, AnnotationMap secondary)\n    {\n        if (primary == null || primary._annotations == null || primary._annotations.isEmpty()) {\n            return secondary;\n        }\n        if (secondary == null || secondary._annotations == null || secondary._annotations.isEmpty()) {\n            return primary;\n        }\n        HashMap<Class<? extends Annotation>,Annotation> annotations\n            = new HashMap<Class<? extends Annotation>,Annotation>();\n        // add secondary ones first\n        for (Annotation ann : secondary._annotations.values()) {\n            annotations.put(ann.annotationType(), ann);\n        }\n        // to be overridden by primary ones\n        for (Annotation ann : primary._annotations.values()) {\n            annotations.put(ann.annotationType(), ann);\n        }\n        return new AnnotationMap(annotations);\n    }", "size": "\n    public int size() {\n        return (_annotations == null) ? 0 : _annotations.size();\n    }", "addIfNotPresent": "\n    public boolean addIfNotPresent(Annotation ann)\n    {\n        if (_annotations == null || !_annotations.containsKey(ann.annotationType())) {\n            _add(ann);\n            return true;\n        }\n        return false;\n    }", "add": "\n    public boolean add(Annotation ann) {\n        return _add(ann);\n    }", "toString": "\n    public String toString() {\n        if (_annotations == null) {\n            return \"[null]\";\n        }\n        return _annotations.toString();\n    }", "_add": "\n    protected final boolean _add(Annotation ann) {\n        if (_annotations == null) {\n            _annotations = new HashMap<Class<? extends Annotation>,Annotation>();\n        }\n        Annotation previous = _annotations.put(ann.annotationType(), ann);\n        return (previous != null) && previous.equals(ann);\n    }"}