{"ClassName": "CSVFormat", "Fields": ["public static final CSVFormat DEFAULT;", "public static final CSVFormat EXCEL;", "public static final CSVFormat INFORMIX_UNLOAD;", "public static final CSVFormat INFORMIX_UNLOAD_CSV;", "public static final CSVFormat MYSQL;", "public static final CSVFormat POSTGRESQL_CSV;", "public static final CSVFormat POSTGRESQL_TEXT;", "public static final CSVFormat RFC4180;", "private static final long serialVersionUID;", "public static final CSVFormat TDF;", "private final boolean allowMissingColumnNames;", "private final Character commentMarker;", "private final char delimiter;", "private final Character escapeCharacter;", "private final String[] header;", "private final String[] headerComments;", "private final boolean ignoreEmptyLines;", "private final boolean ignoreHeaderCase;", "private final boolean ignoreSurroundingSpaces;", "private final String nullString;", "private final Character quoteCharacter;", "private final QuoteMode quoteMode;", "private final String recordSeparator;", "private final boolean skipHeaderRecord;", "private final boolean trailingDelimiter;", "private final boolean trim;", "private final boolean autoFlush;"], "Methods": ["private static boolean isLineBreak(char c) { ... }", "private static boolean isLineBreak(Character c) { ... }", "public static CSVFormat newFormat(char delimiter) { ... }", "public static CSVFormat valueOf(String format) { ... }", "public boolean equals(Object obj) { ... }", "public String format(Object values) { ... }", "public boolean getAllowMissingColumnNames() { ... }", "public Character getCommentMarker() { ... }", "public char getDelimiter() { ... }", "public Character getEscapeCharacter() { ... }", "public String[] getHeader() { ... }", "public String[] getHeaderComments() { ... }", "public boolean getIgnoreEmptyLines() { ... }", "public boolean getIgnoreHeaderCase() { ... }", "public boolean getIgnoreSurroundingSpaces() { ... }", "public String getNullString() { ... }", "public Character getQuoteCharacter() { ... }", "public QuoteMode getQuoteMode() { ... }", "public String getRecordSeparator() { ... }", "public boolean getSkipHeaderRecord() { ... }", "public boolean getTrailingDelimiter() { ... }", "public boolean getTrim() { ... }", "public boolean getAutoFlush() { ... }", "public int hashCode() { ... }", "public boolean isCommentMarkerSet() { ... }", "public boolean isEscapeCharacterSet() { ... }", "public boolean isNullStringSet() { ... }", "public boolean isQuoteCharacterSet() { ... }", "public CSVParser parse(Reader in) { ... }", "public CSVPrinter print(Appendable out) { ... }", "public CSVPrinter printer() { ... }", "public CSVPrinter print(File out, Charset charset) { ... }", "public CSVPrinter print(Path out, Charset charset) { ... }", "public void print(Object value, Appendable out, boolean newRecord) { ... }", "private void print(Object object, CharSequence value, int offset, int len, Appendable out, boolean newRecord) { ... }", "private void printAndEscape(CharSequence value, int offset, int len, Appendable out) { ... }", "private void printAndQuote(Object object, CharSequence value, int offset, int len, Appendable out, boolean newRecord) { ... }", "public void println(Appendable out) { ... }", "public void printRecord(Appendable out, Object values) { ... }", "public String toString() { ... }", "private String[] toStringArray(Object[] values) { ... }", "private CharSequence trim(CharSequence charSequence) { ... }", "private void validate() { ... }", "public CSVFormat withAllowMissingColumnNames() { ... }", "public CSVFormat withAllowMissingColumnNames(boolean allowMissingColumnNames) { ... }", "public CSVFormat withCommentMarker(char commentMarker) { ... }", "public CSVFormat withCommentMarker(Character commentMarker) { ... }", "public CSVFormat withDelimiter(char delimiter) { ... }", "public CSVFormat withEscape(char escape) { ... }", "public CSVFormat withEscape(Character escape) { ... }", "public CSVFormat withFirstRecordAsHeader() { ... }", "public CSVFormat withHeader(Class headerEnum) { ... }", "public CSVFormat withHeader(ResultSet resultSet) { ... }", "public CSVFormat withHeader(ResultSetMetaData metaData) { ... }", "public CSVFormat withHeader(String header) { ... }", "public CSVFormat withHeaderComments(Object headerComments) { ... }", "public CSVFormat withIgnoreEmptyLines() { ... }", "public CSVFormat withIgnoreEmptyLines(boolean ignoreEmptyLines) { ... }", "public CSVFormat withIgnoreHeaderCase() { ... }", "public CSVFormat withIgnoreHeaderCase(boolean ignoreHeaderCase) { ... }", "public CSVFormat withIgnoreSurroundingSpaces() { ... }", "public CSVFormat withIgnoreSurroundingSpaces(boolean ignoreSurroundingSpaces) { ... }", "public CSVFormat withNullString(String nullString) { ... }", "public CSVFormat withQuote(char quoteChar) { ... }", "public CSVFormat withQuote(Character quoteChar) { ... }", "public CSVFormat withQuoteMode(QuoteMode quoteModePolicy) { ... }", "public CSVFormat withRecordSeparator(char recordSeparator) { ... }", "public CSVFormat withRecordSeparator(String recordSeparator) { ... }", "public CSVFormat withSkipHeaderRecord() { ... }", "public CSVFormat withSkipHeaderRecord(boolean skipHeaderRecord) { ... }", "public CSVFormat withTrailingDelimiter() { ... }", "public CSVFormat withTrailingDelimiter(boolean trailingDelimiter) { ... }", "public CSVFormat withTrim() { ... }", "public CSVFormat withTrim(boolean trim) { ... }", "public CSVFormat withAutoFlush(boolean autoFlush) { ... }"]}