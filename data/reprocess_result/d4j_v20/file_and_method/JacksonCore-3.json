{"ClassName": "UTF8StreamJsonParser", "Fields": ["static final byte BYTE_LF;", "private static final int[] _icUTF8;", "protected static final int[] _icLatin1;", "private static final int[] _icWS;", "protected ObjectCodec _objectCodec;", "protected final BytesToNameCanonicalizer _symbols;", "protected int[] _quadBuffer;", "protected boolean _tokenIncomplete;", "private int _quad1;", "protected InputStream _inputStream;", "protected byte[] _inputBuffer;", "protected boolean _bufferRecyclable;"], "Methods": ["public ObjectCodec getCodec() { ... }", "public void setCodec(ObjectCodec c) { ... }", "public int releaseBuffered(OutputStream out) { ... }", "public Object getInputSource() { ... }", "protected final boolean loadMore() { ... }", "protected final boolean _loadToHaveAtLeast(int minAvailable) { ... }", "protected void _closeInput() { ... }", "protected void _releaseBuffers() { ... }", "public String getText() { ... }", "public String getValueAsString() { ... }", "public String getValueAsString(String defValue) { ... }", "protected final String _getText2(JsonToken t) { ... }", "public char[] getTextCharacters() { ... }", "public int getTextLength() { ... }", "public int getTextOffset() { ... }", "public byte[] getBinaryValue(Base64Variant b64variant) { ... }", "public int readBinaryValue(Base64Variant b64variant, OutputStream out) { ... }", "protected int _readBinary(Base64Variant b64variant, OutputStream out, byte[] buffer) { ... }", "public JsonLocation getTokenLocation() { ... }", "public JsonLocation getCurrentLocation() { ... }", "public JsonToken nextToken() { ... }", "private final JsonToken _nextTokenNotInObject(int i) { ... }", "private final JsonToken _nextAfterName() { ... }", "public boolean nextFieldName(SerializableString str) { ... }", "private final void _isNextTokenNameYes() { ... }", "private final boolean _isNextTokenNameMaybe(int i, SerializableString str) { ... }", "public String nextTextValue() { ... }", "public int nextIntValue(int defaultValue) { ... }", "public long nextLongValue(long defaultValue) { ... }", "public Boolean nextBooleanValue() { ... }", "protected JsonToken _parseNumber(int c) { ... }", "private final JsonToken _parserNumber2(char[] outBuf, int outPtr, boolean negative, int intPartLength) { ... }", "private final int _verifyNoLeadingZeroes() { ... }", "private final JsonToken _parseFloat(char[] outBuf, int outPtr, int c, boolean negative, int integerPartLength) { ... }", "private final void _verifyRootSpace(int ch) { ... }", "protected Name _parseName(int i) { ... }", "protected Name parseMediumName(int q2, int[] codes) { ... }", "protected Name parseLongName(int q) { ... }", "protected Name slowParseName() { ... }", "private final Name parseName(int q1, int ch, int lastQuadBytes) { ... }", "private final Name parseName(int q1, int q2, int ch, int lastQuadBytes) { ... }", "protected Name parseEscapedName(int[] quads, int qlen, int currQuad, int ch, int currQuadBytes) { ... }", "protected Name _handleOddName(int ch) { ... }", "protected Name _parseAposName() { ... }", "private final Name findName(int q1, int lastQuadBytes) { ... }", "private final Name findName(int q1, int q2, int lastQuadBytes) { ... }", "private final Name findName(int[] quads, int qlen, int lastQuad, int lastQuadBytes) { ... }", "private final Name addName(int[] quads, int qlen, int lastQuadBytes) { ... }", "protected void _finishString() { ... }", "private final void _finishString2(char[] outBuf, int outPtr) { ... }", "protected void _skipString() { ... }", "protected JsonToken _handleUnexpectedValue(int c) { ... }", "protected JsonToken _handleApos() { ... }", "protected JsonToken _handleInvalidNumberStart(int ch, boolean neg) { ... }", "protected void _matchToken(String matchStr, int i) { ... }", "private final int _skipWS() { ... }", "private final int _skipWSOrEnd() { ... }", "private final int _skipColon() { ... }", "private final void _skipComment() { ... }", "private final void _skipCComment() { ... }", "private final boolean _skipYAMLComment() { ... }", "private final void _skipLine() { ... }", "protected char _decodeEscaped() { ... }", "protected int _decodeCharForError(int firstByte) { ... }", "private final int _decodeUtf8_2(int c) { ... }", "private final int _decodeUtf8_3(int c1) { ... }", "private final int _decodeUtf8_3fast(int c1) { ... }", "private final int _decodeUtf8_4(int c) { ... }", "private final void _skipUtf8_2(int c) { ... }", "private final void _skipUtf8_3(int c) { ... }", "private final void _skipUtf8_4(int c) { ... }", "protected final void _skipCR() { ... }", "private int nextByte() { ... }", "protected void _reportInvalidToken(String matchedPart) { ... }", "protected void _reportInvalidToken(String matchedPart, String msg) { ... }", "protected void _reportInvalidChar(int c) { ... }", "protected void _reportInvalidInitial(int mask) { ... }", "protected void _reportInvalidOther(int mask) { ... }", "protected void _reportInvalidOther(int mask, int ptr) { ... }", "public static int[] growArrayBy(int[] arr, int more) { ... }", "protected final byte[] _decodeBase64(Base64Variant b64variant) { ... }"]}