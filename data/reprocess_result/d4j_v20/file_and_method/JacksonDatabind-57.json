{"ClassName": "ObjectReader", "Fields": ["private static final long serialVersionUID;", "private static final JavaType JSON_NODE_TYPE;", "protected final DeserializationConfig _config;", "protected final DefaultDeserializationContext _context;", "protected final JsonFactory _parserFactory;", "protected final boolean _unwrapRoot;", "private final TokenFilter _filter;", "protected final JavaType _valueType;", "protected final JsonDeserializer _rootDeserializer;", "protected final Object _valueToUpdate;", "protected final FormatSchema _schema;", "protected final InjectableValues _injectableValues;", "protected final DataFormatReaders _dataFormatReaders;", "protected final ConcurrentHashMap _rootDeserializers;"], "Methods": ["public Version version() { ... }", "protected ObjectReader _new(ObjectReader base, JsonFactory f) { ... }", "protected ObjectReader _new(ObjectReader base, DeserializationConfig config) { ... }", "protected ObjectReader _new(ObjectReader base, DeserializationConfig config, JavaType valueType, JsonDeserializer rootDeser, Object valueToUpdate, FormatSchema schema, InjectableValues injectableValues, DataFormatReaders dataFormatReaders) { ... }", "protected MappingIterator _newIterator(JsonParser p, DeserializationContext ctxt, JsonDeserializer deser, boolean parserManaged) { ... }", "protected JsonToken _initForReading(JsonParser p) { ... }", "protected void _initForMultiRead(JsonParser p) { ... }", "public ObjectReader with(DeserializationFeature feature) { ... }", "public ObjectReader with(DeserializationFeature first, DeserializationFeature other) { ... }", "public ObjectReader withFeatures(DeserializationFeature features) { ... }", "public ObjectReader without(DeserializationFeature feature) { ... }", "public ObjectReader without(DeserializationFeature first, DeserializationFeature other) { ... }", "public ObjectReader withoutFeatures(DeserializationFeature features) { ... }", "public ObjectReader with(JsonParser feature) { ... }", "public ObjectReader withFeatures(JsonParser features) { ... }", "public ObjectReader without(JsonParser feature) { ... }", "public ObjectReader withoutFeatures(JsonParser features) { ... }", "public ObjectReader with(FormatFeature feature) { ... }", "public ObjectReader withFeatures(FormatFeature features) { ... }", "public ObjectReader without(FormatFeature feature) { ... }", "public ObjectReader withoutFeatures(FormatFeature features) { ... }", "public ObjectReader with(DeserializationConfig config) { ... }", "public ObjectReader with(InjectableValues injectableValues) { ... }", "public ObjectReader with(JsonNodeFactory f) { ... }", "public ObjectReader with(JsonFactory f) { ... }", "public ObjectReader withRootName(String rootName) { ... }", "public ObjectReader withRootName(PropertyName rootName) { ... }", "public ObjectReader withoutRootName() { ... }", "public ObjectReader with(FormatSchema schema) { ... }", "public ObjectReader forType(JavaType valueType) { ... }", "public ObjectReader forType(Class valueType) { ... }", "public ObjectReader forType(TypeReference valueTypeRef) { ... }", "public ObjectReader withType(JavaType valueType) { ... }", "public ObjectReader withType(Class valueType) { ... }", "public ObjectReader withType(java valueType) { ... }", "public ObjectReader withType(TypeReference valueTypeRef) { ... }", "public ObjectReader withValueToUpdate(Object value) { ... }", "public ObjectReader withView(Class activeView) { ... }", "public ObjectReader with(Locale l) { ... }", "public ObjectReader with(TimeZone tz) { ... }", "public ObjectReader withHandler(DeserializationProblemHandler h) { ... }", "public ObjectReader with(Base64Variant defaultBase64) { ... }", "public ObjectReader withFormatDetection(ObjectReader readers) { ... }", "public ObjectReader withFormatDetection(DataFormatReaders readers) { ... }", "public ObjectReader with(ContextAttributes attrs) { ... }", "public ObjectReader withAttributes(Map attrs) { ... }", "public ObjectReader withAttribute(Object key, Object value) { ... }", "public ObjectReader withoutAttribute(Object key) { ... }", "protected ObjectReader _with(DeserializationConfig newConfig) { ... }", "public boolean isEnabled(DeserializationFeature f) { ... }", "public boolean isEnabled(MapperFeature f) { ... }", "public boolean isEnabled(JsonParser f) { ... }", "public DeserializationConfig getConfig() { ... }", "public JsonFactory getFactory() { ... }", "public TypeFactory getTypeFactory() { ... }", "public ContextAttributes getAttributes() { ... }", "public InjectableValues getInjectableValues() { ... }", "public T readValue(JsonParser p) { ... }", "public T readValue(JsonParser p, Class valueType) { ... }", "public T readValue(JsonParser p, TypeReference valueTypeRef) { ... }", "public T readValue(JsonParser p, ResolvedType valueType) { ... }", "public T readValue(JsonParser p, JavaType valueType) { ... }", "public Iterator readValues(JsonParser p, Class valueType) { ... }", "public Iterator readValues(JsonParser p, TypeReference valueTypeRef) { ... }", "public Iterator readValues(JsonParser p, ResolvedType valueType) { ... }", "public Iterator readValues(JsonParser p, JavaType valueType) { ... }", "public JsonNode createArrayNode() { ... }", "public JsonNode createObjectNode() { ... }", "public JsonParser treeAsTokens(TreeNode n) { ... }", "public T readTree(JsonParser p) { ... }", "public void writeTree(JsonGenerator jgen, TreeNode rootNode) { ... }", "public T readValue(InputStream src) { ... }", "public T readValue(Reader src) { ... }", "public T readValue(String src) { ... }", "public T readValue(byte[] src) { ... }", "public T readValue(byte[] src, int offset, int length) { ... }", "public T readValue(File src) { ... }", "public T readValue(URL src) { ... }", "public T readValue(JsonNode src) { ... }", "public JsonNode readTree(InputStream in) { ... }", "public JsonNode readTree(Reader r) { ... }", "public JsonNode readTree(String json) { ... }", "public MappingIterator readValues(JsonParser p) { ... }", "public MappingIterator readValues(InputStream src) { ... }", "public MappingIterator readValues(Reader src) { ... }", "public MappingIterator readValues(String json) { ... }", "public MappingIterator readValues(byte[] src, int offset, int length) { ... }", "public final MappingIterator readValues(byte[] src) { ... }", "public MappingIterator readValues(File src) { ... }", "public MappingIterator readValues(URL src) { ... }", "public T treeToValue(TreeNode n, Class valueType) { ... }", "public void writeValue(JsonGenerator gen, Object value) { ... }", "protected Object _bind(JsonParser p, Object valueToUpdate) { ... }", "protected JsonParser _considerFilter(JsonParser p, boolean multiValue) { ... }", "protected Object _bindAndClose(JsonParser p) { ... }", "protected JsonNode _bindAndCloseAsTree(JsonParser p) { ... }", "protected JsonNode _bindAsTree(JsonParser p) { ... }", "protected MappingIterator _bindAndReadValues(JsonParser p) { ... }", "protected Object _unwrapAndDeserialize(JsonParser p, DeserializationContext ctxt, JavaType rootType, JsonDeserializer deser) { ... }", "protected Object _detectBindAndClose(byte[] src, int offset, int length) { ... }", "protected Object _detectBindAndClose(DataFormatReaders match, boolean forceClosing) { ... }", "protected MappingIterator _detectBindAndReadValues(DataFormatReaders match, boolean forceClosing) { ... }", "protected JsonNode _detectBindAndCloseAsTree(InputStream in) { ... }", "protected void _reportUnkownFormat(DataFormatReaders detector, DataFormatReaders match) { ... }", "protected void _verifySchemaType(FormatSchema schema) { ... }", "protected DefaultDeserializationContext createDeserializationContext(JsonParser p) { ... }", "protected void _reportUndetectableSource(Object src) { ... }", "protected InputStream _inputStream(URL src) { ... }", "protected InputStream _inputStream(File f) { ... }", "protected JsonDeserializer _findRootDeserializer(DeserializationContext ctxt) { ... }", "protected JsonDeserializer _findTreeDeserializer(DeserializationContext ctxt) { ... }", "protected JsonDeserializer _prefetchRootDeserializer(JavaType valueType) { ... }", "public ObjectReader at(String value) { ... }", "public ObjectReader at(JsonPointer pointer) { ... }"]}