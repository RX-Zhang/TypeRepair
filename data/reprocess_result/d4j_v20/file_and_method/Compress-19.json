{"ClassName": "Zip64ExtendedInformationExtraField", "Fields": ["static final ZipShort HEADER_ID;", "private static final String LFH_MUST_HAVE_BOTH_SIZES_MSG;", "private static final byte[] EMPTY;", "private ZipEightByteInteger size;", "private ZipEightByteInteger compressedSize;", "private ZipEightByteInteger relativeHeaderOffset;", "private ZipLong diskStart;", "private byte[] rawCentralDirectoryData;"], "Methods": ["public ZipShort getHeaderId() { ... }", "public ZipShort getLocalFileDataLength() { ... }", "public ZipShort getCentralDirectoryLength() { ... }", "public byte[] getLocalFileDataData() { ... }", "public byte[] getCentralDirectoryData() { ... }", "public void parseFromLocalFileData(byte[] buffer, int offset, int length) { ... }", "public void parseFromCentralDirectoryData(byte[] buffer, int offset, int length) { ... }", "public void reparseCentralDirectoryData(boolean hasUncompressedSize, boolean hasCompressedSize, boolean hasRelativeHeaderOffset, boolean hasDiskStart) { ... }", "public ZipEightByteInteger getSize() { ... }", "public void setSize(ZipEightByteInteger size) { ... }", "public ZipEightByteInteger getCompressedSize() { ... }", "public void setCompressedSize(ZipEightByteInteger compressedSize) { ... }", "public ZipEightByteInteger getRelativeHeaderOffset() { ... }", "public void setRelativeHeaderOffset(ZipEightByteInteger rho) { ... }", "public ZipLong getDiskStartNumber() { ... }", "public void setDiskStartNumber(ZipLong ds) { ... }", "private int addSizes(byte[] data) { ... }"]}