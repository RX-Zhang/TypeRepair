{"ClassName": "DeserializerCache", "Fields": ["private static final long serialVersionUID;", "protected final ConcurrentHashMap _cachedDeserializers;", "protected final HashMap _incompleteDeserializers;"], "Methods": [" Object writeReplace() { ... }", "public int cachedDeserializersCount() { ... }", "public void flushCachedDeserializers() { ... }", "public JsonDeserializer findValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType propertyType) { ... }", "public KeyDeserializer findKeyDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type) { ... }", "public boolean hasValueDeserializerFor(DeserializationContext ctxt, DeserializerFactory factory, JavaType type) { ... }", "protected JsonDeserializer _findCachedDeserializer(JavaType type) { ... }", "protected JsonDeserializer _createAndCacheValueDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type) { ... }", "protected JsonDeserializer _createAndCache2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type) { ... }", "protected JsonDeserializer _createDeserializer(DeserializationContext ctxt, DeserializerFactory factory, JavaType type) { ... }", "protected JsonDeserializer _createDeserializer2(DeserializationContext ctxt, DeserializerFactory factory, JavaType type, BeanDescription beanDesc) { ... }", "protected JsonDeserializer findDeserializerFromAnnotation(DeserializationContext ctxt, Annotated ann) { ... }", "protected JsonDeserializer findConvertingDeserializer(DeserializationContext ctxt, Annotated a, JsonDeserializer deser) { ... }", "protected Converter findConverter(DeserializationContext ctxt, Annotated a) { ... }", "private JavaType modifyTypeByAnnotation(DeserializationContext ctxt, Annotated a, JavaType type) { ... }", "private boolean _hasCustomHandlers(JavaType t) { ... }", "private Class _verifyAsClass(Object src, String methodName, Class noneClass) { ... }", "protected JsonDeserializer _handleUnknownValueDeserializer(DeserializationContext ctxt, JavaType type) { ... }", "protected KeyDeserializer _handleUnknownKeyDeserializer(DeserializationContext ctxt, JavaType type) { ... }"]}