{"ClassName": "ObjectMapper", "Fields": ["private static final long serialVersionUID;", "private static final JavaType JSON_NODE_TYPE;", "protected static final ClassIntrospector DEFAULT_INTROSPECTOR;", "protected static final AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR;", "protected static final VisibilityChecker STD_VISIBILITY_CHECKER;", "protected static final PrettyPrinter _defaultPrettyPrinter;", "protected static final BaseSettings DEFAULT_BASE;", "protected final JsonFactory _jsonFactory;", "protected TypeFactory _typeFactory;", "protected InjectableValues _injectableValues;", "protected SubtypeResolver _subtypeResolver;", "protected final RootNameLookup _rootNames;", "protected final HashMap _mixInAnnotations;", "protected SerializationConfig _serializationConfig;", "protected DefaultSerializerProvider _serializerProvider;", "protected SerializerFactory _serializerFactory;", "protected DeserializationConfig _deserializationConfig;", "protected DefaultDeserializationContext _deserializationContext;", "protected final ConcurrentHashMap _rootDeserializers;"], "Methods": ["public ObjectMapper copy() { ... }", "protected void _checkInvalidCopy(Class exp) { ... }", "public Version version() { ... }", "public ObjectMapper registerModule(Module module) { ... }", "public ObjectMapper registerModules(Module modules) { ... }", "public ObjectMapper registerModules(Iterable modules) { ... }", "public static List findModules() { ... }", "public static List findModules(ClassLoader classLoader) { ... }", "public ObjectMapper findAndRegisterModules() { ... }", "public SerializationConfig getSerializationConfig() { ... }", "public DeserializationConfig getDeserializationConfig() { ... }", "public DeserializationContext getDeserializationContext() { ... }", "public ObjectMapper setSerializerFactory(SerializerFactory f) { ... }", "public SerializerFactory getSerializerFactory() { ... }", "public ObjectMapper setSerializerProvider(DefaultSerializerProvider p) { ... }", "public SerializerProvider getSerializerProvider() { ... }", "public final void setMixInAnnotations(Map sourceMixins) { ... }", "public final void addMixInAnnotations(Class target, Class mixinSource) { ... }", "public final ObjectMapper addMixIn(Class target, Class mixinSource) { ... }", "public final Class findMixInClassFor(Class cls) { ... }", "public final int mixInCount() { ... }", "public VisibilityChecker getVisibilityChecker() { ... }", "public void setVisibilityChecker(VisibilityChecker vc) { ... }", "public ObjectMapper setVisibility(PropertyAccessor forMethod, JsonAutoDetect visibility) { ... }", "public SubtypeResolver getSubtypeResolver() { ... }", "public ObjectMapper setSubtypeResolver(SubtypeResolver str) { ... }", "public ObjectMapper setAnnotationIntrospector(AnnotationIntrospector ai) { ... }", "public ObjectMapper setAnnotationIntrospectors(AnnotationIntrospector serializerAI, AnnotationIntrospector deserializerAI) { ... }", "public ObjectMapper setPropertyNamingStrategy(PropertyNamingStrategy s) { ... }", "public ObjectMapper setSerializationInclusion(JsonInclude incl) { ... }", "public ObjectMapper enableDefaultTyping() { ... }", "public ObjectMapper enableDefaultTyping(DefaultTyping dti) { ... }", "public ObjectMapper enableDefaultTyping(DefaultTyping applicability, JsonTypeInfo includeAs) { ... }", "public ObjectMapper enableDefaultTypingAsProperty(DefaultTyping applicability, String propertyName) { ... }", "public ObjectMapper disableDefaultTyping() { ... }", "public ObjectMapper setDefaultTyping(TypeResolverBuilder typer) { ... }", "public void registerSubtypes(Class classes) { ... }", "public void registerSubtypes(NamedType types) { ... }", "public TypeFactory getTypeFactory() { ... }", "public ObjectMapper setTypeFactory(TypeFactory f) { ... }", "public JavaType constructType(Type t) { ... }", "public ObjectMapper setNodeFactory(JsonNodeFactory f) { ... }", "public ObjectMapper addHandler(DeserializationProblemHandler h) { ... }", "public ObjectMapper clearProblemHandlers() { ... }", "public ObjectMapper setConfig(DeserializationConfig config) { ... }", "public void setFilters(FilterProvider filterProvider) { ... }", "public ObjectMapper setBase64Variant(Base64Variant v) { ... }", "public ObjectMapper setConfig(SerializationConfig config) { ... }", "public JsonFactory getFactory() { ... }", "public JsonFactory getJsonFactory() { ... }", "public ObjectMapper setDateFormat(DateFormat dateFormat) { ... }", "public Object setHandlerInstantiator(HandlerInstantiator hi) { ... }", "public ObjectMapper setInjectableValues(InjectableValues injectableValues) { ... }", "public ObjectMapper setLocale(Locale l) { ... }", "public ObjectMapper setTimeZone(TimeZone tz) { ... }", "public ObjectMapper configure(MapperFeature f, boolean state) { ... }", "public ObjectMapper configure(SerializationFeature f, boolean state) { ... }", "public ObjectMapper configure(DeserializationFeature f, boolean state) { ... }", "public ObjectMapper configure(JsonParser f, boolean state) { ... }", "public ObjectMapper configure(JsonGenerator f, boolean state) { ... }", "public ObjectMapper enable(MapperFeature f) { ... }", "public ObjectMapper disable(MapperFeature f) { ... }", "public ObjectMapper enable(DeserializationFeature feature) { ... }", "public ObjectMapper enable(DeserializationFeature first, DeserializationFeature f) { ... }", "public ObjectMapper disable(DeserializationFeature feature) { ... }", "public ObjectMapper disable(DeserializationFeature first, DeserializationFeature f) { ... }", "public ObjectMapper enable(SerializationFeature f) { ... }", "public ObjectMapper enable(SerializationFeature first, SerializationFeature f) { ... }", "public ObjectMapper disable(SerializationFeature f) { ... }", "public ObjectMapper disable(SerializationFeature first, SerializationFeature f) { ... }", "public boolean isEnabled(MapperFeature f) { ... }", "public boolean isEnabled(SerializationFeature f) { ... }", "public boolean isEnabled(DeserializationFeature f) { ... }", "public boolean isEnabled(JsonFactory f) { ... }", "public boolean isEnabled(JsonParser f) { ... }", "public boolean isEnabled(JsonGenerator f) { ... }", "public JsonNodeFactory getNodeFactory() { ... }", "public T readValue(JsonParser jp, Class valueType) { ... }", "public T readValue(JsonParser jp, TypeReference valueTypeRef) { ... }", "public final T readValue(JsonParser jp, ResolvedType valueType) { ... }", "public T readValue(JsonParser jp, JavaType valueType) { ... }", "public T readTree(JsonParser jp) { ... }", "public MappingIterator readValues(JsonParser jp, ResolvedType valueType) { ... }", "public MappingIterator readValues(JsonParser jp, JavaType valueType) { ... }", "public MappingIterator readValues(JsonParser jp, Class valueType) { ... }", "public MappingIterator readValues(JsonParser jp, TypeReference valueTypeRef) { ... }", "public JsonNode readTree(InputStream in) { ... }", "public JsonNode readTree(Reader r) { ... }", "public JsonNode readTree(String content) { ... }", "public JsonNode readTree(byte[] content) { ... }", "public JsonNode readTree(File file) { ... }", "public JsonNode readTree(URL source) { ... }", "public void writeValue(JsonGenerator jgen, Object value) { ... }", "public void writeTree(JsonGenerator jgen, TreeNode rootNode) { ... }", "public void writeTree(JsonGenerator jgen, JsonNode rootNode) { ... }", "public ObjectNode createObjectNode() { ... }", "public ArrayNode createArrayNode() { ... }", "public JsonParser treeAsTokens(TreeNode n) { ... }", "public T treeToValue(TreeNode n, Class valueType) { ... }", "public T valueToTree(Object fromValue) { ... }", "public boolean canSerialize(Class type) { ... }", "public boolean canSerialize(Class type, AtomicReference cause) { ... }", "public boolean canDeserialize(JavaType type) { ... }", "public boolean canDeserialize(JavaType type, AtomicReference cause) { ... }", "public T readValue(File src, Class valueType) { ... }", "public T readValue(File src, TypeReference valueTypeRef) { ... }", "public T readValue(File src, JavaType valueType) { ... }", "public T readValue(URL src, Class valueType) { ... }", "public T readValue(URL src, TypeReference valueTypeRef) { ... }", "public T readValue(URL src, JavaType valueType) { ... }", "public T readValue(String content, Class valueType) { ... }", "public T readValue(String content, TypeReference valueTypeRef) { ... }", "public T readValue(String content, JavaType valueType) { ... }", "public T readValue(Reader src, Class valueType) { ... }", "public T readValue(Reader src, TypeReference valueTypeRef) { ... }", "public T readValue(Reader src, JavaType valueType) { ... }", "public T readValue(InputStream src, Class valueType) { ... }", "public T readValue(InputStream src, TypeReference valueTypeRef) { ... }", "public T readValue(InputStream src, JavaType valueType) { ... }", "public T readValue(byte[] src, Class valueType) { ... }", "public T readValue(byte[] src, int offset, int len, Class valueType) { ... }", "public T readValue(byte[] src, TypeReference valueTypeRef) { ... }", "public T readValue(byte[] src, int offset, int len, TypeReference valueTypeRef) { ... }", "public T readValue(byte[] src, JavaType valueType) { ... }", "public T readValue(byte[] src, int offset, int len, JavaType valueType) { ... }", "public void writeValue(File resultFile, Object value) { ... }", "public void writeValue(OutputStream out, Object value) { ... }", "public void writeValue(Writer w, Object value) { ... }", "public String writeValueAsString(Object value) { ... }", "public byte[] writeValueAsBytes(Object value) { ... }", "public ObjectWriter writer() { ... }", "public ObjectWriter writer(SerializationFeature feature) { ... }", "public ObjectWriter writer(SerializationFeature first, SerializationFeature other) { ... }", "public ObjectWriter writer(DateFormat df) { ... }", "public ObjectWriter writerWithView(Class serializationView) { ... }", "public ObjectWriter writerWithType(Class rootType) { ... }", "public ObjectWriter writerWithType(TypeReference rootType) { ... }", "public ObjectWriter writerWithType(JavaType rootType) { ... }", "public ObjectWriter writer(PrettyPrinter pp) { ... }", "public ObjectWriter writerWithDefaultPrettyPrinter() { ... }", "public ObjectWriter writer(FilterProvider filterProvider) { ... }", "public ObjectWriter writer(FormatSchema schema) { ... }", "public ObjectWriter writer(Base64Variant defaultBase64) { ... }", "public ObjectWriter writer(CharacterEscapes escapes) { ... }", "public ObjectWriter writer(ContextAttributes attrs) { ... }", "public ObjectReader reader() { ... }", "public ObjectReader reader(DeserializationFeature feature) { ... }", "public ObjectReader reader(DeserializationFeature first, DeserializationFeature other) { ... }", "public ObjectReader readerForUpdating(Object valueToUpdate) { ... }", "public ObjectReader reader(JavaType type) { ... }", "public ObjectReader reader(Class type) { ... }", "public ObjectReader reader(TypeReference type) { ... }", "public ObjectReader reader(JsonNodeFactory f) { ... }", "public ObjectReader reader(FormatSchema schema) { ... }", "public ObjectReader reader(InjectableValues injectableValues) { ... }", "public ObjectReader readerWithView(Class view) { ... }", "public ObjectReader reader(Base64Variant defaultBase64) { ... }", "public ObjectReader reader(ContextAttributes attrs) { ... }", "public T convertValue(Object fromValue, Class toValueType) { ... }", "public T convertValue(Object fromValue, TypeReference toValueTypeRef) { ... }", "public T convertValue(Object fromValue, JavaType toValueType) { ... }", "protected Object _convert(Object fromValue, JavaType toValueType) { ... }", "public com generateJsonSchema(Class t) { ... }", "public void acceptJsonFormatVisitor(Class type, JsonFormatVisitorWrapper visitor) { ... }", "public void acceptJsonFormatVisitor(JavaType type, JsonFormatVisitorWrapper visitor) { ... }", "protected DefaultSerializerProvider _serializerProvider(SerializationConfig config) { ... }", "protected PrettyPrinter _defaultPrettyPrinter() { ... }", "protected final void _configAndWriteValue(JsonGenerator jgen, Object value) { ... }", "protected final void _configAndWriteValue(JsonGenerator jgen, Object value, Class viewClass) { ... }", "private final void _configAndWriteCloseable(JsonGenerator jgen, Object value, SerializationConfig cfg) { ... }", "private final void _writeCloseableValue(JsonGenerator jgen, Object value, SerializationConfig cfg) { ... }", "protected DefaultDeserializationContext createDeserializationContext(JsonParser jp, DeserializationConfig cfg) { ... }", "protected Object _readValue(DeserializationConfig cfg, JsonParser jp, JavaType valueType) { ... }", "protected Object _readMapAndClose(JsonParser jp, JavaType valueType) { ... }", "protected JsonToken _initForReading(JsonParser jp) { ... }", "protected Object _unwrapAndDeserialize(JsonParser jp, DeserializationContext ctxt, DeserializationConfig config, JavaType rootType, JsonDeserializer deser) { ... }", "protected JsonDeserializer _findRootDeserializer(DeserializationContext ctxt, JavaType valueType) { ... }", "protected void _verifySchemaType(FormatSchema schema) { ... }"]}