{"ClassName": "JsonGenerator", "Fields": ["protected PrettyPrinter _cfgPrettyPrinter;"], "Methods": ["public abstract JsonGenerator setCodec(ObjectCodec oc) { ... }", "public abstract ObjectCodec getCodec() { ... }", "public abstract Version version() { ... }", "public abstract JsonGenerator enable(Feature f) { ... }", "public abstract JsonGenerator disable(Feature f) { ... }", "public final JsonGenerator configure(Feature f, boolean state) { ... }", "public abstract boolean isEnabled(Feature f) { ... }", "public abstract int getFeatureMask() { ... }", "public abstract JsonGenerator setFeatureMask(int values) { ... }", "public JsonGenerator overrideStdFeatures(int values, int mask) { ... }", "public int getFormatFeatures() { ... }", "public JsonGenerator overrideFormatFeatures(int values, int mask) { ... }", "public void setSchema(FormatSchema schema) { ... }", "public FormatSchema getSchema() { ... }", "public JsonGenerator setPrettyPrinter(PrettyPrinter pp) { ... }", "public PrettyPrinter getPrettyPrinter() { ... }", "public abstract JsonGenerator useDefaultPrettyPrinter() { ... }", "public JsonGenerator setHighestNonEscapedChar(int charCode) { ... }", "public int getHighestEscapedChar() { ... }", "public CharacterEscapes getCharacterEscapes() { ... }", "public JsonGenerator setCharacterEscapes(CharacterEscapes esc) { ... }", "public JsonGenerator setRootValueSeparator(SerializableString sep) { ... }", "public Object getOutputTarget() { ... }", "public int getOutputBuffered() { ... }", "public Object getCurrentValue() { ... }", "public void setCurrentValue(Object v) { ... }", "public boolean canUseSchema(FormatSchema schema) { ... }", "public boolean canWriteObjectId() { ... }", "public boolean canWriteTypeId() { ... }", "public boolean canWriteBinaryNatively() { ... }", "public boolean canOmitFields() { ... }", "public boolean canWriteFormattedNumbers() { ... }", "public abstract void writeStartArray() { ... }", "public void writeStartArray(int size) { ... }", "public abstract void writeEndArray() { ... }", "public abstract void writeStartObject() { ... }", "public void writeStartObject(Object forValue) { ... }", "public abstract void writeEndObject() { ... }", "public abstract void writeFieldName(String name) { ... }", "public abstract void writeFieldName(SerializableString name) { ... }", "public void writeFieldId(long id) { ... }", "public void writeArray(int[] array, int offset, int length) { ... }", "public void writeArray(long[] array, int offset, int length) { ... }", "public void writeArray(double[] array, int offset, int length) { ... }", "public abstract void writeString(String text) { ... }", "public abstract void writeString(char[] text, int offset, int len) { ... }", "public abstract void writeString(SerializableString text) { ... }", "public abstract void writeRawUTF8String(byte[] text, int offset, int length) { ... }", "public abstract void writeUTF8String(byte[] text, int offset, int length) { ... }", "public abstract void writeRaw(String text) { ... }", "public abstract void writeRaw(String text, int offset, int len) { ... }", "public abstract void writeRaw(char[] text, int offset, int len) { ... }", "public abstract void writeRaw(char c) { ... }", "public void writeRaw(SerializableString raw) { ... }", "public abstract void writeRawValue(String text) { ... }", "public abstract void writeRawValue(String text, int offset, int len) { ... }", "public abstract void writeRawValue(char[] text, int offset, int len) { ... }", "public void writeRawValue(SerializableString raw) { ... }", "public abstract void writeBinary(Base64Variant bv, byte[] data, int offset, int len) { ... }", "public void writeBinary(byte[] data, int offset, int len) { ... }", "public void writeBinary(byte[] data) { ... }", "public int writeBinary(InputStream data, int dataLength) { ... }", "public abstract int writeBinary(Base64Variant bv, InputStream data, int dataLength) { ... }", "public void writeNumber(short v) { ... }", "public abstract void writeNumber(int v) { ... }", "public abstract void writeNumber(long v) { ... }", "public abstract void writeNumber(BigInteger v) { ... }", "public abstract void writeNumber(double v) { ... }", "public abstract void writeNumber(float v) { ... }", "public abstract void writeNumber(BigDecimal v) { ... }", "public abstract void writeNumber(String encodedValue) { ... }", "public abstract void writeBoolean(boolean state) { ... }", "public abstract void writeNull() { ... }", "public void writeEmbeddedObject(Object object) { ... }", "public void writeObjectId(Object id) { ... }", "public void writeObjectRef(Object id) { ... }", "public void writeTypeId(Object id) { ... }", "public abstract void writeObject(Object pojo) { ... }", "public abstract void writeTree(TreeNode rootNode) { ... }", "public void writeStringField(String fieldName, String value) { ... }", "public final void writeBooleanField(String fieldName, boolean value) { ... }", "public final void writeNullField(String fieldName) { ... }", "public final void writeNumberField(String fieldName, int value) { ... }", "public final void writeNumberField(String fieldName, long value) { ... }", "public final void writeNumberField(String fieldName, double value) { ... }", "public final void writeNumberField(String fieldName, float value) { ... }", "public final void writeNumberField(String fieldName, BigDecimal value) { ... }", "public final void writeBinaryField(String fieldName, byte[] data) { ... }", "public final void writeArrayFieldStart(String fieldName) { ... }", "public final void writeObjectFieldStart(String fieldName) { ... }", "public final void writeObjectField(String fieldName, Object pojo) { ... }", "public void writeOmittedField(String fieldName) { ... }", "public void copyCurrentEvent(JsonParser p) { ... }", "public void copyCurrentStructure(JsonParser p) { ... }", "public abstract JsonStreamContext getOutputContext() { ... }", "public abstract void flush() { ... }", "public abstract boolean isClosed() { ... }", "public abstract void close() { ... }", "protected void _reportError(String msg) { ... }", "protected final void _throwInternal() { ... }", "protected void _reportUnsupportedOperation() { ... }", "protected final void _verifyOffsets(int arrayLength, int offset, int length) { ... }", "protected void _writeSimpleObject(Object value) { ... }"]}