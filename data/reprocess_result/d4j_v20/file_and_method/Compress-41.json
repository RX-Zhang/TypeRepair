{"ClassName": "ZipArchiveInputStream", "Fields": ["private final ZipEncoding zipEncoding;", "final String encoding;", "private final boolean useUnicodeExtraFields;", "private final InputStream in;", "private final Inflater inf;", "private final ByteBuffer buf;", "private CurrentEntry current;", "private boolean closed;", "private boolean hitCentralDirectory;", "private ByteArrayInputStream lastStoredEntry;", "private boolean allowStoredEntriesWithDataDescriptor;", "private static final int LFH_LEN;", "private static final int CFH_LEN;", "private static final long TWO_EXP_32;", "private final byte[] LFH_BUF;", "private final byte[] SKIP_BUF;", "private final byte[] SHORT_BUF;", "private final byte[] WORD_BUF;", "private final byte[] TWO_DWORD_BUF;", "private int entriesRead;", "private static final byte[] LFH;", "private static final byte[] CFH;", "private static final byte[] DD;"], "Methods": ["public ZipArchiveEntry getNextZipEntry() { ... }", "private void readFirstLocalFileHeader(byte[] lfh) { ... }", "private void processZip64Extra(ZipLong size, ZipLong cSize) { ... }", "public ArchiveEntry getNextEntry() { ... }", "public boolean canReadEntryData(ArchiveEntry ae) { ... }", "public int read(byte[] buffer, int offset, int length) { ... }", "private int readStored(byte[] buffer, int offset, int length) { ... }", "private int readDeflated(byte[] buffer, int offset, int length) { ... }", "private int readFromInflater(byte[] buffer, int offset, int length) { ... }", "public void close() { ... }", "public long skip(long value) { ... }", "public static boolean matches(byte[] signature, int length) { ... }", "private static boolean checksig(byte[] signature, byte[] expected) { ... }", "private void closeEntry() { ... }", "private boolean currentEntryHasOutstandingBytes() { ... }", "private void drainCurrentEntryData() { ... }", "private long getBytesInflated() { ... }", "private int fill() { ... }", "private void readFully(byte[] b) { ... }", "private void readDataDescriptor() { ... }", "private boolean supportsDataDescriptorFor(ZipArchiveEntry entry) { ... }", "private void readStoredEntry() { ... }", "private boolean bufferContainsSignature(ByteArrayOutputStream bos, int offset, int lastRead, int expectedDDLen) { ... }", "private int cacheBytesRead(ByteArrayOutputStream bos, int offset, int lastRead, int expecteDDLen) { ... }", "private void pushback(byte[] buf, int offset, int length) { ... }", "private void skipRemainderOfArchive() { ... }", "private void findEocdRecord() { ... }", "private void realSkip(long value) { ... }", "private int readOneByte() { ... }", "private boolean isFirstByteOfEocdSig(int b) { ... }"]}