============================= test session starts ==============================
platform linux -- Python 3.10.16, pytest-8.3.5, pluggy-1.6.0
rootdir: /home/jn_cndt4/project/code repair/BugAgent/BugAgent_1.3/data/QuixBugs_test
plugins: anyio-4.9.0, timeout-2.4.0
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 5 items

python_testcases/test_pascal.py .FFFF                                    [100%]

=================================== FAILURES ===================================
______________________ test_pascal[input_data1-expected1] ______________________

input_data = [2], expected = [[1], [1, 1]]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_pascal(input_data, expected):
>       assert pascal(*input_data) == expected
E       assert [[1], [1]] == [[1], [1, 1]]
E         
E         At index 1 diff: [1] != [1, 1]
E         Use -v to get more diff

python_testcases/test_pascal.py:15: AssertionError
______________________ test_pascal[input_data2-expected2] ______________________

input_data = [3], expected = [[1], [1, 1], [1, 2, 1]]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_pascal(input_data, expected):
>       assert pascal(*input_data) == expected

python_testcases/test_pascal.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 3

    def pascal(n):
        rows = [[1]]
        for r in range(1, n):
            row = []
            for c in range(0, r):
                upleft = rows[r - 1][c - 1] if c > 0 else 0
>               upright = rows[r - 1][c] if c < r else 0
E               IndexError: list index out of range

python_programs/pascal.py:8: IndexError
______________________ test_pascal[input_data3-expected3] ______________________

input_data = [4], expected = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_pascal(input_data, expected):
>       assert pascal(*input_data) == expected

python_testcases/test_pascal.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 4

    def pascal(n):
        rows = [[1]]
        for r in range(1, n):
            row = []
            for c in range(0, r):
                upleft = rows[r - 1][c - 1] if c > 0 else 0
>               upright = rows[r - 1][c] if c < r else 0
E               IndexError: list index out of range

python_programs/pascal.py:8: IndexError
______________________ test_pascal[input_data4-expected4] ______________________

input_data = [5]
expected = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_pascal(input_data, expected):
>       assert pascal(*input_data) == expected

python_testcases/test_pascal.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

n = 5

    def pascal(n):
        rows = [[1]]
        for r in range(1, n):
            row = []
            for c in range(0, r):
                upleft = rows[r - 1][c - 1] if c > 0 else 0
>               upright = rows[r - 1][c] if c < r else 0
E               IndexError: list index out of range

python_programs/pascal.py:8: IndexError
=========================== short test summary info ============================
FAILED python_testcases/test_pascal.py::test_pascal[input_data1-expected1] - ...
FAILED python_testcases/test_pascal.py::test_pascal[input_data2-expected2] - ...
FAILED python_testcases/test_pascal.py::test_pascal[input_data3-expected3] - ...
FAILED python_testcases/test_pascal.py::test_pascal[input_data4-expected4] - ...
========================= 4 failed, 1 passed in 0.03s ==========================
