============================= test session starts ==============================
platform linux -- Python 3.10.16, pytest-8.3.5, pluggy-1.6.0
rootdir: /home/jn_cndt4/project/code repair/BugAgent/BugAgent_1.3/data/QuixBugs_test
plugins: anyio-4.9.0, timeout-2.4.0
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 7 items

python_testcases/test_levenshtein.py FFFsF.F                             [100%]

=================================== FAILURES ===================================
_______________________ test_levenshtein[input_data0-3] ________________________

input_data = ['electron', 'neutron'], expected = 3

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_levenshtein(input_data, expected):
        if input_data == [
            "amanaplanacanalpanama",
            "docnoteidissentafastneverpreventsafatnessidietoncod",
        ]:
            pytest.skip("Takes too long to pass!")
    
>       assert levenshtein(*input_data) == expected
E       AssertionError: assert 8 == 3
E        +  where 8 = levenshtein(*['electron', 'neutron'])

python_testcases/test_levenshtein.py:21: AssertionError
_______________________ test_levenshtein[input_data1-3] ________________________

input_data = ['kitten', 'sitting'], expected = 3

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_levenshtein(input_data, expected):
        if input_data == [
            "amanaplanacanalpanama",
            "docnoteidissentafastneverpreventsafatnessidietoncod",
        ]:
            pytest.skip("Takes too long to pass!")
    
>       assert levenshtein(*input_data) == expected
E       AssertionError: assert 7 == 3
E        +  where 7 = levenshtein(*['kitten', 'sitting'])

python_testcases/test_levenshtein.py:21: AssertionError
_______________________ test_levenshtein[input_data2-8] ________________________

input_data = ['rosettacode', 'raisethysword'], expected = 8

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_levenshtein(input_data, expected):
        if input_data == [
            "amanaplanacanalpanama",
            "docnoteidissentafastneverpreventsafatnessidietoncod",
        ]:
            pytest.skip("Takes too long to pass!")
    
>       assert levenshtein(*input_data) == expected
E       AssertionError: assert 13 == 8
E        +  where 13 = levenshtein(*['rosettacode', 'raisethysword'])

python_testcases/test_levenshtein.py:21: AssertionError
_______________________ test_levenshtein[input_data4-2] ________________________

input_data = ['abcdefg', 'gabcdef'], expected = 2

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_levenshtein(input_data, expected):
        if input_data == [
            "amanaplanacanalpanama",
            "docnoteidissentafastneverpreventsafatnessidietoncod",
        ]:
            pytest.skip("Takes too long to pass!")
    
>       assert levenshtein(*input_data) == expected
E       AssertionError: assert 7 == 2
E        +  where 7 = levenshtein(*['abcdefg', 'gabcdef'])

python_testcases/test_levenshtein.py:21: AssertionError
_______________________ test_levenshtein[input_data6-4] ________________________

input_data = ['hello', 'olleh'], expected = 4

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_levenshtein(input_data, expected):
        if input_data == [
            "amanaplanacanalpanama",
            "docnoteidissentafastneverpreventsafatnessidietoncod",
        ]:
            pytest.skip("Takes too long to pass!")
    
>       assert levenshtein(*input_data) == expected
E       AssertionError: assert 5 == 4
E        +  where 5 = levenshtein(*['hello', 'olleh'])

python_testcases/test_levenshtein.py:21: AssertionError
=========================== short test summary info ============================
FAILED python_testcases/test_levenshtein.py::test_levenshtein[input_data0-3]
FAILED python_testcases/test_levenshtein.py::test_levenshtein[input_data1-3]
FAILED python_testcases/test_levenshtein.py::test_levenshtein[input_data2-8]
FAILED python_testcases/test_levenshtein.py::test_levenshtein[input_data4-2]
FAILED python_testcases/test_levenshtein.py::test_levenshtein[input_data6-4]
==================== 5 failed, 1 passed, 1 skipped in 1.69s ====================
