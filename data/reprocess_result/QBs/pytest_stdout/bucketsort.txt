============================= test session starts ==============================
platform linux -- Python 3.10.16, pytest-8.3.5, pluggy-1.6.0
rootdir: /home/jn_cndt4/project/code repair/BugAgent/BugAgent_1.3/data/QuixBugs_test
plugins: anyio-4.9.0, timeout-2.4.0
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 7 items

python_testcases/test_bucketsort.py .FFFFFF                              [100%]

=================================== FAILURES ===================================
____________________ test_bucketsort[input_data1-expected1] ____________________

input_data = [[3, 11, 2, 9, 1, 5], 12], expected = [1, 2, 3, 5, 9, 11]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_bucketsort(input_data, expected):
>       assert bucketsort(*input_data) == expected
E       assert [0, 0, 0, 1, 1, 1, ...] == [1, 2, 3, 5, 9, 11]
E         
E         At index 0 diff: 0 != 1
E         Left contains 25 more items, first extra item: 1
E         Use -v to get more diff

python_testcases/test_bucketsort.py:15: AssertionError
____________________ test_bucketsort[input_data2-expected2] ____________________

input_data = [[3, 2, 4, 2, 3, 5], 6], expected = [2, 2, 3, 3, 4, 5]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_bucketsort(input_data, expected):
>       assert bucketsort(*input_data) == expected
E       assert [0, 0, 0, 1, 1, 2, ...] == [2, 2, 3, 3, 4, 5]
E         
E         At index 0 diff: 0 != 2
E         Left contains 13 more items, first extra item: 2
E         Use -v to get more diff

python_testcases/test_bucketsort.py:15: AssertionError
____________________ test_bucketsort[input_data3-expected3] ____________________

input_data = [[1, 3, 4, 6, 4, 2, ...], 10], expected = [1, 1, 2, 2, 3, 4, ...]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_bucketsort(input_data, expected):
>       assert bucketsort(*input_data) == expected
E       assert [0, 1, 1, 1, 2, 2, ...] == [1, 1, 2, 2, 3, 4, ...]
E         
E         At index 0 diff: 0 != 1
E         Left contains 31 more items, first extra item: 3
E         Use -v to get more diff

python_testcases/test_bucketsort.py:15: AssertionError
____________________ test_bucketsort[input_data4-expected4] ____________________

input_data = [[20, 19, 18, 17, 16, 15, ...], 21]
expected = [11, 12, 13, 14, 15, 16, ...]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_bucketsort(input_data, expected):
>       assert bucketsort(*input_data) == expected
E       assert [0, 0, 0, 0, 0, 0, ...] == [11, 12, 13, 14, 15, 16, ...]
E         
E         At index 0 diff: 0 != 11
E         Left contains 145 more items, first extra item: 0
E         Use -v to get more diff

python_testcases/test_bucketsort.py:15: AssertionError
____________________ test_bucketsort[input_data5-expected5] ____________________

input_data = [[20, 21, 22, 23, 24, 25, ...], 30]
expected = [20, 21, 22, 23, 24, 25, ...]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_bucketsort(input_data, expected):
>       assert bucketsort(*input_data) == expected
E       assert [0, 0, 0, 0, 0, 0, ...] == [20, 21, 22, 23, 24, 25, ...]
E         
E         At index 0 diff: 0 != 20
E         Left contains 235 more items, first extra item: 0
E         Use -v to get more diff

python_testcases/test_bucketsort.py:15: AssertionError
____________________ test_bucketsort[input_data6-expected6] ____________________

input_data = [[8, 5, 3, 1, 9, 6, ...], 10], expected = [0, 1, 2, 3, 4, 5, ...]

    @pytest.mark.parametrize("input_data,expected", testdata)
    def test_bucketsort(input_data, expected):
>       assert bucketsort(*input_data) == expected
E       assert [0, 0, 0, 0, 0, 0, ...] == [0, 1, 2, 3, 4, 5, ...]
E         
E         At index 1 diff: 0 != 1
E         Left contains 39 more items, first extra item: 1
E         Use -v to get more diff

python_testcases/test_bucketsort.py:15: AssertionError
=========================== short test summary info ============================
FAILED python_testcases/test_bucketsort.py::test_bucketsort[input_data1-expected1]
FAILED python_testcases/test_bucketsort.py::test_bucketsort[input_data2-expected2]
FAILED python_testcases/test_bucketsort.py::test_bucketsort[input_data3-expected3]
FAILED python_testcases/test_bucketsort.py::test_bucketsort[input_data4-expected4]
FAILED python_testcases/test_bucketsort.py::test_bucketsort[input_data5-expected5]
FAILED python_testcases/test_bucketsort.py::test_bucketsort[input_data6-expected6]
========================= 6 failed, 1 passed in 0.03s ==========================
