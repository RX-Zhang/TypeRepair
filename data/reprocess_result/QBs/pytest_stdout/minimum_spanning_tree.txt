============================= test session starts ==============================
platform linux -- Python 3.10.16, pytest-8.3.5, pluggy-1.6.0
rootdir: /home/jn_cndt4/project/code repair/BugAgent/BugAgent_1.3/data/QuixBugs_test
plugins: anyio-4.9.0, timeout-2.4.0
timeout: 5.0s
timeout method: signal
timeout func_only: False
collected 3 items

python_testcases/test_minimum_spanning_tree.py FFF                       [100%]

=================================== FAILURES ===================================
____________________________________ test1 _____________________________________

    def test1():
        """Case 1: Simple tree input.
        Output: (1, 2) (3, 4) (1, 4)
        """
    
>       result = minimum_spanning_tree(
            {
                (1, 2): 10,
                (2, 3): 15,
                (3, 4): 10,
                (1, 4): 10,
            }
        )

python_testcases/test_minimum_spanning_tree.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

weight_by_edge = {(1, 2): 10, (1, 4): 10, (2, 3): 15, (3, 4): 10}

    def minimum_spanning_tree(weight_by_edge):
        group_by_node = {}
        mst_edges = set()
    
        for edge in sorted(weight_by_edge, key=weight_by_edge.__getitem__):
            u, v = edge
            if group_by_node.setdefault(u, {u}) != group_by_node.setdefault(v, {v}):
                mst_edges.add(edge)
                group_by_node[u].update(group_by_node[v])
>               for node in group_by_node[v]:
E               RuntimeError: Set changed size during iteration

python_programs/minimum_spanning_tree.py:11: RuntimeError
____________________________________ test2 _____________________________________

    def test2():
        """Case 2: Strongly connected tree input.
        Output: (2, 5) (1, 3) (2, 3) (4, 6) (3, 6)
        """
    
>       result = minimum_spanning_tree(
            {
                (1, 2): 6,
                (1, 3): 1,
                (1, 4): 5,
                (2, 3): 5,
                (2, 5): 3,
                (3, 4): 5,
                (3, 5): 6,
                (3, 6): 4,
                (4, 6): 2,
                (5, 6): 6,
            }
        )

python_testcases/test_minimum_spanning_tree.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

weight_by_edge = {(1, 2): 6, (1, 3): 1, (1, 4): 5, (2, 3): 5, ...}

    def minimum_spanning_tree(weight_by_edge):
        group_by_node = {}
        mst_edges = set()
    
        for edge in sorted(weight_by_edge, key=weight_by_edge.__getitem__):
            u, v = edge
            if group_by_node.setdefault(u, {u}) != group_by_node.setdefault(v, {v}):
                mst_edges.add(edge)
                group_by_node[u].update(group_by_node[v])
>               for node in group_by_node[v]:
E               RuntimeError: Set changed size during iteration

python_programs/minimum_spanning_tree.py:11: RuntimeError
____________________________________ test3 _____________________________________

    def test3():
        """Case 3: Minimum spanning tree input.
        Output: (1, 2) (1, 3) (2, 4)
        """
    
>       result = minimum_spanning_tree(
            {
                (1, 2): 6,
                (1, 3): 1,
                (2, 4): 2,
            }
        )

python_testcases/test_minimum_spanning_tree.py:54: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

weight_by_edge = {(1, 2): 6, (1, 3): 1, (2, 4): 2}

    def minimum_spanning_tree(weight_by_edge):
        group_by_node = {}
        mst_edges = set()
    
        for edge in sorted(weight_by_edge, key=weight_by_edge.__getitem__):
            u, v = edge
            if group_by_node.setdefault(u, {u}) != group_by_node.setdefault(v, {v}):
                mst_edges.add(edge)
                group_by_node[u].update(group_by_node[v])
>               for node in group_by_node[v]:
E               RuntimeError: Set changed size during iteration

python_programs/minimum_spanning_tree.py:11: RuntimeError
=========================== short test summary info ============================
FAILED python_testcases/test_minimum_spanning_tree.py::test1 - RuntimeError: ...
FAILED python_testcases/test_minimum_spanning_tree.py::test2 - RuntimeError: ...
FAILED python_testcases/test_minimum_spanning_tree.py::test3 - RuntimeError: ...
============================== 3 failed in 0.03s ===============================
